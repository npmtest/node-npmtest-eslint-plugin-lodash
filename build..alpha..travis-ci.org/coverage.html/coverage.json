{"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_lodash */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/lib.npmtest_eslint_plugin_lodash.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/lib.npmtest_eslint_plugin_lodash.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":65}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":71}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_lodash */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_eslint_plugin_lodash = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_eslint_plugin_lodash = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":64}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":78},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-eslint-plugin-lodash && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_eslint_plugin_lodash */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_eslint_plugin_lodash","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_eslint_plugin_lodash.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_eslint_plugin_lodash.rollup.js'] =","            local.assetsDict['/assets.npmtest_eslint_plugin_lodash.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_eslint_plugin_lodash.__dirname + '/lib.npmtest_eslint_plugin_lodash.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":41,"6":1,"7":1,"8":41},"b":{},"f":{"1":41,"2":41},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":65},"end":{"line":6,"column":78}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":40},"end":{"line":53,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":0},"end":{"line":8,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":34}},"6":{"start":{"line":9,"column":0},"end":{"line":51,"column":2}},"7":{"start":{"line":52,"column":0},"end":{"line":110,"column":2}},"8":{"start":{"line":54,"column":8},"end":{"line":54,"column":42}}},"branchMap":{},"code":["'use strict';","","var fs = require('fs');","var path = require('path');","var _ = require('lodash');","var rules = fs.readdirSync(path.resolve(__dirname, 'rules')).map(function (f) {","    return f.replace(/\\.js$/, '');","});","var recommended = {","    rules: {","        'lodash/callback-binding': 2,","        'lodash/chain-style': [2, 'as-needed'],","        'lodash/chaining': 2,","        'lodash/collection-method-value': 2,","        'lodash/collection-return': 2,","        'lodash/consistent-compose': [2, \"flow\"],","        'lodash/identity-shorthand': [2, 'always'],","        'lodash/import-scope': [2],","        'lodash/matches-prop-shorthand': [2, 'always'],","        'lodash/matches-shorthand': [2, 'always', 3],","        'lodash/no-commit': 2,","        'lodash/no-double-unwrap': 2,","        'lodash/no-extra-args': 2,","        'lodash/no-unbound-this': 2,","        'lodash/path-style': [2, 'string'],","        'lodash/prefer-compact': 2,","        'lodash/prefer-constant': 2,","        'lodash/prefer-filter': [2, 3],","        'lodash/prefer-flat-map': 2,","        'lodash/prefer-get': [2, 3],","        'lodash/prefer-includes': [2, { includeNative: true }],","        'lodash/prefer-invoke-map': 2,","        'lodash/prefer-is-nil': 2,","        'lodash/prefer-lodash-chain': 2,","        'lodash/prefer-lodash-method': 2,","        'lodash/prefer-lodash-typecheck': 2,","        'lodash/prefer-map': 2,","        'lodash/prefer-matches': [2, 3],","        'lodash/prefer-noop': 2,","        'lodash/prefer-over-quantifier': 2,","        'lodash/prefer-reject': [2, 3],","        'lodash/prefer-some': [2, { includeNative: true }],","        'lodash/prefer-startswith': 2,","        'lodash/prefer-thru': 2,","        'lodash/prefer-times': 2,","        'lodash/prefer-wrapper-method': 2,","        'lodash/preferred-alias': 2,","        'lodash/prop-shorthand': [2, 'always'],","        'lodash/unwrap': 2","    }","};","module.exports = {","    rules: _.zipObject(rules, rules.map(function (rule) {","        return require('./rules/' + rule);","    })),","    configs: {","        recommended: recommended,","        canonical: _.defaultsDeep({","            settings: { lodash: { pragma: '_' } },","            rules: {","                'lodash/import-scope': [2, 'full']","            }","        }, recommended),","        v3: {","            settings: {","                lodash: {","                    version: 3,","                    pragma: '_'","                }","            },","            rules: {","                'lodash/callback-binding': 2,","                'lodash/chain-style': [2, 'as-needed'],","                'lodash/chaining': [2, 'always'],","                'lodash/collection-method-value': 2,","                'lodash/collection-return': 2,","                'lodash/consistent-compose': [2, \"flow\"],","                'lodash/import-scope': [2, 'full'],","                'lodash/identity-shorthand': [2, 'always'],","                'lodash/matches-prop-shorthand': [2, 'always'],","                'lodash/matches-shorthand': [2, 'always', 3],","                'lodash/no-commit': 2,","                'lodash/no-double-unwrap': 2,","                'lodash/no-extra-args': 2,","                'lodash/path-style': [2, 'string'],","","                'lodash/prefer-compact': 2,","                'lodash/prefer-constant': 2,","                'lodash/prefer-filter': [2, 3],","                'lodash/prefer-get': [2, 3],","                'lodash/prefer-includes': [2, { includeNative: true }],","                'lodash/prefer-lodash-chain': 2,","                'lodash/prefer-lodash-method': 2,","                'lodash/prefer-lodash-typecheck': 2,","                'lodash/prefer-map': 2,","                'lodash/prefer-matches': [2, 3],","                'lodash/prefer-noop': 2,","                'lodash/prefer-reject': [2, 3],","                'lodash/prefer-some': [2, { includeNative: true }],","                'lodash/prefer-startswith': 2,","                'lodash/prefer-thru': 2,","                'lodash/prefer-times': 2,","                'lodash/prefer-wrapper-method': 2,","                'lodash/preferred-alias': 2,","                'lodash/prop-shorthand': [2, 'always'],","                'lodash/unwrap': 2","            }","        }","    }","};"],"l":{"3":1,"4":1,"5":1,"6":1,"7":41,"9":1,"52":1,"54":41}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/callback-binding.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/callback-binding.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isBound","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":31}}},"3":{"name":"_","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":42}}},"4":{"name":"_","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":48}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":50,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":71}},"3":{"start":{"line":18,"column":8},"end":{"line":19,"column":52}},"4":{"start":{"line":21,"column":8},"end":{"line":22,"column":51}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":123}},"6":{"start":{"line":25,"column":8},"end":{"line":25,"column":50}},"7":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"8":{"start":{"line":28,"column":12},"end":{"line":28,"column":123}},"9":{"start":{"line":31,"column":8},"end":{"line":46,"column":10}},"10":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"11":{"start":{"line":34,"column":20},"end":{"line":34,"column":122}},"12":{"start":{"line":38,"column":16},"end":{"line":38,"column":41}},"13":{"start":{"line":40,"column":16},"end":{"line":40,"column":72}},"14":{"start":{"line":41,"column":16},"end":{"line":41,"column":69}},"15":{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},"16":{"start":{"line":43,"column":20},"end":{"line":43,"column":97}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":82}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":23}},{"start":{"line":28,"column":27},"end":{"line":28,"column":57}},{"start":{"line":28,"column":61},"end":{"line":28,"column":91}},{"start":{"line":28,"column":95},"end":{"line":28,"column":122}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":16}},{"start":{"line":33,"column":16},"end":{"line":33,"column":16}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":16}},{"start":{"line":42,"column":16},"end":{"line":42,"column":16}}]},"4":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":40}},{"start":{"line":42,"column":45},"end":{"line":42,"column":56}},{"start":{"line":42,"column":60},"end":{"line":42,"column":93}},{"start":{"line":42,"column":97},"end":{"line":42,"column":109}},{"start":{"line":42,"column":113},"end":{"line":42,"column":146}}]}},"code":["/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","'use strict';","","/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            getMethodName = _require2.getMethodName;","","        var _require$getSettings = require('../util/settingsUtil').getSettings(context),","            version = _require$getSettings.version;","","        var methodsWithExtraArg = ['reduce', 'reduceRight', 'transform', 'find', 'findLast', 'findIndex', 'findLastIndex'];","        var includes = require('lodash/includes');","","        function isBound(node) {","            return node && node.type === 'CallExpression' && getMethodName(node) === 'bind' && node.arguments.length === 1;","        }","","        var callExpressionReporters = {","            3: function _(node, iteratee) {","                if (isBound(iteratee)) {","                    context.report(iteratee.callee.property, 'Unnecessary bind, pass `thisArg` to lodash method instead');","                }","            },","            4: function _(node, iteratee, _ref) {","                var method = _ref.method;","","                var hasExtraArg = includes(methodsWithExtraArg, method);","                var iterateeIndex = node.arguments.indexOf(iteratee);","                if (iterateeIndex !== -1 && (hasExtraArg && node.arguments[iterateeIndex + 2] || !hasExtraArg && node.arguments[iterateeIndex + 1])) {","                    context.report(iteratee, 'Do not use Lodash 3 thisArg, use binding instead');","                }","            }","        };","","        return getLodashMethodVisitors(context, callExpressionReporters[version]);","    }","};"],"l":{"13":1,"15":0,"18":0,"21":0,"24":0,"25":0,"27":1,"28":0,"31":0,"33":0,"34":0,"38":0,"40":0,"41":0,"42":0,"43":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/chain-style.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/chain-style.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"create","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":37}}},"2":{"name":"asNeeded","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":49}}},"3":{"name":"implicit","line":47,"loc":{"start":{"line":47,"column":22},"end":{"line":47,"column":46}}},"4":{"name":"explicit","line":52,"loc":{"start":{"line":52,"column":22},"end":{"line":52,"column":46}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":63,"column":2}},"2":{"start":{"line":21,"column":8},"end":{"line":24,"column":53}},"3":{"start":{"line":26,"column":8},"end":{"line":27,"column":50}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":54}},"5":{"start":{"line":30,"column":8},"end":{"line":30,"column":44}},"6":{"start":{"line":31,"column":8},"end":{"line":57,"column":10}},"7":{"start":{"line":33,"column":16},"end":{"line":45,"column":17}},"8":{"start":{"line":34,"column":20},"end":{"line":34,"column":50}},"9":{"start":{"line":35,"column":20},"end":{"line":35,"column":39}},"10":{"start":{"line":36,"column":20},"end":{"line":41,"column":21}},"11":{"start":{"line":37,"column":24},"end":{"line":39,"column":25}},"12":{"start":{"line":38,"column":28},"end":{"line":38,"column":42}},"13":{"start":{"line":40,"column":24},"end":{"line":40,"column":50}},"14":{"start":{"line":42,"column":20},"end":{"line":44,"column":21}},"15":{"start":{"line":43,"column":24},"end":{"line":43,"column":78}},"16":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"17":{"start":{"line":49,"column":20},"end":{"line":49,"column":73}},"18":{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},"19":{"start":{"line":54,"column":20},"end":{"line":54,"column":73}},"20":{"start":{"line":59,"column":8},"end":{"line":59,"column":57}},"21":{"start":{"line":60,"column":8},"end":{"line":60,"column":92}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":24}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":16}},{"start":{"line":33,"column":16},"end":{"line":33,"column":16}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":27},"end":{"line":36,"column":45}},{"start":{"line":36,"column":49},"end":{"line":36,"column":79}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":24}},{"start":{"line":37,"column":24},"end":{"line":37,"column":24}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":28},"end":{"line":37,"column":55}},{"start":{"line":37,"column":59},"end":{"line":37,"column":103}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":20}},{"start":{"line":42,"column":20},"end":{"line":42,"column":20}}]},"6":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":24},"end":{"line":42,"column":42}},{"start":{"line":42,"column":46},"end":{"line":42,"column":53}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":16}},{"start":{"line":53,"column":16},"end":{"line":53,"column":16}}]},"9":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":57},"end":{"line":60,"column":75}},{"start":{"line":60,"column":79},"end":{"line":60,"column":90}}]}},"code":["/**"," * @fileoverview Rule to enforce a specific chain style"," */","'use strict';","","/**"," * @fileoverview Rule to enforce a specific chain style"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            enum: ['as-needed', 'implicit', 'explicit']","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isChainable = _require.isChainable,","            isChainBreaker = _require.isChainBreaker;","","        var _require2 = require('../util/astUtil'),","            isMethodCall = _require2.isMethodCall;","","        var lodashContext = getLodashContext(context);","        var version = lodashContext.version;","        var callExpressionVisitors = {","            'as-needed': function asNeeded(node) {","                if (lodashContext.isExplicitChainStart(node)) {","                    var curr = node.parent.parent;","                    var needed = false;","                    while (isMethodCall(curr) && !isChainBreaker(curr, version)) {","                        if (!isChainable(curr, version) && !isChainBreaker(curr.parent.parent, version)) {","                            needed = true;","                        }","                        curr = curr.parent.parent;","                    }","                    if (isMethodCall(curr) && !needed) {","                        context.report(node, 'Unnecessary explicit chaining');","                    }","                }","            },","            implicit: function implicit(node) {","                if (lodashContext.isExplicitChainStart(node)) {","                    context.report(node, 'Do not use explicit chaining');","                }","            },","            explicit: function explicit(node) {","                if (lodashContext.isImplicitChainStart(node)) {","                    context.report(node, 'Do not use implicit chaining');","                }","            }","        };","","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = callExpressionVisitors[context.options[0] || 'as-needed'];","        return visitors;","    }","};"],"l":{"13":1,"21":0,"26":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"42":0,"43":0,"48":0,"49":0,"53":0,"54":0,"59":0,"60":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/chaining.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/chaining.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":37}}},"2":{"name":"isBeforeChainBreaker","line":43,"loc":{"start":{"line":43,"column":8},"end":{"line":43,"column":44}}},"3":{"name":"isNestedNLevels","line":47,"loc":{"start":{"line":47,"column":8},"end":{"line":47,"column":42}}},"4":{"name":"always","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":42}}},"5":{"name":"never","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":40}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":77,"column":2}},"2":{"start":{"line":24,"column":8},"end":{"line":26,"column":53}},"3":{"start":{"line":28,"column":8},"end":{"line":31,"column":66}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":31}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":54}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":44}},"7":{"start":{"line":36,"column":8},"end":{"line":36,"column":46}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":75}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":56}},"11":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"12":{"start":{"line":44,"column":12},"end":{"line":44,"column":63}},"13":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"14":{"start":{"line":48,"column":12},"end":{"line":52,"column":13}},"15":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"16":{"start":{"line":50,"column":19},"end":{"line":52,"column":13}},"17":{"start":{"line":51,"column":16},"end":{"line":51,"column":65}},"18":{"start":{"line":55,"column":8},"end":{"line":71,"column":10}},"19":{"start":{"line":57,"column":16},"end":{"line":64,"column":17}},"20":{"start":{"line":58,"column":20},"end":{"line":58,"column":75}},"21":{"start":{"line":59,"column":23},"end":{"line":64,"column":17}},"22":{"start":{"line":60,"column":20},"end":{"line":60,"column":55}},"23":{"start":{"line":61,"column":20},"end":{"line":63,"column":21}},"24":{"start":{"line":62,"column":24},"end":{"line":62,"column":95}},"25":{"start":{"line":67,"column":16},"end":{"line":69,"column":17}},"26":{"start":{"line":68,"column":20},"end":{"line":68,"column":82}},"27":{"start":{"line":73,"column":8},"end":{"line":73,"column":57}},"28":{"start":{"line":74,"column":8},"end":{"line":74,"column":63}},"29":{"start":{"line":75,"column":8},"end":{"line":75,"column":24}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":37}},{"start":{"line":38,"column":41},"end":{"line":38,"column":48}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":24},"end":{"line":39,"column":56}},{"start":{"line":39,"column":60},"end":{"line":39,"column":74}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":19},"end":{"line":50,"column":19}},{"start":{"line":50,"column":19},"end":{"line":50,"column":19}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":23},"end":{"line":50,"column":55}},{"start":{"line":50,"column":59},"end":{"line":50,"column":102}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":16}},{"start":{"line":57,"column":16},"end":{"line":57,"column":16}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":23},"end":{"line":59,"column":23}},{"start":{"line":59,"column":23},"end":{"line":59,"column":23}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":20},"end":{"line":61,"column":20}},{"start":{"line":61,"column":20},"end":{"line":61,"column":20}}]},"9":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":24},"end":{"line":61,"column":47}},{"start":{"line":61,"column":52},"end":{"line":61,"column":75}},{"start":{"line":61,"column":79},"end":{"line":61,"column":110}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if the expression could be better expressed as a chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if the expression could be better expressed as a chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            enum: ['always', 'never']","        }, {","            type: 'integer',","            minimum: 2","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isChainBreaker = _require.isChainBreaker;","","        var _require2 = require('../util/astUtil'),","            getCaller = _require2.getCaller,","            isMethodCall = _require2.isMethodCall,","            isObjectOfMethodCall = _require2.isObjectOfMethodCall;","","        var DEFAULT_LENGTH = 3;","        var lodashContext = getLodashContext(context);","        var version = lodashContext.version;","        var negate = require('lodash/negate');","","        var mode = context.options[0] || 'never';","        var ruleDepth = parseInt(context.options[1], 10) || DEFAULT_LENGTH;","","        var isEndOfChain = negate(isObjectOfMethodCall);","","        function isBeforeChainBreaker(node) {","            return isChainBreaker(node.parent.parent, version);","        }","","        function isNestedNLevels(node, n) {","            if (n === 0) {","                return true;","            } else if (lodashContext.isLodashCall(node) || lodashContext.getImportedLodashMethod(node)) {","                return isNestedNLevels(node.arguments[0], n - 1);","            }","        }","","        var callExpressionVisitors = {","            always: function always(node) {","                if (isNestedNLevels(node, ruleDepth)) {","                    context.report(node, 'Prefer chaining to composition');","                } else if (lodashContext.isLodashChainStart(node)) {","                    var firstCall = node.parent.parent;","                    if (isMethodCall(firstCall) && (isEndOfChain(firstCall) || isBeforeChainBreaker(firstCall))) {","                        context.report(firstCall, 'Do not use chain syntax for single method');","                    }","                }","            },","            never: function never(node) {","                if (lodashContext.isLodashChainStart(node)) {","                    context.report(node, 'Prefer composition to Lodash chaining');","                }","            }","        };","","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = callExpressionVisitors[mode];","        return visitors;","    }","};"],"l":{"13":1,"24":0,"28":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"43":1,"44":0,"47":1,"48":0,"49":0,"50":0,"51":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"67":0,"68":0,"73":0,"74":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/collection-method-value.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/collection-method-value.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"parentUsesValue","line":30,"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":58}}},"3":{"name":"isPureLodashCollectionMethod","line":35,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":63}}},"4":{"name":"isSideEffectIterationMethod","line":39,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":62}}},"5":{"name":"isParentCommit","line":43,"loc":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":48},"end":{"line":47,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":59,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":18,"column":53}},"3":{"start":{"line":20,"column":8},"end":{"line":21,"column":52}},"4":{"start":{"line":23,"column":8},"end":{"line":26,"column":84}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":50}},"6":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"7":{"start":{"line":31,"column":12},"end":{"line":31,"column":109}},"8":{"start":{"line":32,"column":12},"end":{"line":32,"column":108}},"9":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"10":{"start":{"line":36,"column":12},"end":{"line":36,"column":102}},"11":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"12":{"start":{"line":40,"column":12},"end":{"line":40,"column":76}},"13":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"14":{"start":{"line":44,"column":12},"end":{"line":44,"column":99}},"15":{"start":{"line":47,"column":8},"end":{"line":57,"column":11}},"16":{"start":{"line":48,"column":12},"end":{"line":50,"column":41}},"17":{"start":{"line":52,"column":12},"end":{"line":56,"column":13}},"18":{"start":{"line":53,"column":16},"end":{"line":53,"column":76}},"19":{"start":{"line":54,"column":19},"end":{"line":56,"column":13}},"20":{"start":{"line":55,"column":16},"end":{"line":55,"column":96}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":39},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":108}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":43},"end":{"line":32,"column":61}},{"start":{"line":32,"column":64},"end":{"line":32,"column":68}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":19},"end":{"line":36,"column":54}},{"start":{"line":36,"column":58},"end":{"line":36,"column":101}}]},"4":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":19},"end":{"line":44,"column":41}},{"start":{"line":44,"column":45},"end":{"line":44,"column":98}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"6":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":61}},{"start":{"line":52,"column":65},"end":{"line":52,"column":106}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":19},"end":{"line":54,"column":19}},{"start":{"line":54,"column":19},"end":{"line":54,"column":19}}]},"8":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":23},"end":{"line":54,"column":67}},{"start":{"line":54,"column":71},"end":{"line":54,"column":111}},{"start":{"line":54,"column":115},"end":{"line":54,"column":155}}]}},"code":["/**"," * @fileoverview Rule to enforce usage of collection method values"," */","'use strict';","","/**"," * @fileoverview Rule to enforce usage of collection method values"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            isChainBreaker = _require.isChainBreaker,","            getLodashMethodVisitors = _require.getLodashMethodVisitors,","            isCallToMethod = _require.isCallToMethod;","","        var _require2 = require('../util/astUtil'),","            getMethodName = _require2.getMethodName;","","        var _require3 = require('../util/methodDataUtil'),","            isCollectionMethod = _require3.isCollectionMethod,","            isAliasOfMethod = _require3.isAliasOfMethod,","            getSideEffectIterationMethods = _require3.getSideEffectIterationMethods;","","        var includes = require('lodash/includes');","","        function parentUsesValue(node, callType, version) {","            var isBeforeChainBreaker = callType === 'chained' && isChainBreaker(node.parent.parent, version);","            return (isBeforeChainBreaker ? node.parent.parent : node).parent.type !== 'ExpressionStatement';","        }","","        function isPureLodashCollectionMethod(method, version) {","            return isCollectionMethod(version, method) && !isAliasOfMethod(version, 'remove', method);","        }","","        function isSideEffectIterationMethod(method, version) {","            return includes(getSideEffectIterationMethods(version), method);","        }","","        function isParentCommit(node, callType, version) {","            return callType === 'chained' && isCallToMethod(node.parent.parent, version, 'commit');","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version,","                callType = _ref.callType;","","            if (isPureLodashCollectionMethod(method, version) && !parentUsesValue(node, callType, version)) {","                context.report(node, 'Use value returned from _.' + method);","            } else if (isSideEffectIterationMethod(method, version) && parentUsesValue(node, callType, version) && !isParentCommit(node, callType, version)) {","                context.report(node, 'Do not use value returned from _.' + getMethodName(node));","            }","        });","    }","};"],"l":{"13":1,"15":0,"20":0,"23":0,"28":0,"30":1,"31":0,"32":0,"35":1,"36":0,"39":1,"40":0,"43":1,"44":0,"47":0,"48":0,"52":0,"53":0,"54":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/collection-return.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/collection-return.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":80},"end":{"line":30,"column":112}}},"3":{"name":"ReturnStatement","line":43,"loc":{"start":{"line":43,"column":29},"end":{"line":43,"column":56}}},"4":{"name":"onCodePathStart","line":46,"loc":{"start":{"line":46,"column":29},"end":{"line":46,"column":70}}},"5":{"name":"onCodePathEnd","line":54,"loc":{"start":{"line":54,"column":27},"end":{"line":54,"column":52}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":59,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":17,"column":57}},"3":{"start":{"line":19,"column":8},"end":{"line":20,"column":62}},"4":{"start":{"line":22,"column":8},"end":{"line":23,"column":84}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":46}},"6":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"7":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":54}},"9":{"start":{"line":29,"column":8},"end":{"line":57,"column":46}},"10":{"start":{"line":31,"column":16},"end":{"line":32,"column":43}},"11":{"start":{"line":34,"column":16},"end":{"line":41,"column":17}},"12":{"start":{"line":35,"column":20},"end":{"line":36,"column":61}},"13":{"start":{"line":38,"column":20},"end":{"line":40,"column":21}},"14":{"start":{"line":39,"column":24},"end":{"line":39,"column":102}},"15":{"start":{"line":44,"column":16},"end":{"line":44,"column":46}},"16":{"start":{"line":47,"column":16},"end":{"line":51,"column":18}},"17":{"start":{"line":52,"column":16},"end":{"line":52,"column":50}},"18":{"start":{"line":55,"column":16},"end":{"line":55,"column":50}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":16}},{"start":{"line":34,"column":16},"end":{"line":34,"column":16}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":20},"end":{"line":34,"column":55}},{"start":{"line":34,"column":59},"end":{"line":34,"column":82}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":20}},{"start":{"line":38,"column":20},"end":{"line":38,"column":20}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":24},"end":{"line":38,"column":63}},{"start":{"line":38,"column":67},"end":{"line":38,"column":77}},{"start":{"line":38,"column":81},"end":{"line":38,"column":96}}]}},"code":["/**"," * @fileoverview Rule to check that iteratees for all collection functions except forEach return a value;"," */","'use strict';","","/**"," * @fileoverview Rule to check that iteratees for all collection functions except forEach return a value;"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodCallExpVisitor = _require.getLodashMethodCallExpVisitor,","            getLodashContext = _require.getLodashContext;","","        var _require2 = require('../util/methodDataUtil'),","            isCollectionMethod = _require2.isCollectionMethod;","","        var _require3 = require('../util/astUtil'),","            isFunctionDefinitionWithBlock = _require3.isFunctionDefinitionWithBlock;","","        var assign = require('lodash/assign');","        var funcInfos = new Map();","        var currFuncInfo = {};","        var lodashContext = getLodashContext(context);","        return assign({","            'CallExpression:exit': getLodashMethodCallExpVisitor(lodashContext, function (node, iteratee, _ref) {","                var method = _ref.method,","                    version = _ref.version;","","                if (isCollectionMethod(version, method) && funcInfos.has(iteratee)) {","                    var _funcInfos$get = funcInfos.get(iteratee),","                        hasReturn = _funcInfos$get.hasReturn;","","                    if (isFunctionDefinitionWithBlock(iteratee) && !hasReturn && !iteratee.async) {","                        context.report(node, 'Do not use _.' + method + ' without returning a value');","                    }","                }","            }),","            ReturnStatement: function ReturnStatement() {","                currFuncInfo.hasReturn = true;","            },","            onCodePathStart: function onCodePathStart(codePath, node) {","                currFuncInfo = {","                    upper: currFuncInfo,","                    codePath: codePath,","                    hasReturn: false","                };","                funcInfos.set(node, currFuncInfo);","            },","            onCodePathEnd: function onCodePathEnd() {","                currFuncInfo = currFuncInfo.upper;","            }","        }, lodashContext.getImportVisitors());","    }","};"],"l":{"13":1,"15":0,"19":0,"22":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"34":0,"35":0,"38":0,"39":0,"44":0,"47":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/consistent-compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/consistent-compose.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":19,"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":37}}},"2":{"name":"isOtherDirection","line":34,"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":42}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":48},"end":{"line":41,"column":80}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":66}},"2":{"start":{"line":12,"column":0},"end":{"line":49,"column":2}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":50}},"4":{"start":{"line":22,"column":8},"end":{"line":23,"column":71}},"5":{"start":{"line":25,"column":8},"end":{"line":26,"column":51}},"6":{"start":{"line":28,"column":8},"end":{"line":29,"column":50}},"7":{"start":{"line":31,"column":8},"end":{"line":31,"column":53}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"9":{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"11":{"start":{"line":36,"column":16},"end":{"line":36,"column":68}},"12":{"start":{"line":37,"column":16},"end":{"line":37,"column":63}},"13":{"start":{"line":41,"column":8},"end":{"line":47,"column":11}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":37}},"15":{"start":{"line":44,"column":12},"end":{"line":46,"column":13}},"16":{"start":{"line":45,"column":16},"end":{"line":45,"column":80}}},"branchMap":{"1":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":24},"end":{"line":31,"column":42}},{"start":{"line":31,"column":46},"end":{"line":31,"column":52}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]}},"code":["/**"," * @fileoverview Rule to enforce a consistent composition method"," */","'use strict';","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","var possibleDirections = ['pipe', 'compose', 'flow', 'flowRight'];","","module.exports = {","    meta: {","        schema: [{","            enum: possibleDirections","        }]","    },","","    create: function create(context) {","        var includes = require('lodash/includes');","","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require$getSettings = require('../util/settingsUtil').getSettings(context),","            version = _require$getSettings.version;","","        var _require2 = require('../util/methodDataUtil'),","            getMainAlias = _require2.getMainAlias;","","        var direction = context.options[0] || 'flow';","        var mainDirectionMethod = getMainAlias(version, direction);","","        function isOtherDirection(method) {","            if (includes(possibleDirections, method)) {","                var methodDirection = getMainAlias(version, method);","                return methodDirection !== mainDirectionMethod;","            }","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method;","","            if (isOtherDirection(method)) {","                context.report(node, 'Use _.' + direction + ' for composition');","            }","        });","    }","};"],"l":{"10":1,"12":1,"20":0,"22":0,"25":0,"28":0,"31":0,"32":0,"34":1,"35":0,"36":0,"37":0,"41":0,"42":0,"44":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/identity-shorthand.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/identity-shorthand.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}}},"2":{"name":"isExplicitIdentityFunction","line":38,"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":54}}},"3":{"name":"usesShorthand","line":51,"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":55}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":63,"column":2}},"2":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"3":{"start":{"line":23,"column":8},"end":{"line":23,"column":48}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":50}},"5":{"start":{"line":26,"column":8},"end":{"line":27,"column":71}},"6":{"start":{"line":29,"column":8},"end":{"line":30,"column":66}},"7":{"start":{"line":32,"column":8},"end":{"line":34,"column":90}},"8":{"start":{"line":36,"column":8},"end":{"line":36,"column":76}},"9":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"10":{"start":{"line":39,"column":12},"end":{"line":39,"column":61}},"11":{"start":{"line":40,"column":12},"end":{"line":40,"column":112}},"12":{"start":{"line":43,"column":8},"end":{"line":47,"column":11}},"13":{"start":{"line":49,"column":8},"end":{"line":49,"column":93}},"14":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"15":{"start":{"line":52,"column":12},"end":{"line":52,"column":82}},"16":{"start":{"line":55,"column":8},"end":{"line":61,"column":11}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":33}},{"start":{"line":40,"column":37},"end":{"line":40,"column":111}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":19},"end":{"line":52,"column":68}},{"start":{"line":52,"column":72},"end":{"line":52,"column":81}}]}},"code":["/**"," * @fileoverview Rule to check if the identity shorthand can be used"," */","'use strict';","","/**"," * @fileoverview Rule to check if the identity shorthand can be used"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","","module.exports = {","    meta: {","        schema: [{","            enum: ['always', 'never']","        }]","    },","","    create: function create(context) {","        var get = require('lodash/get');","        var matches = require('lodash/matches');","        var overSome = require('lodash/overSome');","","        var _require = require('../util/methodDataUtil'),","            methodSupportsShorthand = _require.methodSupportsShorthand;","","        var _require2 = require('../util/lodashUtil'),","            getShorthandVisitors = _require2.getShorthandVisitors;","","        var _require3 = require('../util/astUtil'),","            getFirstParamName = _require3.getFirstParamName,","            getValueReturnedInFirstStatement = _require3.getValueReturnedInFirstStatement;","","        var settings = require('../util/settingsUtil').getSettings(context);","","        function isExplicitIdentityFunction(iteratee) {","            var firstParamName = getFirstParamName(iteratee);","            return firstParamName && get(getValueReturnedInFirstStatement(iteratee), 'name') === firstParamName;","        }","","        var isLodashIdentityFunction = matches({","            type: 'MemberExpression',","            object: { name: settings.pragma },","            property: { name: 'identity' }","        });","","        var canUseShorthand = overSome(isExplicitIdentityFunction, isLodashIdentityFunction);","","        function usesShorthand(node, iteratee, method) {","            return methodSupportsShorthand(settings.version, method) && !iteratee;","        }","","        return getShorthandVisitors(context, {","            canUseShorthand: canUseShorthand,","            usesShorthand: usesShorthand","        }, {","            always: 'Prefer omitting the iteratee over a function that returns its argument',","            never: 'Do not use the identity shorthand syntax'","        });","    }","};"],"l":{"14":1,"22":0,"23":0,"24":0,"26":0,"29":0,"32":0,"36":0,"38":1,"39":0,"40":0,"43":0,"49":0,"51":1,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/import-scope.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/import-scope.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"isMethodImport","line":33,"loc":{"start":{"line":33,"column":21},"end":{"line":33,"column":51}}},"2":{"name":"allImportsAreOfType","line":36,"loc":{"start":{"line":36,"column":26},"end":{"line":36,"column":68}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":34},"end":{"line":37,"column":55}}},"4":{"name":"create","line":48,"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":37}}},"5":{"name":"ImportDeclaration","line":52,"loc":{"start":{"line":52,"column":31},"end":{"line":52,"column":64}}},"6":{"name":"VariableDeclarator","line":65,"loc":{"start":{"line":65,"column":32},"end":{"line":65,"column":66}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":63}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}},"4":{"start":{"line":21,"column":0},"end":{"line":25,"column":2}},"5":{"start":{"line":27,"column":0},"end":{"line":31,"column":2}},"6":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"8":{"start":{"line":36,"column":0},"end":{"line":40,"column":2}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":7}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":47}},"11":{"start":{"line":42,"column":0},"end":{"line":83,"column":2}},"12":{"start":{"line":49,"column":8},"end":{"line":49,"column":56}},"13":{"start":{"line":51,"column":8},"end":{"line":81,"column":10}},"14":{"start":{"line":53,"column":16},"end":{"line":63,"column":17}},"15":{"start":{"line":54,"column":20},"end":{"line":60,"column":21}},"16":{"start":{"line":55,"column":24},"end":{"line":55,"column":62}},"17":{"start":{"line":57,"column":24},"end":{"line":59,"column":25}},"18":{"start":{"line":58,"column":28},"end":{"line":58,"column":71}},"19":{"start":{"line":61,"column":23},"end":{"line":63,"column":17}},"20":{"start":{"line":62,"column":20},"end":{"line":62,"column":63}},"21":{"start":{"line":66,"column":16},"end":{"line":66,"column":60}},"22":{"start":{"line":67,"column":16},"end":{"line":79,"column":17}},"23":{"start":{"line":68,"column":20},"end":{"line":76,"column":21}},"24":{"start":{"line":69,"column":24},"end":{"line":69,"column":62}},"25":{"start":{"line":71,"column":24},"end":{"line":71,"column":79}},"26":{"start":{"line":72,"column":24},"end":{"line":72,"column":69}},"27":{"start":{"line":73,"column":24},"end":{"line":75,"column":25}},"28":{"start":{"line":74,"column":28},"end":{"line":74,"column":71}},"29":{"start":{"line":77,"column":23},"end":{"line":79,"column":17}},"30":{"start":{"line":78,"column":20},"end":{"line":78,"column":63}}},"branchMap":{"1":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":25},"end":{"line":49,"column":43}},{"start":{"line":49,"column":47},"end":{"line":49,"column":55}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":16}},{"start":{"line":53,"column":16},"end":{"line":53,"column":16}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":20},"end":{"line":54,"column":20}},{"start":{"line":54,"column":20},"end":{"line":54,"column":20}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":24},"end":{"line":57,"column":24}},{"start":{"line":57,"column":24},"end":{"line":57,"column":24}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":23},"end":{"line":61,"column":23}},{"start":{"line":61,"column":23},"end":{"line":61,"column":23}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":27},"end":{"line":61,"column":60}},{"start":{"line":61,"column":64},"end":{"line":61,"column":87}}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":20}},{"start":{"line":68,"column":20},"end":{"line":68,"column":20}}]},"9":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":24},"end":{"line":73,"column":24}},{"start":{"line":73,"column":24},"end":{"line":73,"column":24}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":23},"end":{"line":77,"column":23}},{"start":{"line":77,"column":23},"end":{"line":77,"column":23}}]},"11":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":27},"end":{"line":77,"column":47}},{"start":{"line":77,"column":51},"end":{"line":77,"column":74}}]}},"code":["/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","'use strict';","","/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","var _require = require('../util/importUtil'),","    isFullLodashImport = _require.isFullLodashImport,","    getNameFromCjsRequire = _require.getNameFromCjsRequire,","    getMethodImportFromName = _require.getMethodImportFromName;","","var every = require('lodash/every');","var includes = require('lodash/includes');","","var messages = {","    method: 'Do not import from the full Lodash module.',","    member: 'Import members from the full Lodash module.',","    full: 'Use the full Lodash module.'","};","","var importNodeTypes = {","    method: ['ImportDefaultSpecifier'],","    member: ['ImportSpecifier'],","    full: ['ImportDefaultSpecifier', 'ImportNamespaceSpecifier']","};","","var isMethodImport = function isMethodImport(name) {","    return Boolean(getMethodImportFromName(name));","};","var allImportsAreOfType = function allImportsAreOfType(node, types) {","    return every(node.specifiers, function (specifier) {","        return includes(types, specifier.type);","    });","};","","module.exports = {","    meta: {","        schema: [{","            enum: ['method', 'member', 'full']","        }]","    },","    create: function create(context) {","        var importType = context.options[0] || 'method';","","        return {","            ImportDeclaration: function ImportDeclaration(node) {","                if (isFullLodashImport(node.source.value)) {","                    if (importType === 'method') {","                        context.report(node, messages.method);","                    } else {","                        if (!allImportsAreOfType(node, importNodeTypes[importType])) {","                            context.report(node, messages[importType]);","                        }","                    }","                } else if (isMethodImport(node.source.value) && importType !== 'method') {","                    context.report(node, messages[importType]);","                }","            },","            VariableDeclarator: function VariableDeclarator(node) {","                var name = getNameFromCjsRequire(node.init);","                if (isFullLodashImport(name)) {","                    if (importType === 'method') {","                        context.report(node, messages.method);","                    } else {","                        var isObjectPattern = node.id.type === 'ObjectPattern';","                        var isMemberImport = importType === 'member';","                        if (isObjectPattern !== isMemberImport) {","                            context.report(node, messages[importType]);","                        }","                    }","                } else if (isMethodImport(name) && importType !== 'method') {","                    context.report(node, messages[importType]);","                }","            }","        };","    }","};"],"l":{"13":1,"18":1,"19":1,"21":1,"27":1,"33":1,"34":0,"36":1,"37":0,"38":0,"42":1,"49":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"61":0,"62":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"77":0,"78":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/importUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/importUtil.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getNameFromCjsRequire","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}}},"2":{"name":"isFullLodashImport","line":11,"loc":{"start":{"line":11,"column":25},"end":{"line":11,"column":58}}},"3":{"name":"getMethodImportFromName","line":15,"loc":{"start":{"line":15,"column":30},"end":{"line":15,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":39}},"5":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"6":{"start":{"line":12,"column":4},"end":{"line":13,"column":6}},"7":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":56}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"10":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]},"2":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":46}},{"start":{"line":6,"column":50},"end":{"line":6,"column":85}},{"start":{"line":6,"column":89},"end":{"line":6,"column":125}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":16}},{"start":{"line":17,"column":20},"end":{"line":17,"column":28}}]}},"code":["'use strict';","","var get = require('lodash/get');","","function getNameFromCjsRequire(init) {","    if (get(init, 'callee.name') === 'require' && get(init, 'arguments.length') === 1 && init.arguments[0].type === 'Literal') {","        return init.arguments[0].value;","    }","}","","var isFullLodashImport = function isFullLodashImport(str) {","    return (/^lodash(-es)?$/.test(str)","    );","};","var getMethodImportFromName = function getMethodImportFromName(str) {","    var match = /^lodash(-es)?\\/(?!fp)(\\w+)$/.exec(str);","    return match && match[2];","};","","module.exports = {","    getNameFromCjsRequire: getNameFromCjsRequire, isFullLodashImport: isFullLodashImport, getMethodImportFromName: getMethodImportFromName","};"],"l":{"3":1,"5":1,"6":0,"7":0,"11":1,"12":0,"15":1,"16":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/matches-prop-shorthand.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/matches-prop-shorthand.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":37}}},"2":{"name":"isFunctionDeclarationThatCanUseShorthand","line":42,"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":64}}},"3":{"name":"canUseShorthand","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":58}}},"4":{"name":"callHasExtraParamAfterIteratee","line":50,"loc":{"start":{"line":50,"column":8},"end":{"line":50,"column":64}}},"5":{"name":"_","line":55,"loc":{"start":{"line":55,"column":15},"end":{"line":55,"column":42}}},"6":{"name":"_","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":42}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":71,"column":2}},"2":{"start":{"line":28,"column":8},"end":{"line":30,"column":65}},"3":{"start":{"line":32,"column":8},"end":{"line":35,"column":60}},"4":{"start":{"line":37,"column":8},"end":{"line":38,"column":51}},"5":{"start":{"line":40,"column":8},"end":{"line":40,"column":81}},"6":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"7":{"start":{"line":43,"column":12},"end":{"line":43,"column":135}},"8":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"9":{"start":{"line":47,"column":12},"end":{"line":47,"column":138}},"10":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"11":{"start":{"line":51,"column":12},"end":{"line":51,"column":72}},"12":{"start":{"line":54,"column":8},"end":{"line":61,"column":10}},"13":{"start":{"line":56,"column":16},"end":{"line":56,"column":113}},"14":{"start":{"line":59,"column":16},"end":{"line":59,"column":71}},"15":{"start":{"line":63,"column":8},"end":{"line":69,"column":11}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":27},"end":{"line":40,"column":45}},{"start":{"line":40,"column":49},"end":{"line":40,"column":80}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":19},"end":{"line":47,"column":69}},{"start":{"line":47,"column":73},"end":{"line":47,"column":137}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":23},"end":{"line":56,"column":31}},{"start":{"line":56,"column":35},"end":{"line":56,"column":62}},{"start":{"line":56,"column":66},"end":{"line":56,"column":112}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":23},"end":{"line":59,"column":31}},{"start":{"line":59,"column":35},"end":{"line":59,"column":70}}]}},"code":["/**"," * @fileoverview Rule to check if the macthesProperty shorthand can be used"," */","'use strict';","","/**"," * @fileoverview Rule to check if the macthesProperty shorthand can be used"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            enum: ['always', 'never']","        }, {","            type: 'object',","            properties: {","                onlyLiterals: {","                    type: 'boolean'","                }","            }","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            isCallToLodashMethod = _require.isCallToLodashMethod,","            getShorthandVisitors = _require.getShorthandVisitors;","","        var _require2 = require('../util/astUtil'),","            isEqEqEqToMemberOf = _require2.isEqEqEqToMemberOf,","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName;","","        var _require$getSettings = require('../util/settingsUtil').getSettings(context),","            version = _require$getSettings.version;","","        var onlyLiterals = context.options[1] && context.options[1].onlyLiterals;","","        function isFunctionDeclarationThatCanUseShorthand(func) {","            return isEqEqEqToMemberOf(getValueReturnedInFirstStatement(func), getFirstParamName(func), { onlyLiterals: onlyLiterals });","        }","","        function canUseShorthand(iteratee, lodashContext) {","            return isFunctionDeclarationThatCanUseShorthand(iteratee) || isCallToLodashMethod(iteratee, 'matchesProperty', lodashContext);","        }","","        function callHasExtraParamAfterIteratee(node, iteratee) {","            return node.arguments[node.arguments.indexOf(iteratee) + 1];","        }","","        var matchesPropertyChecks = {","            3: function _(node, iteratee) {","                return iteratee && iteratee.type === 'Literal' && callHasExtraParamAfterIteratee(node, iteratee);","            },","            4: function _(node, iteratee) {","                return iteratee && iteratee.type === 'ArrayExpression';","            }","        };","","        return getShorthandVisitors(context, {","            canUseShorthand: canUseShorthand,","            usesShorthand: matchesPropertyChecks[version]","        }, {","            always: 'Prefer matches property syntax',","            never: 'Do not use matches property syntax'","        });","    }","};"],"l":{"13":1,"28":0,"32":0,"37":0,"40":0,"42":1,"43":0,"46":1,"47":0,"50":1,"51":0,"54":0,"56":0,"59":0,"63":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/matches-shorthand.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/matches-shorthand.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":32,"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":37}}},"2":{"name":"canBeObjectLiteralWithShorthandProperty","line":54,"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":74}}},"3":{"name":"isConjunctionOfEqEqEqToMemberOf","line":58,"loc":{"start":{"line":58,"column":8},"end":{"line":58,"column":76}}},"4":{"name":"isFunctionDeclarationThatCanUseShorthand","line":77,"loc":{"start":{"line":77,"column":8},"end":{"line":77,"column":64}}},"5":{"name":"canUseShorthand","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":58}}},"6":{"name":"usesShorthand","line":86,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":47}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":98,"column":2}},"2":{"start":{"line":33,"column":8},"end":{"line":33,"column":48}},"3":{"start":{"line":35,"column":8},"end":{"line":37,"column":65}},"4":{"start":{"line":39,"column":8},"end":{"line":44,"column":60}},"5":{"start":{"line":46,"column":8},"end":{"line":47,"column":56}},"6":{"start":{"line":49,"column":8},"end":{"line":49,"column":49}},"7":{"start":{"line":50,"column":8},"end":{"line":50,"column":81}},"8":{"start":{"line":52,"column":8},"end":{"line":52,"column":83}},"9":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"10":{"start":{"line":55,"column":12},"end":{"line":55,"column":469}},"11":{"start":{"line":58,"column":8},"end":{"line":75,"column":9}},"12":{"start":{"line":59,"column":12},"end":{"line":59,"column":114}},"13":{"start":{"line":60,"column":12},"end":{"line":74,"column":13}},"14":{"start":{"line":61,"column":16},"end":{"line":61,"column":39}},"15":{"start":{"line":62,"column":16},"end":{"line":62,"column":34}},"16":{"start":{"line":63,"column":16},"end":{"line":63,"column":44}},"17":{"start":{"line":64,"column":16},"end":{"line":64,"column":40}},"18":{"start":{"line":65,"column":16},"end":{"line":72,"column":17}},"19":{"start":{"line":66,"column":20},"end":{"line":70,"column":21}},"20":{"start":{"line":67,"column":24},"end":{"line":67,"column":63}},"21":{"start":{"line":68,"column":27},"end":{"line":70,"column":21}},"22":{"start":{"line":69,"column":24},"end":{"line":69,"column":49}},"23":{"start":{"line":71,"column":20},"end":{"line":71,"column":44}},"24":{"start":{"line":73,"column":16},"end":{"line":73,"column":40}},"25":{"start":{"line":77,"column":8},"end":{"line":80,"column":9}},"26":{"start":{"line":78,"column":12},"end":{"line":78,"column":95}},"27":{"start":{"line":79,"column":12},"end":{"line":79,"column":139}},"28":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"29":{"start":{"line":83,"column":12},"end":{"line":83,"column":130}},"30":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"31":{"start":{"line":87,"column":12},"end":{"line":87,"column":68}},"32":{"start":{"line":90,"column":8},"end":{"line":96,"column":11}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":27},"end":{"line":50,"column":45}},{"start":{"line":50,"column":49},"end":{"line":50,"column":80}}]},"2":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":19},"end":{"line":55,"column":79}},{"start":{"line":55,"column":83},"end":{"line":55,"column":97}},{"start":{"line":55,"column":102},"end":{"line":55,"column":155}},{"start":{"line":55,"column":159},"end":{"line":55,"column":199}},{"start":{"line":55,"column":203},"end":{"line":55,"column":235}},{"start":{"line":55,"column":239},"end":{"line":55,"column":282}},{"start":{"line":55,"column":286},"end":{"line":55,"column":340}},{"start":{"line":55,"column":344},"end":{"line":55,"column":385}},{"start":{"line":55,"column":389},"end":{"line":55,"column":420}},{"start":{"line":55,"column":424},"end":{"line":55,"column":467}}]},"3":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":32},"end":{"line":59,"column":50}},{"start":{"line":59,"column":54},"end":{"line":59,"column":113}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"5":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":16},"end":{"line":60,"column":34}},{"start":{"line":60,"column":38},"end":{"line":60,"column":93}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":20},"end":{"line":66,"column":20}},{"start":{"line":66,"column":20},"end":{"line":66,"column":20}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":27},"end":{"line":68,"column":27}},{"start":{"line":68,"column":27},"end":{"line":68,"column":27}}]},"8":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":40},"end":{"line":78,"column":58}},{"start":{"line":78,"column":62},"end":{"line":78,"column":94}}]},"9":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":19},"end":{"line":83,"column":69}},{"start":{"line":83,"column":73},"end":{"line":83,"column":129}}]},"10":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":19},"end":{"line":87,"column":27}},{"start":{"line":87,"column":31},"end":{"line":87,"column":67}}]}},"code":["/**"," * @fileoverview Rule to check if the matches shorthand can be used"," */","'use strict';","","/**"," * @fileoverview Rule to check if the matches shorthand can be used"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            enum: ['always', 'never']","        }, {","            type: 'integer',","            minimum: 1","        }, {","            type: 'boolean'","        }, {","            type: 'object',","            properties: {","                onlyLiterals: {","                    type: 'boolean'","                }","            }","        }]","    },","","    create: function create(context) {","        var matches = require('lodash/matches');","","        var _require = require('../util/lodashUtil'),","            isCallToLodashMethod = _require.isCallToLodashMethod,","            getShorthandVisitors = _require.getShorthandVisitors;","","        var _require2 = require('../util/astUtil'),","            isEqEqEq = _require2.isEqEqEq,","            isMemberExpOf = _require2.isMemberExpOf,","            isEqEqEqToMemberOf = _require2.isEqEqEqToMemberOf,","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName;","","        var _require3 = require('../util/settingsUtil'),","            isEcmaFeatureOn = _require3.isEcmaFeatureOn;","","        var DEFAULT_MAX_PROPERTY_PATH_LENGTH = 3;","        var onlyLiterals = context.options[3] && context.options[3].onlyLiterals;","","        var isConjunction = matches({ type: 'LogicalExpression', operator: '&&' });","","        function canBeObjectLiteralWithShorthandProperty(node, paramName) {","            return isEcmaFeatureOn(context, 'objectLiteralShorthandProperties') && isEqEqEq(node) && (isMemberExpOf(node.left, paramName, { maxLength: 1 }) && node.left.property.type === 'Identifier' && node.right.type === 'Identifier' && node.left.property.name === node.right.name || isMemberExpOf(node.right, paramName, { maxLength: 1 }) && node.right.property.type === 'Identifier' && node.left.type === 'Identifier' && node.right.property.name === node.left.name);","        }","","        function isConjunctionOfEqEqEqToMemberOf(exp, paramName, maxLength) {","            var allowComputed = context.options[2] && isEcmaFeatureOn(context, 'objectLiteralComputedProperties');","            if (isConjunction(exp) || canBeObjectLiteralWithShorthandProperty(exp, paramName)) {","                var checkStack = [exp];","                var curr = void 0;","                var allParamMemberEq = true;","                curr = checkStack.pop();","                while (curr) {","                    if (isConjunction(curr)) {","                        checkStack.push(curr.left, curr.right);","                    } else if (!isEqEqEqToMemberOf(curr, paramName, { maxLength: maxLength, allowComputed: allowComputed, onlyLiterals: onlyLiterals })) {","                        allParamMemberEq = false;","                    }","                    curr = checkStack.pop();","                }","                return allParamMemberEq;","            }","        }","","        function isFunctionDeclarationThatCanUseShorthand(func) {","            var maxPropertyPathLength = context.options[1] || DEFAULT_MAX_PROPERTY_PATH_LENGTH;","            return isConjunctionOfEqEqEqToMemberOf(getValueReturnedInFirstStatement(func), getFirstParamName(func), maxPropertyPathLength);","        }","","        function canUseShorthand(iteratee, lodashContext) {","            return isFunctionDeclarationThatCanUseShorthand(iteratee) || isCallToLodashMethod(iteratee, 'matches', lodashContext);","        }","","        function usesShorthand(node, iteratee) {","            return iteratee && iteratee.type === 'ObjectExpression';","        }","","        return getShorthandVisitors(context, {","            canUseShorthand: canUseShorthand,","            usesShorthand: usesShorthand","        }, {","            always: 'Prefer matches syntax',","            never: 'Do not use matches syntax'","        });","    }","};"],"l":{"13":1,"33":0,"35":0,"39":0,"46":0,"49":0,"50":0,"52":0,"54":1,"55":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"73":0,"77":1,"78":0,"79":0,"82":1,"83":0,"86":1,"87":0,"90":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-commit.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-commit.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":34},"end":{"line":24,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":36,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":17,"column":53}},"3":{"start":{"line":19,"column":8},"end":{"line":20,"column":50}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":54}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":57}},"6":{"start":{"line":24,"column":8},"end":{"line":33,"column":10}},"7":{"start":{"line":25,"column":12},"end":{"line":32,"column":13}},"8":{"start":{"line":26,"column":16},"end":{"line":28,"column":103}},"9":{"start":{"line":27,"column":20},"end":{"line":27,"column":46}},"10":{"start":{"line":29,"column":16},"end":{"line":31,"column":17}},"11":{"start":{"line":30,"column":20},"end":{"line":30,"column":74}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":24}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":25},"end":{"line":28,"column":43}},{"start":{"line":28,"column":47},"end":{"line":28,"column":101}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":16},"end":{"line":29,"column":16}},{"start":{"line":29,"column":16},"end":{"line":29,"column":16}}]}},"code":["/**"," * @fileoverview Rule to disallow using _.prototype.commit."," */","'use strict';","","/**"," * @fileoverview Rule to disallow using _.prototype.commit."," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isCallToMethod = _require.isCallToMethod;","","        var _require2 = require('../util/astUtil'),","            isMethodCall = _require2.isMethodCall;","","        var lodashContext = getLodashContext(context);","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isLodashChainStart(node)) {","                do {","                    node = node.parent.parent;","                } while (isMethodCall(node) && !isCallToMethod(node, lodashContext.version, 'commit'));","                if (isCallToMethod(node, lodashContext.version, 'commit')) {","                    context.report(node, 'Do not end chain with commit.');","                }","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"15":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-double-unwrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-double-unwrap.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":50}}},"3":{"name":"fix","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":49}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":51,"column":2}},"2":{"start":{"line":18,"column":8},"end":{"line":21,"column":47}},"3":{"start":{"line":23,"column":8},"end":{"line":26,"column":52}},"4":{"start":{"line":28,"column":8},"end":{"line":28,"column":54}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":44}},"6":{"start":{"line":30,"column":8},"end":{"line":30,"column":57}},"7":{"start":{"line":31,"column":8},"end":{"line":48,"column":10}},"8":{"start":{"line":32,"column":12},"end":{"line":47,"column":13}},"9":{"start":{"line":33,"column":16},"end":{"line":35,"column":79}},"10":{"start":{"line":34,"column":20},"end":{"line":34,"column":46}},"11":{"start":{"line":36,"column":16},"end":{"line":36,"column":45}},"12":{"start":{"line":37,"column":16},"end":{"line":46,"column":17}},"13":{"start":{"line":38,"column":20},"end":{"line":45,"column":23}},"14":{"start":{"line":43,"column":28},"end":{"line":43,"column":87}},"15":{"start":{"line":49,"column":8},"end":{"line":49,"column":24}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":25},"end":{"line":35,"column":43}},{"start":{"line":35,"column":47},"end":{"line":35,"column":77}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":16}},{"start":{"line":37,"column":16},"end":{"line":37,"column":16}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":20},"end":{"line":37,"column":38}},{"start":{"line":37,"column":42},"end":{"line":37,"column":71}}]}},"code":["/**"," * @fileoverview Rule to make sure value() wasn't called on a lodash chain twice"," */","'use strict';","","/**"," * @fileoverview Rule to make sure value() wasn't called on a lodash chain twice"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    meta: {","        fixable: \"code\"","    },","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isChainBreaker = _require.isChainBreaker,","            isChainable = _require.isChainable;","","        var _require2 = require('../util/astUtil'),","            isMethodCall = _require2.isMethodCall,","            getCaller = _require2.getCaller,","            getMethodName = _require2.getMethodName;","","        var lodashContext = getLodashContext(context);","        var version = lodashContext.version;","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isImplicitChainStart(node)) {","                do {","                    node = node.parent.parent;","                } while (isMethodCall(node) && !isChainBreaker(node, version));","                var caller = getCaller(node);","                if (isMethodCall(node) && !isChainable(caller, version)) {","                    context.report({","                        node: node,","                        message: 'Do not use .value() after chain-ending method {{method}}',","                        data: { method: getMethodName(caller) },","                        fix: function fix(fixer) {","                            return fixer.removeRange([caller.range[1], node.range[1]]);","                        }","                    });","                }","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"18":0,"23":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"43":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-extra-args.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-extra-args.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"getExpectedArity","line":24,"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":52}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":48},"end":{"line":29,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":43,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":51}},"3":{"start":{"line":18,"column":8},"end":{"line":19,"column":71}},"4":{"start":{"line":21,"column":8},"end":{"line":22,"column":64}},"5":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"6":{"start":{"line":25,"column":12},"end":{"line":25,"column":64}},"7":{"start":{"line":26,"column":12},"end":{"line":26,"column":81}},"8":{"start":{"line":29,"column":8},"end":{"line":41,"column":11}},"9":{"start":{"line":30,"column":12},"end":{"line":31,"column":37}},"10":{"start":{"line":33,"column":12},"end":{"line":33,"column":67}},"11":{"start":{"line":34,"column":12},"end":{"line":40,"column":13}},"12":{"start":{"line":35,"column":16},"end":{"line":39,"column":19}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":53},"end":{"line":26,"column":65}},{"start":{"line":26,"column":68},"end":{"line":26,"column":76}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":12}},{"start":{"line":34,"column":12},"end":{"line":34,"column":12}}]}},"code":["/**"," * @fileoverview Rule to make sure lodash method calls don't use superfluous arguments"," */","'use strict';","","/**"," * @fileoverview Rule to make sure lodash method calls don't use superfluous arguments"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require$getSettings = require('../util/settingsUtil').getSettings(context),","            version = _require$getSettings.version;","","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/methodDataUtil'),","            getFunctionMaxArity = _require2.getFunctionMaxArity;","","        function getExpectedArity(callType, method) {","            var maxArity = getFunctionMaxArity(version, method);","            return Math.max(callType === 'chained' ? maxArity - 1 : maxArity, 0);","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var callType = _ref.callType,","                method = _ref.method;","","            var expectedArity = getExpectedArity(callType, method);","            if (node.arguments.length > expectedArity) {","                context.report({","                    node: node,","                    message: 'Too many arguments passed to `{{method}}` (expected {{expectedArity}}).',","                    data: { method: method, expectedArity: expectedArity }","                });","            }","        });","    }","};"],"l":{"13":1,"15":0,"18":0,"21":0,"24":1,"25":0,"26":0,"29":0,"30":0,"33":0,"34":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-single-chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-single-chain.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isBeforeChainBreaker","line":39,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}}},"3":{"name":"CallExpression","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":58}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":54,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":53}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":53}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":61}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":71}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":51}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":66}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":50}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":88}},"10":{"start":{"line":28,"column":8},"end":{"line":28,"column":51}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":49}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":52}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":68}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":46}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":56}},"16":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"17":{"start":{"line":40,"column":12},"end":{"line":40,"column":63}},"18":{"start":{"line":43,"column":8},"end":{"line":52,"column":45}},"19":{"start":{"line":45,"column":16},"end":{"line":50,"column":17}},"20":{"start":{"line":46,"column":20},"end":{"line":46,"column":55}},"21":{"start":{"line":47,"column":20},"end":{"line":49,"column":21}},"22":{"start":{"line":48,"column":24},"end":{"line":48,"column":95}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":16}},{"start":{"line":45,"column":16},"end":{"line":45,"column":16}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":20},"end":{"line":47,"column":20}},{"start":{"line":47,"column":20},"end":{"line":47,"column":20}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":24},"end":{"line":47,"column":47}},{"start":{"line":47,"column":52},"end":{"line":47,"column":75}},{"start":{"line":47,"column":79},"end":{"line":47,"column":110}}]}},"code":["/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","'use strict';","","/**"," * @fileoverview Rule to disallow the use of a chain for a single method"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil');","","        var isChainBreaker = _require.isChainBreaker;","        var isLodashChainStart = _require.isLodashChainStart;","        var getLodashImportVisitors = _require.getLodashImportVisitors;","","        var _require2 = require('../util/astUtil');","","        var isObjectOfMethodCall = _require2.isObjectOfMethodCall;","        var isMethodCall = _require2.isMethodCall;","","        var _require$getSettings = require('../util/settingsUtil').getSettings(context);","","        var version = _require$getSettings.version;","        var pragma = _require$getSettings.pragma;","","        var _require3 = require('../util/ruleUtil');","","        var combineVisitorObjects = _require3.combineVisitorObjects;","","        var negate = require('lodash/negate');","","        var isEndOfChain = negate(isObjectOfMethodCall);","","        function isBeforeChainBreaker(node) {","            return isChainBreaker(node.parent.parent, version);","        }","","        return combineVisitorObjects({","            CallExpression: function CallExpression(node) {","                if (isLodashChainStart(node, pragma)) {","                    var firstCall = node.parent.parent;","                    if (isMethodCall(firstCall) && (isEndOfChain(firstCall) || isBeforeChainBreaker(firstCall))) {","                        context.report(firstCall, 'Do not use chain syntax for single method');","                    }","                }","            }","        }, getLodashImportVisitors(context));","    }","};"],"l":{"13":1,"15":0,"17":0,"18":0,"19":0,"21":0,"23":0,"24":0,"26":0,"28":0,"29":0,"31":0,"33":0,"35":0,"37":0,"39":1,"40":0,"43":0,"45":0,"46":0,"47":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-unbound-this.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/no-unbound-this.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":10,"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":80},"end":{"line":28,"column":112}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":41},"end":{"line":37,"column":61}}},"4":{"name":"ThisExpression","line":43,"loc":{"start":{"line":43,"column":28},"end":{"line":43,"column":58}}},"5":{"name":"onCodePathStart","line":46,"loc":{"start":{"line":46,"column":29},"end":{"line":46,"column":70}}},"6":{"name":"onCodePathEnd","line":54,"loc":{"start":{"line":54,"column":27},"end":{"line":54,"column":52}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":59,"column":2}},"2":{"start":{"line":11,"column":8},"end":{"line":13,"column":57}},"3":{"start":{"line":15,"column":8},"end":{"line":16,"column":62}},"4":{"start":{"line":18,"column":8},"end":{"line":19,"column":66}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":46}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},"7":{"start":{"line":23,"column":8},"end":{"line":25,"column":10}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":54}},"9":{"start":{"line":27,"column":8},"end":{"line":57,"column":46}},"10":{"start":{"line":29,"column":16},"end":{"line":30,"column":43}},"11":{"start":{"line":32,"column":16},"end":{"line":41,"column":17}},"12":{"start":{"line":33,"column":20},"end":{"line":34,"column":59}},"13":{"start":{"line":36,"column":20},"end":{"line":40,"column":21}},"14":{"start":{"line":37,"column":24},"end":{"line":39,"column":27}},"15":{"start":{"line":38,"column":28},"end":{"line":38,"column":112}},"16":{"start":{"line":44,"column":16},"end":{"line":44,"column":49}},"17":{"start":{"line":47,"column":16},"end":{"line":51,"column":18}},"18":{"start":{"line":52,"column":16},"end":{"line":52,"column":50}},"19":{"start":{"line":55,"column":16},"end":{"line":55,"column":50}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":21},"end":{"line":32,"column":56}},{"start":{"line":32,"column":60},"end":{"line":32,"column":92}},{"start":{"line":32,"column":97},"end":{"line":32,"column":120}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":20},"end":{"line":36,"column":20}},{"start":{"line":36,"column":20},"end":{"line":36,"column":20}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":24},"end":{"line":36,"column":54}},{"start":{"line":36,"column":58},"end":{"line":36,"column":73}}]}},"code":["/**"," * @fileoverview Rule to check that all uses of `this` inside collection methods are bound"," */","'use strict';","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodCallExpVisitor = _require.getLodashMethodCallExpVisitor,","            getLodashContext = _require.getLodashContext;","","        var _require2 = require('../util/methodDataUtil'),","            isCollectionMethod = _require2.isCollectionMethod;","","        var _require3 = require('../util/astUtil'),","            isFunctionExpression = _require3.isFunctionExpression;","","        var assign = require('lodash/assign');","        var funcInfos = new Map();","        var currFuncInfo = {","            thisUses: []","        };","        var lodashContext = getLodashContext(context);","        return assign({","            'CallExpression:exit': getLodashMethodCallExpVisitor(lodashContext, function (node, iteratee, _ref) {","                var method = _ref.method,","                    version = _ref.version;","","                if ((isCollectionMethod(version, method) || /^forEach(Right)?$/.test(method)) && funcInfos.has(iteratee)) {","                    var _funcInfos$get = funcInfos.get(iteratee),","                        thisUses = _funcInfos$get.thisUses;","","                    if (isFunctionExpression(iteratee) && thisUses.length) {","                        thisUses.forEach(function (thisNode) {","                            context.report(thisNode, 'Do not use `this` without binding in collection methods');","                        });","                    }","                }","            }),","            ThisExpression: function ThisExpression(node) {","                currFuncInfo.thisUses.push(node);","            },","            onCodePathStart: function onCodePathStart(codePath, node) {","                currFuncInfo = {","                    upper: currFuncInfo,","                    codePath: codePath,","                    thisUses: []","                };","                funcInfos.set(node, currFuncInfo);","            },","            onCodePathEnd: function onCodePathEnd() {","                currFuncInfo = currFuncInfo.upper;","            }","        }, lodashContext.getImportVisitors());","    }","};"],"l":{"9":1,"11":0,"15":0,"18":0,"21":0,"22":0,"23":0,"26":0,"27":0,"29":0,"32":0,"33":0,"36":0,"37":0,"38":0,"44":0,"47":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/path-style.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/path-style.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"create","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":37}}},"2":{"name":"isPropAccess","line":37,"loc":{"start":{"line":37,"column":27},"end":{"line":37,"column":52}}},"3":{"name":"endsWithPropAccess","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":41}}},"4":{"name":"startsWithPropAccess","line":45,"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":43}}},"5":{"name":"getIndexByMethodName","line":49,"loc":{"start":{"line":49,"column":8},"end":{"line":49,"column":55}}},"6":{"name":"isAliasOfSuspect","line":50,"loc":{"start":{"line":50,"column":35},"end":{"line":50,"column":64}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":58},"end":{"line":53,"column":74}}},"8":{"name":"getPropertyPathNode","line":59,"loc":{"start":{"line":59,"column":8},"end":{"line":59,"column":70}}},"9":{"name":"isArrayOfLiterals","line":69,"loc":{"start":{"line":69,"column":8},"end":{"line":69,"column":41}}},"10":{"name":"isAdjacentToPropAccessInTemplate","line":73,"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":64}}},"11":{"name":"(anonymous_11)","line":74,"loc":{"start":{"line":74,"column":60},"end":{"line":74,"column":77}}},"12":{"name":"isTemplateStringWithVariableProps","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":57}}},"13":{"name":"(anonymous_13)","line":83,"loc":{"start":{"line":83,"column":69},"end":{"line":83,"column":84}}},"14":{"name":"isStringConcatWithVariableProps","line":88,"loc":{"start":{"line":88,"column":8},"end":{"line":88,"column":55}}},"15":{"name":"isPathStringWithVariableProps","line":92,"loc":{"start":{"line":92,"column":8},"end":{"line":92,"column":53}}},"16":{"name":"asNeeded","line":97,"loc":{"start":{"line":97,"column":25},"end":{"line":97,"column":49}}},"17":{"name":"array","line":104,"loc":{"start":{"line":104,"column":19},"end":{"line":104,"column":40}}},"18":{"name":"string","line":109,"loc":{"start":{"line":109,"column":20},"end":{"line":109,"column":42}}},"19":{"name":"(anonymous_19)","line":116,"loc":{"start":{"line":116,"column":48},"end":{"line":116,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":127,"column":2}},"2":{"start":{"line":21,"column":8},"end":{"line":22,"column":71}},"3":{"start":{"line":24,"column":8},"end":{"line":25,"column":56}},"4":{"start":{"line":27,"column":8},"end":{"line":30,"column":10}},"5":{"start":{"line":31,"column":8},"end":{"line":31,"column":42}},"6":{"start":{"line":32,"column":8},"end":{"line":32,"column":52}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":42}},"8":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":40}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"11":{"start":{"line":37,"column":8},"end":{"line":39,"column":10}},"12":{"start":{"line":38,"column":12},"end":{"line":38,"column":42}},"13":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":53}},"15":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"16":{"start":{"line":46,"column":12},"end":{"line":46,"column":40}},"17":{"start":{"line":49,"column":8},"end":{"line":57,"column":9}},"18":{"start":{"line":50,"column":12},"end":{"line":52,"column":14}},"19":{"start":{"line":51,"column":16},"end":{"line":51,"column":59}},"20":{"start":{"line":53,"column":12},"end":{"line":55,"column":15}},"21":{"start":{"line":54,"column":16},"end":{"line":54,"column":60}},"22":{"start":{"line":56,"column":12},"end":{"line":56,"column":64}},"23":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"24":{"start":{"line":60,"column":12},"end":{"line":60,"column":62}},"25":{"start":{"line":61,"column":12},"end":{"line":61,"column":78}},"26":{"start":{"line":64,"column":8},"end":{"line":64,"column":69}},"27":{"start":{"line":65,"column":8},"end":{"line":65,"column":53}},"28":{"start":{"line":66,"column":8},"end":{"line":66,"column":78}},"29":{"start":{"line":67,"column":8},"end":{"line":67,"column":69}},"30":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"31":{"start":{"line":70,"column":12},"end":{"line":70,"column":78}},"32":{"start":{"line":73,"column":8},"end":{"line":80,"column":9}},"33":{"start":{"line":74,"column":12},"end":{"line":76,"column":15}},"34":{"start":{"line":75,"column":16},"end":{"line":75,"column":45}},"35":{"start":{"line":77,"column":12},"end":{"line":77,"column":66}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":61}},"37":{"start":{"line":79,"column":12},"end":{"line":79,"column":136}},"38":{"start":{"line":82,"column":8},"end":{"line":86,"column":9}},"39":{"start":{"line":83,"column":12},"end":{"line":85,"column":15}},"40":{"start":{"line":84,"column":16},"end":{"line":84,"column":67}},"41":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"42":{"start":{"line":89,"column":12},"end":{"line":89,"column":168}},"43":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"44":{"start":{"line":93,"column":12},"end":{"line":93,"column":100}},"45":{"start":{"line":96,"column":8},"end":{"line":114,"column":10}},"46":{"start":{"line":98,"column":16},"end":{"line":102,"column":17}},"47":{"start":{"line":99,"column":20},"end":{"line":99,"column":74}},"48":{"start":{"line":100,"column":23},"end":{"line":102,"column":17}},"49":{"start":{"line":101,"column":20},"end":{"line":101,"column":82}},"50":{"start":{"line":105,"column":16},"end":{"line":107,"column":17}},"51":{"start":{"line":106,"column":20},"end":{"line":106,"column":67}},"52":{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},"53":{"start":{"line":111,"column":20},"end":{"line":111,"column":67}},"54":{"start":{"line":116,"column":8},"end":{"line":125,"column":11}},"55":{"start":{"line":117,"column":12},"end":{"line":119,"column":41}},"56":{"start":{"line":121,"column":12},"end":{"line":121,"column":88}},"57":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"58":{"start":{"line":123,"column":16},"end":{"line":123,"column":86}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":28}},{"start":{"line":38,"column":32},"end":{"line":38,"column":41}}]},"2":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":37},"end":{"line":56,"column":58}},{"start":{"line":56,"column":61},"end":{"line":56,"column":63}}]},"3":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":59},"end":{"line":61,"column":68}},{"start":{"line":61,"column":71},"end":{"line":61,"column":76}}]},"4":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":19},"end":{"line":70,"column":42}},{"start":{"line":70,"column":46},"end":{"line":70,"column":77}}]},"5":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":19},"end":{"line":79,"column":30}},{"start":{"line":79,"column":34},"end":{"line":79,"column":75}},{"start":{"line":79,"column":79},"end":{"line":79,"column":89}},{"start":{"line":79,"column":93},"end":{"line":79,"column":135}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":19},"end":{"line":83,"column":42}},{"start":{"line":83,"column":46},"end":{"line":85,"column":14}}]},"7":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":19},"end":{"line":89,"column":35}},{"start":{"line":89,"column":40},"end":{"line":89,"column":60}},{"start":{"line":89,"column":64},"end":{"line":89,"column":99}},{"start":{"line":89,"column":103},"end":{"line":89,"column":124}},{"start":{"line":89,"column":128},"end":{"line":89,"column":166}}]},"8":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":19},"end":{"line":93,"column":58}},{"start":{"line":93,"column":62},"end":{"line":93,"column":99}}]},"9":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":16}},{"start":{"line":98,"column":16},"end":{"line":98,"column":16}}]},"10":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":23},"end":{"line":100,"column":23}},{"start":{"line":100,"column":23},"end":{"line":100,"column":23}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":16}},{"start":{"line":105,"column":16},"end":{"line":105,"column":16}}]},"12":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":16}},{"start":{"line":110,"column":16},"end":{"line":110,"column":16}}]},"13":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"14":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":33},"end":{"line":123,"column":51}},{"start":{"line":123,"column":55},"end":{"line":123,"column":66}}]}},"code":["/**"," * @fileoverview Rule to check if there's a JS native method in the lodash chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if there's a JS native method in the lodash chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            enum: ['as-needed', 'array', 'string']","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require2.isAliasOfMethod;","","        var objectPathMethods = {","            regular: { methods: ['get', 'has', 'hasIn', 'set', 'unset', 'invoke'], index: 1 },","            higherOrder: { methods: ['property', 'matchesProperty'], index: 0 }","        };","        var find = require('lodash/find');","        var findIndex = require('lodash/findIndex');","        var some = require('lodash/some');","        var every = require('lodash/every');","        var get = require('lodash/get');","        var matches = require('lodash/matches');","        var isPropAccess = function isPropAccess(x) {","            return x === '.' || x === '[';","        };","","        function endsWithPropAccess(str) {","            return isPropAccess(str[str.length - 1]);","        }","","        function startsWithPropAccess(str) {","            return isPropAccess(str[0]);","        }","","        function getIndexByMethodName(method, version) {","            var isAliasOfSuspect = function isAliasOfSuspect(m) {","                return isAliasOfMethod(version, m, method);","            };","            var pathMethodGroup = find(objectPathMethods, function (type) {","                return some(type.methods, isAliasOfSuspect);","            });","            return pathMethodGroup ? pathMethodGroup.index : -1;","        }","","        function getPropertyPathNode(node, method, version, callType) {","            var index = getIndexByMethodName(method, version);","            return node.arguments[callType === 'chained' ? index - 1 : index];","        }","","        var isArrayExpression = matches({ type: 'ArrayExpression' });","        var isLiteral = matches({ type: 'Literal' });","        var isAddition = matches({ type: 'BinaryExpression', operator: '+' });","        var isTemplateLiteral = matches({ type: 'TemplateLiteral' });","","        function isArrayOfLiterals(node) {","            return isArrayExpression(node) && every(node.elements, isLiteral);","        }","","        function isAdjacentToPropAccessInTemplate(exp, literal) {","            var quasiAfterIndex = findIndex(literal.quasis, function (quasi) {","                return quasi.start > exp.end;","            });","            var quasiBefore = literal.quasis[quasiAfterIndex - 1];","            var quasiAfter = literal.quasis[quasiAfterIndex];","            return quasiBefore && endsWithPropAccess(quasiBefore.value.raw) || quasiAfter && startsWithPropAccess(quasiAfter.value.raw);","        }","","        function isTemplateStringWithVariableProps(node) {","            return isTemplateLiteral(node) && some(node.expressions, function (exp) {","                return isAdjacentToPropAccessInTemplate(exp, node);","            });","        }","","        function isStringConcatWithVariableProps(node) {","            return isAddition(node) && (isLiteral(node.left) && endsWithPropAccess(node.left.value) || isLiteral(node.right) && startsWithPropAccess(node.right.value));","        }","","        function isPathStringWithVariableProps(node) {","            return isTemplateStringWithVariableProps(node) || isStringConcatWithVariableProps(node);","        }","","        var reportIfViolates = {","            'as-needed': function asNeeded(node) {","                if (isArrayOfLiterals(node)) {","                    context.report(node, 'Use a string for simple paths');","                } else if (isPathStringWithVariableProps(node)) {","                    context.report(node, 'Use an array for paths with variables');","                }","            },","            array: function array(node) {","                if (isLiteral(node)) {","                    context.report(node, 'Use an array for paths');","                }","            },","            string: function string(node) {","                if (isArrayExpression(node)) {","                    context.report(node, 'Use a string for paths');","                }","            }","        };","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version,","                callType = _ref.callType;","","            var propertyPathNode = getPropertyPathNode(node, method, version, callType);","            if (propertyPathNode) {","                reportIfViolates[context.options[0] || 'as-needed'](propertyPathNode);","            }","        });","    }","};"],"l":{"13":1,"21":0,"24":0,"27":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"41":1,"42":0,"45":1,"46":0,"49":1,"50":0,"51":0,"53":0,"54":0,"56":0,"59":1,"60":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":1,"70":0,"73":1,"74":0,"75":0,"77":0,"78":0,"79":0,"82":1,"83":0,"84":0,"88":1,"89":0,"92":1,"93":0,"96":0,"98":0,"99":0,"100":0,"101":0,"105":0,"106":0,"110":0,"111":0,"116":0,"117":0,"121":0,"122":0,"123":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-chain.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}}},"2":{"name":"isNestedNLevels","line":39,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":42}}},"3":{"name":"CallExpression","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":58}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":51,"column":2}},"2":{"start":{"line":22,"column":8},"end":{"line":22,"column":53}},"3":{"start":{"line":24,"column":8},"end":{"line":24,"column":49}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":71}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":51}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":44}},"7":{"start":{"line":31,"column":8},"end":{"line":31,"column":52}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":68}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":31}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":76}},"11":{"start":{"line":37,"column":8},"end":{"line":37,"column":75}},"12":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"13":{"start":{"line":40,"column":12},"end":{"line":40,"column":120}},"14":{"start":{"line":43,"column":8},"end":{"line":49,"column":45}},"15":{"start":{"line":45,"column":16},"end":{"line":47,"column":17}},"16":{"start":{"line":46,"column":20},"end":{"line":46,"column":99}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":56}},{"start":{"line":37,"column":60},"end":{"line":37,"column":74}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":26}},{"start":{"line":40,"column":30},"end":{"line":40,"column":74}},{"start":{"line":40,"column":78},"end":{"line":40,"column":119}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":16}},{"start":{"line":45,"column":16},"end":{"line":45,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if the expression could be better expressed as a chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if the expression could be better expressed as a chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'integer',","            minimum: 2","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil');","","        var isLodashCall = _require.isLodashCall;","        var getLodashImportVisitors = _require.getLodashImportVisitors;","","        var _require2 = require('../util/astUtil');","","        var getCaller = _require2.getCaller;","","        var _require3 = require('../util/ruleUtil');","","        var combineVisitorObjects = _require3.combineVisitorObjects;","","        var DEFAULT_LENGTH = 3;","        var settings = require('../util/settingsUtil').getSettings(context);","        var ruleDepth = parseInt(context.options[0], 10) || DEFAULT_LENGTH;","","        function isNestedNLevels(node, n) {","            return n === 0 || isLodashCall(node, settings.pragma, context) && isNestedNLevels(node.arguments[0], n - 1);","        }","","        return combineVisitorObjects({","            CallExpression: function CallExpression(node) {","                if (isNestedNLevels(node, ruleDepth)) {","                    context.report(getCaller(node.arguments[0]), 'Prefer chaining to composition');","                }","            }","        }, getLodashImportVisitors(context));","    }","};"],"l":{"13":1,"22":0,"24":0,"25":0,"27":0,"29":0,"31":0,"33":0,"35":0,"36":0,"37":0,"39":1,"40":0,"43":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-compact.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-compact.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0,0],"2":[0,0,0,0],"3":[0,0,0,0,0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isDoubleNegationOfParam","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":57}}},"3":{"name":"isCallToBooleanCastOfParam","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":60}}},"4":{"name":"isBooleanCastingFunction","line":35,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":48},"end":{"line":41,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":50,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":71}},"3":{"start":{"line":18,"column":8},"end":{"line":22,"column":60}},"4":{"start":{"line":24,"column":8},"end":{"line":25,"column":56}},"5":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"6":{"start":{"line":28,"column":12},"end":{"line":28,"column":141}},"7":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"8":{"start":{"line":32,"column":12},"end":{"line":32,"column":142}},"9":{"start":{"line":35,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":36,"column":12},"end":{"line":36,"column":69}},"11":{"start":{"line":37,"column":12},"end":{"line":37,"column":52}},"12":{"start":{"line":38,"column":12},"end":{"line":38,"column":234}},"13":{"start":{"line":41,"column":8},"end":{"line":48,"column":11}},"14":{"start":{"line":42,"column":12},"end":{"line":43,"column":39}},"15":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"16":{"start":{"line":46,"column":16},"end":{"line":46,"column":91}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":44}},{"start":{"line":28,"column":48},"end":{"line":28,"column":82}},{"start":{"line":28,"column":86},"end":{"line":28,"column":140}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":19},"end":{"line":32,"column":22}},{"start":{"line":32,"column":26},"end":{"line":32,"column":55}},{"start":{"line":32,"column":59},"end":{"line":32,"column":88}},{"start":{"line":32,"column":92},"end":{"line":32,"column":141}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":23}},{"start":{"line":38,"column":27},"end":{"line":38,"column":53}},{"start":{"line":38,"column":57},"end":{"line":38,"column":80}},{"start":{"line":38,"column":84},"end":{"line":38,"column":128}},{"start":{"line":38,"column":132},"end":{"line":38,"column":179}},{"start":{"line":38,"column":183},"end":{"line":38,"column":233}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":58}},{"start":{"line":45,"column":62},"end":{"line":45,"column":96}}]}},"code":["/**"," * @fileoverview Rule to check if a call to filter should be a call to compact"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to filter should be a call to compact"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            isNegationExpression = _require2.isNegationExpression,","            isIdentifierWithName = _require2.isIdentifierWithName,","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        function isDoubleNegationOfParam(exp, paramName) {","            return isNegationExpression(exp) && isNegationExpression(exp.argument) && isIdentifierWithName(exp.argument.argument, paramName);","        }","","        function isCallToBooleanCastOfParam(exp, paramName) {","            return exp && exp.type === 'CallExpression' && exp.callee.name === 'Boolean' && isIdentifierWithName(exp.arguments[0], paramName);","        }","","        function isBooleanCastingFunction(func) {","            var returnValue = getValueReturnedInFirstStatement(func);","            var paramName = getFirstParamName(func);","            return func && func.type === 'Identifier' && func.name === 'Boolean' || isIdentifierWithName(returnValue, paramName) || isDoubleNegationOfParam(returnValue, paramName) || isCallToBooleanCastOfParam(returnValue, paramName);","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'filter', method) && isBooleanCastingFunction(iteratee)) {","                context.report(node, 'Prefer _.compact over filtering of Boolean casting');","            }","        });","    }","};"],"l":{"13":1,"15":0,"18":0,"24":0,"27":1,"28":0,"31":1,"32":0,"35":1,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-constant.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":22,"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":37}}},"2":{"name":"isCompletelyLiteral","line":29,"loc":{"start":{"line":29,"column":8},"end":{"line":29,"column":43}}},"3":{"name":"reportIfLikeConstant","line":44,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":50}}},"4":{"name":"handleFunctionDefinition","line":51,"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":48}}},"5":{"name":"FunctionDeclaration","line":57,"loc":{"start":{"line":57,"column":33},"end":{"line":57,"column":68}}},"6":{"name":"ArrowFunctionExpression","line":62,"loc":{"start":{"line":62,"column":37},"end":{"line":62,"column":76}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":69,"column":2}},"2":{"start":{"line":23,"column":8},"end":{"line":24,"column":89}},"3":{"start":{"line":26,"column":8},"end":{"line":26,"column":101}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":108}},"5":{"start":{"line":29,"column":8},"end":{"line":42,"column":9}},"6":{"start":{"line":30,"column":12},"end":{"line":41,"column":13}},"7":{"start":{"line":32,"column":20},"end":{"line":32,"column":32}},"8":{"start":{"line":34,"column":20},"end":{"line":34,"column":93}},"9":{"start":{"line":36,"column":20},"end":{"line":36,"column":62}},"10":{"start":{"line":38,"column":20},"end":{"line":38,"column":137}},"11":{"start":{"line":40,"column":20},"end":{"line":40,"column":33}},"12":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"13":{"start":{"line":45,"column":12},"end":{"line":45,"column":54}},"14":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"15":{"start":{"line":47,"column":16},"end":{"line":47,"column":94}},"16":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":73}},"18":{"start":{"line":55,"column":8},"end":{"line":67,"column":10}},"19":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"20":{"start":{"line":59,"column":20},"end":{"line":59,"column":51}},"21":{"start":{"line":63,"column":16},"end":{"line":65,"column":17}},"22":{"start":{"line":64,"column":20},"end":{"line":64,"column":51}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":75},"end":{"line":26,"column":93}},{"start":{"line":26,"column":96},"end":{"line":26,"column":100}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":81},"end":{"line":27,"column":99}},{"start":{"line":27,"column":102},"end":{"line":27,"column":107}}]},"3":{"line":30,"type":"switch","locations":[{"start":{"line":31,"column":16},"end":{"line":32,"column":32}},{"start":{"line":33,"column":16},"end":{"line":34,"column":93}},{"start":{"line":35,"column":16},"end":{"line":36,"column":62}},{"start":{"line":37,"column":16},"end":{"line":38,"column":137}},{"start":{"line":39,"column":16},"end":{"line":40,"column":33}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":27},"end":{"line":34,"column":57}},{"start":{"line":34,"column":61},"end":{"line":34,"column":92}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":27},"end":{"line":38,"column":57}},{"start":{"line":38,"column":61},"end":{"line":38,"column":97}},{"start":{"line":38,"column":101},"end":{"line":38,"column":136}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"7":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":40}},{"start":{"line":46,"column":44},"end":{"line":46,"column":89}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":16}},{"start":{"line":63,"column":16},"end":{"line":63,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if the expression could be better expressed as a _.constant"," */","'use strict';","","/**"," * @fileoverview Rule to check if the expression could be better expressed as a _.constant"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'boolean'","        }, {","            type: 'boolean'","        }]","    },","","    create: function create(context) {","        var _require = require('../util/astUtil'),","            getValueReturnedInFirstStatement = _require.getValueReturnedInFirstStatement;","","        var shouldCheckArrowFunctions = context.options[0] !== undefined ? context.options[0] : true;","        var shouldCheckFunctionDeclarations = context.options[1] !== undefined ? context.options[1] : false;","","        function isCompletelyLiteral(node) {","            switch (node.type) {","                case 'Literal':","                    return true;","                case 'BinaryExpression':","                    return isCompletelyLiteral(node.left) && isCompletelyLiteral(node.right);","                case 'UnaryExpression':","                    return isCompletelyLiteral(node.argument);","                case 'ConditionalExpression':","                    return isCompletelyLiteral(node.test) && isCompletelyLiteral(node.consequent) && isCompletelyLiteral(node.alternate);","                default:","                    return false;","            }","        }","","        function reportIfLikeConstant(func, node) {","            var valueReturnedInFirstLine = func(node);","            if (valueReturnedInFirstLine && isCompletelyLiteral(valueReturnedInFirstLine)) {","                context.report(node, 'Prefer _.constant over a function returning a literal');","            }","        }","","        function handleFunctionDefinition(node) {","            reportIfLikeConstant(getValueReturnedInFirstStatement, node);","        }","","        return {","            FunctionExpression: handleFunctionDefinition,","            FunctionDeclaration: function FunctionDeclaration(node) {","                if (shouldCheckFunctionDeclarations) {","                    handleFunctionDefinition(node);","                }","            },","            ArrowFunctionExpression: function ArrowFunctionExpression(node) {","                if (shouldCheckArrowFunctions) {","                    handleFunctionDefinition(node);","                }","            }","        };","    }","};"],"l":{"13":1,"23":0,"26":0,"27":0,"29":1,"30":0,"32":0,"34":0,"36":0,"38":0,"40":0,"44":1,"45":0,"46":0,"47":0,"51":1,"52":0,"55":0,"58":0,"59":0,"63":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-filter.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0,0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":37}}},"2":{"name":"isIfWithoutElse","line":40,"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}}},"3":{"name":"canBeShorthand","line":44,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":48}}},"4":{"name":"onlyHasSimplifiableIf","line":48,"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":45}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":48},"end":{"line":53,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":62,"column":2}},"2":{"start":{"line":21,"column":8},"end":{"line":22,"column":71}},"3":{"start":{"line":24,"column":8},"end":{"line":32,"column":60}},"4":{"start":{"line":34,"column":8},"end":{"line":35,"column":56}},"5":{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},"6":{"start":{"line":38,"column":8},"end":{"line":38,"column":93}},"7":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"8":{"start":{"line":41,"column":12},"end":{"line":41,"column":89}},"9":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"10":{"start":{"line":45,"column":12},"end":{"line":45,"column":310}},"11":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"12":{"start":{"line":49,"column":12},"end":{"line":49,"column":55}},"13":{"start":{"line":50,"column":12},"end":{"line":50,"column":170}},"14":{"start":{"line":53,"column":8},"end":{"line":60,"column":11}},"15":{"start":{"line":54,"column":12},"end":{"line":55,"column":39}},"16":{"start":{"line":57,"column":12},"end":{"line":59,"column":13}},"17":{"start":{"line":58,"column":16},"end":{"line":58,"column":106}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":24},"end":{"line":38,"column":56}},{"start":{"line":38,"column":60},"end":{"line":38,"column":92}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":19},"end":{"line":41,"column":28}},{"start":{"line":41,"column":32},"end":{"line":41,"column":64}},{"start":{"line":41,"column":68},"end":{"line":41,"column":88}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":55}},{"start":{"line":45,"column":59},"end":{"line":45,"column":114}},{"start":{"line":45,"column":118},"end":{"line":45,"column":180}},{"start":{"line":45,"column":184},"end":{"line":45,"column":244}},{"start":{"line":45,"column":248},"end":{"line":45,"column":309}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":19},"end":{"line":50,"column":23}},{"start":{"line":50,"column":27},"end":{"line":50,"column":52}},{"start":{"line":50,"column":56},"end":{"line":50,"column":80}},{"start":{"line":50,"column":84},"end":{"line":50,"column":110}},{"start":{"line":50,"column":114},"end":{"line":50,"column":169}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":59}},{"start":{"line":57,"column":63},"end":{"line":57,"column":94}}]}},"code":["/**"," * @fileoverview Rule to check if a call to _.forEach should be a call to _.filter"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to _.forEach should be a call to _.filter"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'integer'","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            isIdentifierWithName = _require2.isIdentifierWithName,","            isMemberExpOf = _require2.isMemberExpOf,","            isNegationOfMemberOf = _require2.isNegationOfMemberOf,","            isEqEqEqToMemberOf = _require2.isEqEqEqToMemberOf,","            isNotEqEqToMemberOf = _require2.isNotEqEqToMemberOf,","            getFirstFunctionLine = _require2.getFirstFunctionLine,","            hasOnlyOneStatement = _require2.hasOnlyOneStatement,","            getFirstParamName = _require2.getFirstParamName;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var DEFAULT_MAX_PROPERTY_PATH_LENGTH = 3;","        var maxLength = parseInt(context.options[0], 10) || DEFAULT_MAX_PROPERTY_PATH_LENGTH;","","        function isIfWithoutElse(statement) {","            return statement && statement.type === 'IfStatement' && !statement.alternate;","        }","","        function canBeShorthand(exp, paramName) {","            return isIdentifierWithName(exp, paramName) || isMemberExpOf(exp, paramName, { maxLength: maxLength }) || isNegationOfMemberOf(exp, paramName, { maxLength: maxLength }) || isEqEqEqToMemberOf(exp, paramName, { maxLength: maxLength }) || isNotEqEqToMemberOf(exp, paramName, { maxLength: maxLength });","        }","","        function onlyHasSimplifiableIf(func) {","            var firstLine = getFirstFunctionLine(func);","            return func && hasOnlyOneStatement(func) && func.params.length === 1 && isIfWithoutElse(firstLine) && canBeShorthand(firstLine.test, getFirstParamName(func));","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'forEach', method) && onlyHasSimplifiableIf(iteratee)) {","                context.report(node, 'Prefer _.filter or _.some over an if statement inside a _.forEach');","            }","        });","    }","};"],"l":{"13":1,"21":0,"24":0,"34":0,"37":0,"38":0,"40":1,"41":0,"44":1,"45":0,"48":1,"49":0,"50":0,"53":0,"54":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-flat-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-flat-map.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isChainedMapFlatten","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":62}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":48},"end":{"line":30,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":41,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":18,"column":65}},"3":{"start":{"line":20,"column":8},"end":{"line":21,"column":44}},"4":{"start":{"line":23,"column":8},"end":{"line":24,"column":56}},"5":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"6":{"start":{"line":27,"column":12},"end":{"line":27,"column":93}},"7":{"start":{"line":30,"column":8},"end":{"line":39,"column":11}},"8":{"start":{"line":31,"column":12},"end":{"line":34,"column":51}},"9":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"10":{"start":{"line":37,"column":16},"end":{"line":37,"column":91}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":19},"end":{"line":27,"column":41}},{"start":{"line":27,"column":45},"end":{"line":27,"column":92}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":59}},{"start":{"line":36,"column":64},"end":{"line":36,"column":108}},{"start":{"line":36,"column":112},"end":{"line":36,"column":173}}]}},"code":["/**"," * @fileoverview Rule to check if a call to map and flatten should be a call to _.flatMap"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to map and flatten should be a call to _.flatMap"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors,","            isCallToMethod = _require.isCallToMethod,","            isCallToLodashMethod = _require.isCallToLodashMethod;","","        var _require2 = require('../util/astUtil'),","            getCaller = _require2.getCaller;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        function isChainedMapFlatten(callType, node, version) {","            return callType === 'chained' && isCallToMethod(getCaller(node), version, 'map');","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version,","                callType = _ref.callType,","                lodashContext = _ref.lodashContext;","","            if (isAliasOfMethod(version, 'flatten', method) && (isChainedMapFlatten(callType, node, version) || isCallToLodashMethod(node.arguments[0], 'map', lodashContext))) {","                context.report(node, 'Prefer _.flatMap over consecutive map and flatten.');","            }","        });","    }","};"],"l":{"13":1,"15":0,"20":0,"23":0,"26":1,"27":0,"30":0,"31":0,"36":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-get.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-get.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}}},"2":{"name":"getState","line":32,"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":28}}},"3":{"name":"shouldCheckDeeper","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":63}}},"4":{"name":"LogicalExpression","line":41,"loc":{"start":{"line":41,"column":31},"end":{"line":41,"column":64}}},"5":{"name":"LogicalExpressionExit","line":52,"loc":{"start":{"line":52,"column":38},"end":{"line":52,"column":75}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":60,"column":2}},"2":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"3":{"start":{"line":24,"column":8},"end":{"line":27,"column":41}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":75}},"5":{"start":{"line":31,"column":8},"end":{"line":31,"column":27}},"6":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"7":{"start":{"line":33,"column":12},"end":{"line":33,"column":67}},"8":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"9":{"start":{"line":37,"column":12},"end":{"line":37,"column":185}},"10":{"start":{"line":40,"column":8},"end":{"line":58,"column":10}},"11":{"start":{"line":42,"column":16},"end":{"line":42,"column":39}},"12":{"start":{"line":43,"column":16},"end":{"line":43,"column":110}},"13":{"start":{"line":45,"column":16},"end":{"line":50,"column":17}},"14":{"start":{"line":46,"column":20},"end":{"line":46,"column":92}},"15":{"start":{"line":47,"column":20},"end":{"line":49,"column":21}},"16":{"start":{"line":48,"column":24},"end":{"line":48,"column":89}},"17":{"start":{"line":53,"column":16},"end":{"line":53,"column":39}},"18":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"19":{"start":{"line":55,"column":20},"end":{"line":55,"column":36}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":56}},{"start":{"line":29,"column":60},"end":{"line":29,"column":74}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":50}},{"start":{"line":33,"column":54},"end":{"line":33,"column":66}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":19},"end":{"line":37,"column":41}},{"start":{"line":37,"column":45},"end":{"line":37,"column":54}},{"start":{"line":37,"column":58},"end":{"line":37,"column":95}},{"start":{"line":37,"column":99},"end":{"line":37,"column":121}},{"start":{"line":37,"column":126},"end":{"line":37,"column":136}},{"start":{"line":37,"column":140},"end":{"line":37,"column":183}}]},"4":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":81},"end":{"line":43,"column":96}},{"start":{"line":43,"column":99},"end":{"line":43,"column":109}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":37},"end":{"line":43,"column":57}},{"start":{"line":43,"column":61},"end":{"line":43,"column":78}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":16}},{"start":{"line":45,"column":16},"end":{"line":45,"column":16}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":20},"end":{"line":47,"column":20}},{"start":{"line":47,"column":20},"end":{"line":47,"column":20}}]},"8":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":24},"end":{"line":47,"column":79}},{"start":{"line":47,"column":83},"end":{"line":47,"column":111}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":16}},{"start":{"line":54,"column":16},"end":{"line":54,"column":16}}]},"10":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":20},"end":{"line":54,"column":25}},{"start":{"line":54,"column":29},"end":{"line":54,"column":61}}]}},"code":["/**"," * @fileoverview Rule to check if an \"&&\" experssion should be a call to _.get or _.has"," */","'use strict';","","/**"," * @fileoverview Rule to check if an \"&&\" experssion should be a call to _.get or _.has"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'integer',","            minimum: 2","        }]","    },","","    create: function create(context) {","        var DEFAULT_LENGTH = 3;","","        var _require = require('../util/astUtil'),","            isComputed = _require.isComputed,","            isEquivalentMemberExp = _require.isEquivalentMemberExp,","            isEqEqEq = _require.isEqEqEq;","","        var ruleDepth = parseInt(context.options[0], 10) || DEFAULT_LENGTH;","","        var expStates = [];","        function getState() {","            return expStates[expStates.length - 1] || { depth: 0 };","        }","","        function shouldCheckDeeper(node, nodeRight, toCompare) {","            return node.operator === '&&' && nodeRight && nodeRight.type === 'MemberExpression' && !isComputed(nodeRight) && (!toCompare || isEquivalentMemberExp(nodeRight, toCompare));","        }","","        return {","            LogicalExpression: function LogicalExpression(node) {","                var state = getState();","                var rightMemberExp = isEqEqEq(node.right) && state.depth === 0 ? node.right.left : node.right;","","                if (shouldCheckDeeper(node, rightMemberExp, state.node)) {","                    expStates.push({ depth: state.depth + 1, node: rightMemberExp.object });","                    if (isEquivalentMemberExp(node.left, rightMemberExp.object) && state.depth >= ruleDepth - 2) {","                        context.report(node, \"Prefer _.get or _.has over an '&&' chain\");","                    }","                }","            },","            'LogicalExpression:exit': function LogicalExpressionExit(node) {","                var state = getState();","                if (state && state.node === node.right.object) {","                    expStates.pop();","                }","            }","        };","    }","};"],"l":{"13":1,"22":0,"24":0,"29":0,"31":0,"32":1,"33":0,"36":1,"37":0,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"53":0,"54":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-includes.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-includes.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":37}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":56},"end":{"line":38,"column":88}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":40},"end":{"line":47,"column":56}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":55,"column":2}},"2":{"start":{"line":26,"column":8},"end":{"line":26,"column":83}},"3":{"start":{"line":28,"column":8},"end":{"line":30,"column":51}},"4":{"start":{"line":32,"column":8},"end":{"line":33,"column":72}},"5":{"start":{"line":35,"column":8},"end":{"line":36,"column":56}},"6":{"start":{"line":38,"column":8},"end":{"line":45,"column":11}},"7":{"start":{"line":39,"column":12},"end":{"line":40,"column":39}},"8":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"9":{"start":{"line":43,"column":16},"end":{"line":43,"column":88}},"10":{"start":{"line":46,"column":8},"end":{"line":52,"column":9}},"11":{"start":{"line":47,"column":12},"end":{"line":51,"column":14}},"12":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"13":{"start":{"line":49,"column":20},"end":{"line":49,"column":92}},"14":{"start":{"line":53,"column":8},"end":{"line":53,"column":24}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":28},"end":{"line":26,"column":46}},{"start":{"line":26,"column":50},"end":{"line":26,"column":82}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":12}},{"start":{"line":42,"column":12},"end":{"line":42,"column":12}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":59}},{"start":{"line":42,"column":63},"end":{"line":42,"column":121}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if an indexOfComparison should be a call to _.includes"," */","'use strict';","","/**"," * @fileoverview Rule to check if an indexOfComparison should be a call to _.includes"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'object',","            properties: {","                includeNative: {","                    type: 'boolean'","                }","            }","        }]","    },","","    create: function create(context) {","        var includeNative = context.options[0] && context.options[0].includeNative;","","        var _require = require('../util/astUtil'),","            getExpressionComparedToInt = _require.getExpressionComparedToInt,","            isIndexOfCall = _require.isIndexOfCall;","","        var _require2 = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require2.getLodashMethodVisitors;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var visitors = getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'indexOf', method) && node === getExpressionComparedToInt(node.parent, -1, true)) {","                context.report(node, 'Prefer _.includes over indexOf comparison to -1');","            }","        });","        if (includeNative) {","            visitors.BinaryExpression = function (node) {","                if (isIndexOfCall(getExpressionComparedToInt(node, -1, true))) {","                    context.report(node, 'Prefer _.includes over indexOf comparison to -1');","                }","            };","        }","        return visitors;","    }","};"],"l":{"13":1,"26":0,"28":0,"32":0,"35":0,"38":0,"39":0,"42":0,"43":0,"46":0,"47":0,"48":0,"49":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-invoke-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-invoke-map.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"create","line":15,"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":37}}},"2":{"name":"isOnlyUsedForObject","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":59}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":43},"end":{"line":29,"column":63}}},"4":{"name":"isFunctionMethodCallOfParam","line":34,"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":51}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":48},"end":{"line":39,"column":80}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":48,"column":2}},"2":{"start":{"line":16,"column":8},"end":{"line":17,"column":71}},"3":{"start":{"line":19,"column":8},"end":{"line":22,"column":60}},"4":{"start":{"line":24,"column":8},"end":{"line":25,"column":56}},"5":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"6":{"start":{"line":28,"column":12},"end":{"line":28,"column":78}},"7":{"start":{"line":29,"column":12},"end":{"line":31,"column":15}},"8":{"start":{"line":30,"column":16},"end":{"line":30,"column":128}},"9":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"10":{"start":{"line":35,"column":12},"end":{"line":35,"column":57}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":155}},"12":{"start":{"line":39,"column":8},"end":{"line":46,"column":11}},"13":{"start":{"line":40,"column":12},"end":{"line":41,"column":39}},"14":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"15":{"start":{"line":44,"column":16},"end":{"line":44,"column":86}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":55}},{"start":{"line":30,"column":59},"end":{"line":30,"column":91}},{"start":{"line":30,"column":95},"end":{"line":30,"column":127}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":19},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":109}},{"start":{"line":36,"column":113},"end":{"line":36,"column":154}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":55}},{"start":{"line":43,"column":59},"end":{"line":43,"column":96}}]}},"code":["/**"," * @fileoverview Rule to check if a call to map should be a call to invokeMap"," */","'use strict';","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        docs: {}","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            isCallFromObject = _require2.isCallFromObject,","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        function isOnlyUsedForObject(func, firstParamName) {","            var declaredVariables = context.eslint.getDeclaredVariables(func);","            return declaredVariables.every(function (variable) {","                return variable.references.length === 0 || variable.name === firstParamName && variable.references.length === 1;","            });","        }","","        function isFunctionMethodCallOfParam(func) {","            var firstParamName = getFirstParamName(func);","            return firstParamName && isCallFromObject(getValueReturnedInFirstStatement(func), firstParamName) && isOnlyUsedForObject(func, firstParamName);","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'map', method) && isFunctionMethodCallOfParam(iteratee)) {","                context.report(node, 'Prefer _.invokeMap over map to a method call.');","            }","        });","    }","};"],"l":{"10":1,"16":0,"19":0,"24":0,"27":1,"28":0,"29":0,"30":0,"34":1,"35":0,"36":0,"39":0,"40":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-is-nil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-is-nil.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0],"3":[0,0,0,0,0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"getLodashTypeCheckedBy","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":51}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":35}}},"4":{"name":"getValueComparedTo","line":42,"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":41}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":45}}},"6":{"name":"getValueWithTypeofUndefinedComparison","line":52,"loc":{"start":{"line":52,"column":8},"end":{"line":52,"column":71}}},"7":{"name":"checkExpression","line":56,"loc":{"start":{"line":56,"column":8},"end":{"line":56,"column":54}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":58},"end":{"line":57,"column":75}}},"9":{"name":"checkNegatedExpression","line":62,"loc":{"start":{"line":62,"column":8},"end":{"line":62,"column":51}}},"10":{"name":"isEquivalentExistingExpression","line":66,"loc":{"start":{"line":66,"column":8},"end":{"line":66,"column":73}}},"11":{"name":"isEquivalentExistingNegation","line":71,"loc":{"start":{"line":71,"column":8},"end":{"line":71,"column":71}}},"12":{"name":"(anonymous_12)","line":77,"loc":{"start":{"line":77,"column":37},"end":{"line":77,"column":53}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":88,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":17,"column":67}},"3":{"start":{"line":19,"column":8},"end":{"line":21,"column":58}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":54}},"6":{"start":{"line":25,"column":8},"end":{"line":34,"column":10}},"7":{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},"8":{"start":{"line":37,"column":12},"end":{"line":39,"column":14}},"9":{"start":{"line":38,"column":16},"end":{"line":38,"column":97}},"10":{"start":{"line":42,"column":8},"end":{"line":46,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":45,"column":14}},"12":{"start":{"line":44,"column":16},"end":{"line":44,"column":190}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":127}},"14":{"start":{"line":50,"column":8},"end":{"line":50,"column":83}},"15":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":214}},"17":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"18":{"start":{"line":57,"column":12},"end":{"line":59,"column":22}},"19":{"start":{"line":58,"column":16},"end":{"line":58,"column":45}},"20":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"21":{"start":{"line":63,"column":12},"end":{"line":63,"column":129}},"22":{"start":{"line":66,"column":8},"end":{"line":69,"column":9}},"23":{"start":{"line":67,"column":12},"end":{"line":67,"column":69}},"24":{"start":{"line":68,"column":12},"end":{"line":68,"column":107}},"25":{"start":{"line":71,"column":8},"end":{"line":74,"column":9}},"26":{"start":{"line":72,"column":12},"end":{"line":72,"column":69}},"27":{"start":{"line":73,"column":12},"end":{"line":73,"column":107}},"28":{"start":{"line":76,"column":8},"end":{"line":76,"column":57}},"29":{"start":{"line":77,"column":8},"end":{"line":85,"column":10}},"30":{"start":{"line":78,"column":12},"end":{"line":84,"column":13}},"31":{"start":{"line":79,"column":16},"end":{"line":81,"column":17}},"32":{"start":{"line":80,"column":20},"end":{"line":80,"column":94}},"33":{"start":{"line":82,"column":19},"end":{"line":84,"column":13}},"34":{"start":{"line":83,"column":16},"end":{"line":83,"column":90}},"35":{"start":{"line":86,"column":8},"end":{"line":86,"column":24}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":23},"end":{"line":38,"column":75}},{"start":{"line":38,"column":79},"end":{"line":38,"column":96}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":55}},{"start":{"line":44,"column":59},"end":{"line":44,"column":85}},{"start":{"line":44,"column":90},"end":{"line":44,"column":124}},{"start":{"line":44,"column":128},"end":{"line":44,"column":137}},{"start":{"line":44,"column":141},"end":{"line":44,"column":174}},{"start":{"line":44,"column":178},"end":{"line":44,"column":188}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":19},"end":{"line":53,"column":51}},{"start":{"line":53,"column":55},"end":{"line":53,"column":81}},{"start":{"line":53,"column":86},"end":{"line":53,"column":115}},{"start":{"line":53,"column":119},"end":{"line":53,"column":147}},{"start":{"line":53,"column":151},"end":{"line":53,"column":179}},{"start":{"line":53,"column":183},"end":{"line":53,"column":212}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":19},"end":{"line":63,"column":45}},{"start":{"line":63,"column":49},"end":{"line":63,"column":91}},{"start":{"line":63,"column":95},"end":{"line":63,"column":128}}]},"5":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":19},"end":{"line":68,"column":26}},{"start":{"line":68,"column":30},"end":{"line":68,"column":106}}]},"6":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":19},"end":{"line":73,"column":26}},{"start":{"line":73,"column":30},"end":{"line":73,"column":106}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":16}},{"start":{"line":79,"column":16},"end":{"line":79,"column":16}}]},"9":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":20},"end":{"line":79,"column":77}},{"start":{"line":79,"column":81},"end":{"line":79,"column":138}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":19},"end":{"line":82,"column":19}},{"start":{"line":82,"column":19},"end":{"line":82,"column":19}}]},"11":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":23},"end":{"line":82,"column":78}},{"start":{"line":82,"column":82},"end":{"line":82,"column":137}}]}},"code":["/**"," * @fileoverview Rule to prefer _.noop over an empty function"," */","'use strict';","","/**"," * @fileoverview Rule to prefer _.noop over an empty function"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/astUtil'),","            isNegationExpression = _require.isNegationExpression,","            isEquivalentMemberExp = _require.isEquivalentMemberExp;","","        var _require2 = require('../util/lodashUtil'),","            isCallToLodashMethod = _require2.isCallToLodashMethod,","            getLodashContext = _require2.getLodashContext;","","        var _ = require('lodash');","        var lodashContext = getLodashContext(context);","        var nilChecks = {","            null: {","                isValue: _.matches({ type: 'Literal', value: null }),","                expressionChecks: [getLodashTypeCheckedBy('isNull'), getValueComparedTo('null')]","            },","            undefined: {","                isValue: _.matches({ type: 'Identifier', name: 'undefined' }),","                expressionChecks: [getLodashTypeCheckedBy('isUndefined'), getValueComparedTo('undefined'), getValueWithTypeofUndefinedComparison]","            }","        };","","        function getLodashTypeCheckedBy(typecheck) {","            return function (node) {","                return isCallToLodashMethod(node, typecheck, lodashContext) && node.arguments[0];","            };","        }","","        function getValueComparedTo(nil) {","            return function (node, operator) {","                return node.type === 'BinaryExpression' && node.operator === operator && (nilChecks[nil].isValue(node.right) && node.left || nilChecks[nil].isValue(node.left) && node.right);","            };","        }","","        var getTypeofArgument = _.cond([[_.matches({ type: 'UnaryExpression', operator: 'typeof' }), _.property('argument')]]);","","        var isUndefinedString = _.matches({ type: 'Literal', value: 'undefined' });","","        function getValueWithTypeofUndefinedComparison(node, operator) {","            return node.type === 'BinaryExpression' && node.operator === operator && (isUndefinedString(node.right) && getTypeofArgument(node.left) || isUndefinedString(node.left) && getTypeofArgument(node.right));","        }","","        function checkExpression(nil, operator, node) {","            return _(nilChecks[nil].expressionChecks).map(function (check) {","                return check(node, operator);","            }).find();","        }","","        function checkNegatedExpression(nil, node) {","            return isNegationExpression(node) && checkExpression(nil, '===', node.argument) || checkExpression(nil, '!==', node);","        }","","        function isEquivalentExistingExpression(node, leftNil, rightNil) {","            var leftExp = checkExpression(leftNil, '===', node.left);","            return leftExp && isEquivalentMemberExp(leftExp, checkExpression(rightNil, '===', node.right));","        }","","        function isEquivalentExistingNegation(node, leftNil, rightNil) {","            var leftExp = checkNegatedExpression(leftNil, node.left);","            return leftExp && isEquivalentMemberExp(leftExp, checkNegatedExpression(rightNil, node.right));","        }","","        var visitors = lodashContext.getImportVisitors();","        visitors.LogicalExpression = function (node) {","            if (node.operator === '||') {","                if (isEquivalentExistingExpression(node, 'undefined', 'null') || isEquivalentExistingExpression(node, 'null', 'undefined')) {","                    context.report(node, 'Prefer isNil over checking for undefined or null.');","                }","            } else if (isEquivalentExistingNegation(node, 'undefined', 'null') || isEquivalentExistingNegation(node, 'null', 'undefined')) {","                context.report(node, 'Prefer isNil over checking for undefined or null.');","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"15":0,"19":0,"23":0,"24":0,"25":0,"36":1,"37":0,"38":0,"42":1,"43":0,"44":0,"48":0,"50":0,"52":1,"53":0,"56":1,"57":0,"58":0,"62":1,"63":0,"66":1,"67":0,"68":0,"71":1,"72":0,"73":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"86":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-chain.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":50,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":19,"column":67}},"3":{"start":{"line":21,"column":8},"end":{"line":24,"column":52}},"4":{"start":{"line":26,"column":8},"end":{"line":26,"column":78}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":54}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":44}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":57}},"8":{"start":{"line":31,"column":8},"end":{"line":47,"column":10}},"9":{"start":{"line":32,"column":12},"end":{"line":46,"column":13}},"10":{"start":{"line":33,"column":16},"end":{"line":35,"column":79}},"11":{"start":{"line":34,"column":20},"end":{"line":34,"column":46}},"12":{"start":{"line":36,"column":16},"end":{"line":41,"column":17}},"13":{"start":{"line":37,"column":20},"end":{"line":37,"column":65}},"14":{"start":{"line":38,"column":20},"end":{"line":40,"column":21}},"15":{"start":{"line":39,"column":24},"end":{"line":39,"column":149}},"16":{"start":{"line":42,"column":19},"end":{"line":46,"column":13}},"17":{"start":{"line":43,"column":16},"end":{"line":45,"column":17}},"18":{"start":{"line":44,"column":20},"end":{"line":44,"column":143}},"19":{"start":{"line":48,"column":8},"end":{"line":48,"column":24}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":25},"end":{"line":35,"column":43}},{"start":{"line":35,"column":47},"end":{"line":35,"column":77}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":16}},{"start":{"line":36,"column":16},"end":{"line":36,"column":16}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":20},"end":{"line":36,"column":49}},{"start":{"line":36,"column":53},"end":{"line":36,"column":79}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":20}},{"start":{"line":38,"column":20},"end":{"line":38,"column":20}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":24},"end":{"line":38,"column":73}},{"start":{"line":38,"column":77},"end":{"line":38,"column":128}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":19},"end":{"line":42,"column":19}},{"start":{"line":42,"column":19},"end":{"line":42,"column":19}}]},"8":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":16}},{"start":{"line":43,"column":16},"end":{"line":43,"column":16}}]},"9":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":20},"end":{"line":43,"column":59}},{"start":{"line":43,"column":63},"end":{"line":43,"column":95}},{"start":{"line":43,"column":99},"end":{"line":43,"column":147}}]}},"code":["/**"," * @fileoverview Rule to check if there's a JS native method in the lodash chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if there's a JS native method in the lodash chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isChainBreaker = _require.isChainBreaker,","            isNativeCollectionMethodCall = _require.isNativeCollectionMethodCall,","            isLodashWrapperMethod = _require.isLodashWrapperMethod;","","        var _require2 = require('../util/astUtil'),","            isMethodCall = _require2.isMethodCall,","            isObjectOfMethodCall = _require2.isObjectOfMethodCall,","            getMethodName = _require2.getMethodName;","","        var REPORT_MESSAGE = \"Do not break chain before method '{{method}}'.\";","        var lodashContext = getLodashContext(context);","        var version = lodashContext.version;","","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isLodashChainStart(node)) {","                do {","                    node = node.parent.parent;","                } while (isMethodCall(node) && !isChainBreaker(node, version));","                if (isChainBreaker(node, version) && isObjectOfMethodCall(node)) {","                    var callAfterChainBreak = node.parent.parent;","                    if (isNativeCollectionMethodCall(callAfterChainBreak) || isLodashWrapperMethod(callAfterChainBreak, version)) {","                        context.report({ node: callAfterChainBreak, message: REPORT_MESSAGE, data: { method: getMethodName(callAfterChainBreak) } });","                    }","                }","            } else if (lodashContext.isLodashCall(node)) {","                if (node.parent.type === 'MemberExpression' && isMethodCall(node.parent.parent) && isNativeCollectionMethodCall(node.parent.parent)) {","                    context.report({ node: node.parent.parent, message: REPORT_MESSAGE, data: { method: getMethodName(node.parent.parent) } });","                }","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"15":0,"21":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-method.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-method.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[0,0,0],"2":[0,0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"create","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":37}}},"2":{"name":"isNonNullObjectCreate","line":68,"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":68}}},"3":{"name":"isStaticNativeMethodCall","line":72,"loc":{"start":{"line":72,"column":8},"end":{"line":72,"column":48}}},"4":{"name":"isNativeStringMethodCall","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":48}}},"5":{"name":"canUseLodash","line":86,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":36}}},"6":{"name":"getTextOfNode","line":90,"loc":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}}},"7":{"name":"someMatch","line":99,"loc":{"start":{"line":99,"column":8},"end":{"line":99,"column":42}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":41},"end":{"line":100,"column":60}}},"9":{"name":"shouldIgnore","line":105,"loc":{"start":{"line":105,"column":8},"end":{"line":105,"column":36}}},"10":{"name":"(anonymous_10)","line":109,"loc":{"start":{"line":109,"column":73},"end":{"line":109,"column":89}}},"11":{"name":"CallExpressionExit","line":112,"loc":{"start":{"line":112,"column":35},"end":{"line":112,"column":69}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":123,"column":2}},"2":{"start":{"line":32,"column":8},"end":{"line":35,"column":83}},"3":{"start":{"line":37,"column":8},"end":{"line":39,"column":44}},"4":{"start":{"line":41,"column":8},"end":{"line":41,"column":42}},"5":{"start":{"line":42,"column":8},"end":{"line":42,"column":40}},"6":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"7":{"start":{"line":44,"column":8},"end":{"line":44,"column":48}},"8":{"start":{"line":45,"column":8},"end":{"line":45,"column":42}},"9":{"start":{"line":46,"column":8},"end":{"line":46,"column":40}},"10":{"start":{"line":47,"column":8},"end":{"line":47,"column":46}},"11":{"start":{"line":48,"column":8},"end":{"line":48,"column":79}},"12":{"start":{"line":49,"column":8},"end":{"line":49,"column":79}},"13":{"start":{"line":50,"column":8},"end":{"line":50,"column":36}},"14":{"start":{"line":52,"column":8},"end":{"line":64,"column":10}},"15":{"start":{"line":66,"column":8},"end":{"line":66,"column":54}},"16":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"17":{"start":{"line":69,"column":12},"end":{"line":69,"column":100}},"18":{"start":{"line":72,"column":8},"end":{"line":80,"column":9}},"19":{"start":{"line":73,"column":12},"end":{"line":76,"column":14}},"20":{"start":{"line":77,"column":12},"end":{"line":77,"column":61}},"21":{"start":{"line":78,"column":12},"end":{"line":78,"column":49}},"22":{"start":{"line":79,"column":12},"end":{"line":79,"column":166}},"23":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"24":{"start":{"line":83,"column":12},"end":{"line":83,"column":72}},"25":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"26":{"start":{"line":87,"column":12},"end":{"line":87,"column":122}},"27":{"start":{"line":90,"column":8},"end":{"line":97,"column":9}},"28":{"start":{"line":91,"column":12},"end":{"line":96,"column":13}},"29":{"start":{"line":92,"column":16},"end":{"line":94,"column":17}},"30":{"start":{"line":93,"column":20},"end":{"line":93,"column":37}},"31":{"start":{"line":95,"column":16},"end":{"line":95,"column":61}},"32":{"start":{"line":99,"column":8},"end":{"line":103,"column":9}},"33":{"start":{"line":100,"column":12},"end":{"line":102,"column":15}},"34":{"start":{"line":101,"column":16},"end":{"line":101,"column":42}},"35":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"36":{"start":{"line":106,"column":12},"end":{"line":106,"column":127}},"37":{"start":{"line":108,"column":8},"end":{"line":121,"column":46}},"38":{"start":{"line":110,"column":16},"end":{"line":110,"column":38}},"39":{"start":{"line":113,"column":16},"end":{"line":119,"column":17}},"40":{"start":{"line":114,"column":20},"end":{"line":114,"column":63}},"41":{"start":{"line":115,"column":20},"end":{"line":117,"column":21}},"42":{"start":{"line":116,"column":24},"end":{"line":116,"column":77}},"43":{"start":{"line":118,"column":20},"end":{"line":118,"column":108}}},"branchMap":{"1":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":19},"end":{"line":69,"column":42}},{"start":{"line":69,"column":46},"end":{"line":69,"column":69}},{"start":{"line":69,"column":73},"end":{"line":69,"column":99}}]},"2":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":19},"end":{"line":79,"column":46}},{"start":{"line":79,"column":50},"end":{"line":79,"column":97}},{"start":{"line":79,"column":101},"end":{"line":79,"column":165}}]},"3":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":19},"end":{"line":87,"column":53}},{"start":{"line":87,"column":57},"end":{"line":87,"column":87}},{"start":{"line":87,"column":91},"end":{"line":87,"column":121}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":12}},{"start":{"line":91,"column":12},"end":{"line":91,"column":12}}]},"5":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16}},{"start":{"line":92,"column":16},"end":{"line":92,"column":16}}]},"6":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":19},"end":{"line":100,"column":22}},{"start":{"line":100,"column":26},"end":{"line":102,"column":14}}]},"7":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":19},"end":{"line":106,"column":65}},{"start":{"line":106,"column":69},"end":{"line":106,"column":126}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":16}},{"start":{"line":113,"column":16},"end":{"line":113,"column":16}}]},"9":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":20},"end":{"line":113,"column":42}},{"start":{"line":113,"column":46},"end":{"line":113,"column":65}},{"start":{"line":113,"column":69},"end":{"line":113,"column":87}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":20},"end":{"line":115,"column":20}},{"start":{"line":115,"column":20},"end":{"line":115,"column":20}}]}},"code":["/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","'use strict';","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'object',","            properties: {","                ignoredMethods: {","                    type: 'array',","                    items: {","                        type: 'string'","                    }","                },","                ignoredObjects: {","                    type: 'array',","                    items: {","                        type: 'string'","                    }","                }","            }","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isNativeCollectionMethodCall = _require.isNativeCollectionMethodCall,","            getLodashMethodCallExpVisitor = _require.getLodashMethodCallExpVisitor;","","        var _require2 = require('../util/astUtil'),","            getMethodName = _require2.getMethodName,","            getCaller = _require2.getCaller;","","        var keys = require('lodash/keys');","        var get = require('lodash/get');","        var includes = require('lodash/includes');","        var matches = require('lodash/matches');","        var some = require('lodash/some');","        var map = require('lodash/map');","        var assign = require('lodash/assign');","        var ignoredMethods = get(context, ['options', 0, 'ignoreMethods'], []);","        var ignoredObjects = get(context, ['options', 0, 'ignoreObjects'], []);","        var usingLodash = new Set();","","        var nativeStringMap = {","            endsWith: 'endsWith',","            includes: 'includes',","            padEnd: 'padEnd',","            padStart: 'padStart',","            repeat: 'repeat',","            replace: 'replace',","            split: 'split',","            startsWith: 'startsWith',","            toLowerCase: 'toLower',","            toUpperCase: 'toUpper',","            trim: 'trim'","        };","","        var lodashContext = getLodashContext(context);","","        function isNonNullObjectCreate(callerName, methodName, arg) {","            return callerName === 'Object' && methodName === 'create' && get(arg, 'value') !== null;","        }","","        function isStaticNativeMethodCall(node) {","            var staticMethods = {","                Object: ['assign', 'keys', 'values'],","                Array: ['isArray']","            };","            var callerName = get(node, 'callee.object.name');","            var methodName = getMethodName(node);","            return callerName in staticMethods && includes(staticMethods[callerName], methodName) || isNonNullObjectCreate(callerName, methodName, node.arguments[0]);","        }","","        function isNativeStringMethodCall(node) {","            return includes(keys(nativeStringMap), getMethodName(node));","        }","","        function canUseLodash(node) {","            return isNativeCollectionMethodCall(node) || isStaticNativeMethodCall(node) || isNativeStringMethodCall(node);","        }","","        function getTextOfNode(node) {","            if (node) {","                if (node.type === 'Identifier') {","                    return node.name;","                }","                return context.getSourceCode().getText(node);","            }","        }","","        function someMatch(patterns, str) {","            return str && some(patterns, function (pattern) {","                return str.match(pattern);","            });","        }","","        function shouldIgnore(node) {","            return someMatch(ignoredMethods, getMethodName(node)) || someMatch(ignoredObjects, getTextOfNode(getCaller(node)));","        }","        return assign({","            CallExpression: getLodashMethodCallExpVisitor(lodashContext, function (node) {","                usingLodash.add(node);","            }),","            'CallExpression:exit': function CallExpressionExit(node) {","                if (!usingLodash.has(node) && !shouldIgnore(node) && canUseLodash(node)) {","                    var lodashMethodName = getMethodName(node);","                    if (isNativeStringMethodCall(node)) {","                        lodashMethodName = nativeStringMap[lodashMethodName];","                    }","                    context.report(node, 'Prefer \\'_.' + lodashMethodName + '\\' over the native function.');","                }","            }","        }, lodashContext.getImportVisitors());","    }","};"],"l":{"10":1,"32":0,"37":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"66":0,"68":1,"69":0,"72":1,"73":0,"77":0,"78":0,"79":0,"82":1,"83":0,"86":1,"87":0,"90":1,"91":0,"92":0,"93":0,"95":0,"99":1,"100":0,"101":0,"105":1,"106":0,"108":0,"110":0,"113":0,"114":0,"115":0,"116":0,"118":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-typecheck.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-lodash-typecheck.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isTypeOf","line":25,"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":32}}},"3":{"name":"isStrictComparison","line":29,"loc":{"start":{"line":29,"column":8},"end":{"line":29,"column":42}}},"4":{"name":"isDeclaredVariable","line":33,"loc":{"start":{"line":33,"column":8},"end":{"line":33,"column":42}}},"5":{"name":"getValueForSide","line":38,"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":45}}},"6":{"name":"getTypeofCompareType","line":45,"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":44}}},"7":{"name":"BinaryExpression","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":54,"column":62}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":70,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":42}},"3":{"start":{"line":17,"column":8},"end":{"line":18,"column":55}},"4":{"start":{"line":20,"column":8},"end":{"line":23,"column":10}},"5":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"6":{"start":{"line":26,"column":12},"end":{"line":26,"column":89}},"7":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"8":{"start":{"line":30,"column":12},"end":{"line":30,"column":70}},"9":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"10":{"start":{"line":34,"column":12},"end":{"line":34,"column":64}},"11":{"start":{"line":35,"column":12},"end":{"line":35,"column":63}},"12":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"13":{"start":{"line":39,"column":12},"end":{"line":39,"column":45}},"14":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"15":{"start":{"line":41,"column":16},"end":{"line":41,"column":45}},"16":{"start":{"line":45,"column":8},"end":{"line":49,"column":9}},"17":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"18":{"start":{"line":47,"column":16},"end":{"line":47,"column":87}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":72}},"20":{"start":{"line":53,"column":8},"end":{"line":68,"column":10}},"21":{"start":{"line":55,"column":16},"end":{"line":55,"column":67}},"22":{"start":{"line":56,"column":16},"end":{"line":66,"column":17}},"23":{"start":{"line":57,"column":20},"end":{"line":60,"column":23}},"24":{"start":{"line":61,"column":23},"end":{"line":66,"column":17}},"25":{"start":{"line":62,"column":20},"end":{"line":62,"column":76}},"26":{"start":{"line":63,"column":20},"end":{"line":65,"column":21}},"27":{"start":{"line":64,"column":24},"end":{"line":64,"column":141}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":19},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":58}},{"start":{"line":26,"column":62},"end":{"line":26,"column":88}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":42}},{"start":{"line":30,"column":46},"end":{"line":30,"column":69}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":36}},{"start":{"line":40,"column":41},"end":{"line":40,"column":78}},{"start":{"line":40,"column":82},"end":{"line":40,"column":123}},{"start":{"line":40,"column":127},"end":{"line":40,"column":166}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"6":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":23},"end":{"line":47,"column":52}},{"start":{"line":47,"column":56},"end":{"line":47,"column":86}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":16}},{"start":{"line":56,"column":16},"end":{"line":56,"column":16}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":23},"end":{"line":61,"column":23}},{"start":{"line":61,"column":23},"end":{"line":61,"column":23}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":20}},{"start":{"line":63,"column":20},"end":{"line":63,"column":20}}]},"10":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":24},"end":{"line":63,"column":56}},{"start":{"line":63,"column":60},"end":{"line":63,"column":76}}]}},"code":["/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var some = require('lodash/some');","","        var _require = require('../util/lodashUtil'),","            getIsTypeMethod = _require.getIsTypeMethod;","","        var otherSides = {","            left: 'right',","            right: 'left'","        };","","        function isTypeOf(node) {","            return node && node.type === 'UnaryExpression' && node.operator === 'typeof';","        }","","        function isStrictComparison(node) {","            return node.operator === '===' || node.operator === '!==';","        }","","        function isDeclaredVariable(node) {","            var definedVariables = context.getScope().variables;","            return some(definedVariables, { name: node.name });","        }","","        function getValueForSide(node, side) {","            var otherSide = otherSides[side];","            if (isTypeOf(node[side]) && (node[otherSide].value !== 'undefined' || node[side].argument.type !== 'Identifier' || isDeclaredVariable(node[side].argument))) {","                return node[otherSide].value;","            }","        }","","        function getTypeofCompareType(node) {","            if (isStrictComparison(node)) {","                return getValueForSide(node, 'left') || getValueForSide(node, 'right');","            }","        }","","        var REPORT_MESSAGE = 'Prefer \\'_.{{method}}\\' over {{actual}}.';","","        return {","            BinaryExpression: function BinaryExpression(node) {","                var typeofCompareType = getTypeofCompareType(node);","                if (typeofCompareType) {","                    context.report(node, REPORT_MESSAGE, {","                        method: getIsTypeMethod(typeofCompareType),","                        actual: '\\'typeof\\' comparison'","                    });","                } else if (node.operator === 'instanceof') {","                    var lodashEquivalent = getIsTypeMethod(node.right.name);","                    if (node.right.type === 'Identifier' && lodashEquivalent) {","                        context.report(node, REPORT_MESSAGE, { method: lodashEquivalent, actual: '\\'instanceof ' + node.right.name + '\\'' });","                    }","                }","            }","        };","    }","};"],"l":{"13":1,"15":0,"17":0,"20":0,"25":1,"26":0,"29":1,"30":0,"33":1,"34":0,"35":0,"38":1,"39":0,"40":0,"41":0,"45":1,"46":0,"47":0,"51":0,"53":0,"55":0,"56":0,"57":0,"61":0,"62":0,"63":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-map.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"onlyHasPush","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":35}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":48},"end":{"line":38,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":47,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":71}},"3":{"start":{"line":18,"column":8},"end":{"line":23,"column":70}},"4":{"start":{"line":25,"column":8},"end":{"line":26,"column":56}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":40}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":50}},"7":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"8":{"start":{"line":32,"column":12},"end":{"line":32,"column":55}},"9":{"start":{"line":33,"column":12},"end":{"line":33,"column":52}},"10":{"start":{"line":34,"column":12},"end":{"line":34,"column":115}},"11":{"start":{"line":35,"column":12},"end":{"line":35,"column":167}},"12":{"start":{"line":38,"column":8},"end":{"line":45,"column":11}},"13":{"start":{"line":39,"column":12},"end":{"line":40,"column":39}},"14":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"15":{"start":{"line":43,"column":16},"end":{"line":43,"column":101}}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":69},"end":{"line":34,"column":78}},{"start":{"line":34,"column":81},"end":{"line":34,"column":114}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":26}},{"start":{"line":34,"column":30},"end":{"line":34,"column":66}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":81},"end":{"line":34,"column":90}},{"start":{"line":34,"column":94},"end":{"line":34,"column":114}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":19},"end":{"line":35,"column":23}},{"start":{"line":35,"column":27},"end":{"line":35,"column":52}},{"start":{"line":35,"column":56},"end":{"line":35,"column":85}},{"start":{"line":35,"column":89},"end":{"line":35,"column":166}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":12}},{"start":{"line":42,"column":12},"end":{"line":42,"column":12}}]},"6":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":59}},{"start":{"line":42,"column":63},"end":{"line":42,"column":84}}]}},"code":["/**"," * @fileoverview Rule to check if a call to _.forEach should be a call to _.filter"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to _.forEach should be a call to _.filter"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            getFirstFunctionLine = _require2.getFirstFunctionLine,","            hasOnlyOneStatement = _require2.hasOnlyOneStatement,","            getMethodName = _require2.getMethodName,","            isFunctionDefinitionWithBlock = _require2.isFunctionDefinitionWithBlock,","            collectParameterValues = _require2.collectParameterValues;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var get = require('lodash/get');","        var includes = require('lodash/includes');","","        function onlyHasPush(func) {","            var firstLine = getFirstFunctionLine(func);","            var firstParam = get(func, 'params[0]');","            var exp = func && !isFunctionDefinitionWithBlock(func) ? firstLine : firstLine && firstLine.expression;","            return func && hasOnlyOneStatement(func) && getMethodName(exp) === 'push' && !includes(collectParameterValues(firstParam), get(exp, 'callee.object.name'));","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'forEach', method) && onlyHasPush(iteratee)) {","                context.report(node, 'Prefer _.map over a _.forEach with a push to an array inside');","            }","        });","    }","};"],"l":{"13":1,"15":0,"18":0,"25":0,"28":0,"29":0,"31":1,"32":0,"33":0,"34":0,"35":0,"38":0,"39":0,"42":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-matches.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-matches.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}}},"2":{"name":"getState","line":33,"loc":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}}},"3":{"name":"isMemberExpOfNodeOrRightmost","line":37,"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":63}}},"4":{"name":"shouldCheckDeeper","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":52}}},"5":{"name":"LogicalExpression","line":46,"loc":{"start":{"line":46,"column":31},"end":{"line":46,"column":64}}},"6":{"name":"LogicalExpressionExit","line":55,"loc":{"start":{"line":55,"column":38},"end":{"line":55,"column":75}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":63,"column":2}},"2":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"3":{"start":{"line":24,"column":8},"end":{"line":27,"column":41}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":75}},"5":{"start":{"line":30,"column":8},"end":{"line":30,"column":40}},"6":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"7":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"8":{"start":{"line":34,"column":12},"end":{"line":34,"column":67}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"10":{"start":{"line":38,"column":12},"end":{"line":38,"column":138}},"11":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"12":{"start":{"line":42,"column":12},"end":{"line":42,"column":126}},"13":{"start":{"line":45,"column":8},"end":{"line":61,"column":10}},"14":{"start":{"line":47,"column":16},"end":{"line":47,"column":39}},"15":{"start":{"line":48,"column":16},"end":{"line":53,"column":17}},"16":{"start":{"line":49,"column":20},"end":{"line":49,"column":93}},"17":{"start":{"line":50,"column":20},"end":{"line":52,"column":21}},"18":{"start":{"line":51,"column":24},"end":{"line":51,"column":100}},"19":{"start":{"line":56,"column":16},"end":{"line":56,"column":39}},"20":{"start":{"line":57,"column":16},"end":{"line":59,"column":17}},"21":{"start":{"line":58,"column":20},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":56}},{"start":{"line":29,"column":60},"end":{"line":29,"column":74}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":19},"end":{"line":34,"column":50}},{"start":{"line":34,"column":54},"end":{"line":34,"column":66}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":51}},{"start":{"line":38,"column":55},"end":{"line":38,"column":72}},{"start":{"line":38,"column":77},"end":{"line":38,"column":87}},{"start":{"line":38,"column":91},"end":{"line":38,"column":136}}]},"4":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":19},"end":{"line":42,"column":41}},{"start":{"line":42,"column":45},"end":{"line":42,"column":65}},{"start":{"line":42,"column":69},"end":{"line":42,"column":125}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":20},"end":{"line":50,"column":20}},{"start":{"line":50,"column":20},"end":{"line":50,"column":20}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":24},"end":{"line":50,"column":108}},{"start":{"line":50,"column":112},"end":{"line":50,"column":140}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":16}},{"start":{"line":57,"column":16},"end":{"line":57,"column":16}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":20},"end":{"line":57,"column":25}},{"start":{"line":57,"column":29},"end":{"line":57,"column":74}}]}},"code":["/**"," * @fileoverview Rule to check if an \"&&\" experssion should be a call to _.get or _.has"," */","'use strict';","","/**"," * @fileoverview Rule to check if an \"&&\" experssion should be a call to _.get or _.has"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'integer',","            minimum: 2","        }]","    },","","    create: function create(context) {","        var DEFAULT_LENGTH = 3;","","        var _require = require('../util/astUtil'),","            isComputed = _require.isComputed,","            isEquivalentMemberExp = _require.isEquivalentMemberExp,","            isEqEqEq = _require.isEqEqEq;","","        var ruleDepth = parseInt(context.options[0], 10) || DEFAULT_LENGTH;","        var get = require('lodash/get');","","        var expStates = [];","        function getState() {","            return expStates[expStates.length - 1] || { depth: 0 };","        }","","        function isMemberExpOfNodeOrRightmost(node, toCompare) {","            return node.type === 'MemberExpression' && !isComputed(node) && (!toCompare || isEquivalentMemberExp(node.object, toCompare));","        }","","        function shouldCheckDeeper(node, toCompare) {","            return node.operator === '&&' && isEqEqEq(node.right) && isMemberExpOfNodeOrRightmost(node.right.left, toCompare);","        }","","        return {","            LogicalExpression: function LogicalExpression(node) {","                var state = getState();","                if (shouldCheckDeeper(node, state.node)) {","                    expStates.push({ depth: state.depth + 1, node: node.right.left.object });","                    if (isEquivalentMemberExp(get(node, 'left.left.object'), get(node, 'right.left.object')) && state.depth >= ruleDepth - 2) {","                        context.report(node, 'Prefer _.isMatch over conditions on the same object');","                    }","                }","            },","            'LogicalExpression:exit': function LogicalExpressionExit(node) {","                var state = getState();","                if (state && state.node === get(node, 'right.left.object')) {","                    expStates.pop();","                }","            }","        };","    }","};"],"l":{"13":1,"22":0,"24":0,"29":0,"30":0,"32":0,"33":1,"34":0,"37":1,"38":0,"41":1,"42":0,"45":0,"47":0,"48":0,"49":0,"50":0,"51":0,"56":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-noop.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-noop.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"reportIfEmptyFunction","line":18,"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":29,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":65}},"3":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"4":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"5":{"start":{"line":20,"column":16},"end":{"line":20,"column":77}},"6":{"start":{"line":24,"column":8},"end":{"line":27,"column":10}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":12}},{"start":{"line":19,"column":12},"end":{"line":19,"column":12}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":43}},{"start":{"line":19,"column":47},"end":{"line":19,"column":86}},{"start":{"line":19,"column":90},"end":{"line":19,"column":105}},{"start":{"line":19,"column":109},"end":{"line":19,"column":120}}]}},"code":["/**"," * @fileoverview Rule to prefer _.noop over an empty function"," */","'use strict';","","/**"," * @fileoverview Rule to prefer _.noop over an empty function"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/astUtil'),","            getFirstFunctionLine = _require.getFirstFunctionLine;","","        function reportIfEmptyFunction(node) {","            if (!getFirstFunctionLine(node) && node.parent.type !== 'MethodDefinition' && !node.generator && !node.async) {","                context.report(node, 'Prefer _.noop over an empty function');","            }","        }","","        return {","            FunctionExpression: reportIfEmptyFunction,","            ArrowFunctionExpression: reportIfEmptyFunction","        };","    }","};"],"l":{"13":1,"15":0,"18":1,"19":0,"20":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-over-quantifier.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-over-quantifier.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"usesShorthandInChain","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":44}}},"3":{"name":"isOnlyParamInvocationsWithOperator","line":45,"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":79}}},"4":{"name":"isCallToConditionMethod","line":54,"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":58}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":41},"end":{"line":55,"column":54}}},"6":{"name":"reportIfConnectiveOfParamInvocations","line":60,"loc":{"start":{"line":60,"column":8},"end":{"line":60,"column":60}}},"7":{"name":"reportIfDoubleFilterLiteral","line":70,"loc":{"start":{"line":70,"column":8},"end":{"line":70,"column":70}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":87,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":71}},"3":{"start":{"line":18,"column":8},"end":{"line":22,"column":52}},"4":{"start":{"line":24,"column":8},"end":{"line":25,"column":56}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":148}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":72}},"7":{"start":{"line":30,"column":8},"end":{"line":39,"column":10}},"8":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"9":{"start":{"line":42,"column":12},"end":{"line":42,"column":90}},"10":{"start":{"line":45,"column":8},"end":{"line":52,"column":9}},"11":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"12":{"start":{"line":47,"column":16},"end":{"line":47,"column":111}},"13":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"14":{"start":{"line":50,"column":16},"end":{"line":50,"column":191}},"15":{"start":{"line":54,"column":8},"end":{"line":58,"column":9}},"16":{"start":{"line":55,"column":12},"end":{"line":57,"column":15}},"17":{"start":{"line":56,"column":16},"end":{"line":56,"column":59}},"18":{"start":{"line":60,"column":8},"end":{"line":68,"column":9}},"19":{"start":{"line":61,"column":12},"end":{"line":61,"column":64}},"20":{"start":{"line":62,"column":12},"end":{"line":62,"column":52}},"21":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"22":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"23":{"start":{"line":65,"column":20},"end":{"line":65,"column":84}},"24":{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},"25":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"26":{"start":{"line":72,"column":16},"end":{"line":72,"column":69}},"27":{"start":{"line":76,"column":8},"end":{"line":85,"column":11}},"28":{"start":{"line":77,"column":12},"end":{"line":79,"column":41}},"29":{"start":{"line":81,"column":12},"end":{"line":84,"column":13}},"30":{"start":{"line":82,"column":16},"end":{"line":82,"column":63}},"31":{"start":{"line":83,"column":16},"end":{"line":83,"column":69}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":19},"end":{"line":42,"column":46}},{"start":{"line":42,"column":50},"end":{"line":42,"column":89}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":23},"end":{"line":47,"column":49}},{"start":{"line":47,"column":53},"end":{"line":47,"column":70}},{"start":{"line":47,"column":74},"end":{"line":47,"column":110}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":23},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":119}},{"start":{"line":50,"column":123},"end":{"line":50,"column":190}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":12}},{"start":{"line":63,"column":12},"end":{"line":63,"column":12}}]},"7":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":22}},{"start":{"line":63,"column":26},"end":{"line":63,"column":61}},{"start":{"line":63,"column":66},"end":{"line":63,"column":90}},{"start":{"line":63,"column":94},"end":{"line":63,"column":118}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":16}},{"start":{"line":64,"column":16},"end":{"line":64,"column":16}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":38}},{"start":{"line":71,"column":42},"end":{"line":71,"column":68}},{"start":{"line":71,"column":72},"end":{"line":71,"column":98}},{"start":{"line":71,"column":102},"end":{"line":71,"column":169}},{"start":{"line":71,"column":173},"end":{"line":71,"column":213}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":12}},{"start":{"line":81,"column":12},"end":{"line":81,"column":12}}]}},"code":["/**"," * @fileoverview Rule to check if a _.filter condition or multiple filters should be _.overEvery or _.overSome"," */","'use strict';","","/**"," * @fileoverview Rule to check if a _.filter condition or multiple filters should be _.overEvery or _.overSome"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName,","            isObjectOfMethodCall = _require2.isObjectOfMethodCall,","            getMethodName = _require2.getMethodName;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var conditionMethods = ['filter', 'reject', 'pickBy', 'omitBy', 'findIndex', 'findLastIndex', 'find', 'findLast', 'findKey', 'findLastKey'];","        var message = 'Prefer _.{{method}} instead of a {{connective}}';","","        var reportConstants = {","            '&&': {","                method: 'overEvery',","                connective: 'conjunction'","            },","            '||': {","                method: 'overSome',","                connective: 'disjunction'","            }","        };","","        function usesShorthandInChain(node) {","            return node.arguments.length === 0 || node.arguments[0].type === 'Identifier';","        }","","        function isOnlyParamInvocationsWithOperator(node, paramName, operator) {","            if (node.type === 'CallExpression') {","                return usesShorthandInChain(node) && node.arguments[0] && node.arguments[0].name === paramName;","            }","            if (node.type === 'LogicalExpression') {","                return node.operator === operator && isOnlyParamInvocationsWithOperator(node.left, paramName, operator) && isOnlyParamInvocationsWithOperator(node.right, paramName, operator);","            }","        }","","        function isCallToConditionMethod(method, version) {","            return conditionMethods.some(function (m) {","                return isAliasOfMethod(version, m, method);","            });","        }","","        function reportIfConnectiveOfParamInvocations(node) {","            var retVal = getValueReturnedInFirstStatement(node);","            var paramName = getFirstParamName(node);","            if (retVal && retVal.type === 'LogicalExpression' && (retVal.operator === '&&' || retVal.operator === '||')) {","                if (isOnlyParamInvocationsWithOperator(retVal, paramName, retVal.operator)) {","                    context.report(node, message, reportConstants[retVal.operator]);","                }","            }","        }","","        function reportIfDoubleFilterLiteral(callType, node, version) {","            if (callType === 'chained' && usesShorthandInChain(node) && isObjectOfMethodCall(node) && isCallToConditionMethod(getMethodName(node.parent.parent), version) && usesShorthandInChain(node.parent.parent)) {","                context.report(node, message, reportConstants['&&']);","            }","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version,","                callType = _ref.callType;","","            if (isCallToConditionMethod(method, version)) {","                reportIfConnectiveOfParamInvocations(iteratee);","                reportIfDoubleFilterLiteral(callType, node, version);","            }","        });","    }","};"],"l":{"13":1,"15":0,"18":0,"24":0,"27":0,"28":0,"30":0,"41":1,"42":0,"45":1,"46":0,"47":0,"49":0,"50":0,"54":1,"55":0,"56":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"70":1,"71":0,"72":0,"76":0,"77":0,"81":0,"82":0,"83":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-reject.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-reject.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":37}}},"2":{"name":"isNegativeExpressionFunction","line":37,"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":67}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":48},"end":{"line":43,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":53,"column":2}},"2":{"start":{"line":21,"column":8},"end":{"line":23,"column":71}},"3":{"start":{"line":25,"column":8},"end":{"line":29,"column":64}},"4":{"start":{"line":31,"column":8},"end":{"line":32,"column":56}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":49}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":93}},"7":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"8":{"start":{"line":38,"column":12},"end":{"line":38,"column":69}},"9":{"start":{"line":39,"column":12},"end":{"line":39,"column":57}},"10":{"start":{"line":40,"column":12},"end":{"line":40,"column":228}},"11":{"start":{"line":43,"column":8},"end":{"line":51,"column":11}},"12":{"start":{"line":44,"column":12},"end":{"line":46,"column":51}},"13":{"start":{"line":48,"column":12},"end":{"line":50,"column":13}},"14":{"start":{"line":49,"column":16},"end":{"line":49,"column":80}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":56}},{"start":{"line":35,"column":60},"end":{"line":35,"column":92}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":94}},{"start":{"line":40,"column":98},"end":{"line":40,"column":172}},{"start":{"line":40,"column":176},"end":{"line":40,"column":227}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":58}},{"start":{"line":48,"column":62},"end":{"line":48,"column":115}}]}},"code":["/**"," * @fileoverview Rule to check if a call to filter should be a call to reject"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to filter should be a call to reject"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'integer'","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            isCallToLodashMethod = _require.isCallToLodashMethod,","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/astUtil'),","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName,","            isNegationOfMemberOf = _require2.isNegationOfMemberOf,","            isNotEqEqToMemberOf = _require2.isNotEqEqToMemberOf;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var DEFAULT_MAX_PROPERTY_PATH_LENGTH = 3;","        var maxLength = parseInt(context.options[0], 10) || DEFAULT_MAX_PROPERTY_PATH_LENGTH;","","        function isNegativeExpressionFunction(func, lodashContext) {","            var returnValue = getValueReturnedInFirstStatement(func);","            var firstParamName = getFirstParamName(func);","            return isNegationOfMemberOf(returnValue, firstParamName, { maxLength: maxLength }) || isNotEqEqToMemberOf(returnValue, firstParamName, { maxLength: maxLength }) || isCallToLodashMethod(func, 'negate', lodashContext);","        }","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version,","                lodashContext = _ref.lodashContext;","","            if (isAliasOfMethod(version, 'filter', method) && isNegativeExpressionFunction(iteratee, lodashContext)) {","                context.report(node, 'Prefer _.reject over negative condition');","            }","        });","    }","};"],"l":{"13":1,"21":0,"25":0,"31":0,"34":0,"35":0,"37":1,"38":0,"39":0,"40":0,"43":0,"44":0,"48":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-some.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-some.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":37}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":56},"end":{"line":38,"column":88}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":40},"end":{"line":48,"column":56}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":56,"column":2}},"2":{"start":{"line":26,"column":8},"end":{"line":26,"column":83}},"3":{"start":{"line":28,"column":8},"end":{"line":30,"column":55}},"4":{"start":{"line":32,"column":8},"end":{"line":33,"column":72}},"5":{"start":{"line":35,"column":8},"end":{"line":36,"column":56}},"6":{"start":{"line":38,"column":8},"end":{"line":45,"column":11}},"7":{"start":{"line":39,"column":12},"end":{"line":40,"column":39}},"8":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"9":{"start":{"line":43,"column":16},"end":{"line":43,"column":86}},"10":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":48,"column":12},"end":{"line":52,"column":14}},"12":{"start":{"line":49,"column":16},"end":{"line":51,"column":17}},"13":{"start":{"line":50,"column":20},"end":{"line":50,"column":90}},"14":{"start":{"line":54,"column":8},"end":{"line":54,"column":24}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":28},"end":{"line":26,"column":46}},{"start":{"line":26,"column":50},"end":{"line":26,"column":82}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":12}},{"start":{"line":42,"column":12},"end":{"line":42,"column":12}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":61}},{"start":{"line":42,"column":65},"end":{"line":42,"column":123}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":16}},{"start":{"line":49,"column":16},"end":{"line":49,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if a findIndex comparison should be a call to _.some"," */","'use strict';","","/**"," * @fileoverview Rule to check if a findIndex comparison should be a call to _.some"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        schema: [{","            type: 'object',","            properties: {","                includeNative: {","                    type: 'boolean'","                }","            }","        }]","    },","","    create: function create(context) {","        var includeNative = context.options[0] && context.options[0].includeNative;","","        var _require = require('../util/astUtil'),","            getExpressionComparedToInt = _require.getExpressionComparedToInt,","            isFindIndexCall = _require.isFindIndexCall;","","        var _require2 = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require2.getLodashMethodVisitors;","","        var _require3 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require3.isAliasOfMethod;","","        var visitors = getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'findIndex', method) && node === getExpressionComparedToInt(node.parent, -1, true)) {","                context.report(node, 'Prefer _.some over findIndex comparison to -1');","            }","        });","","        if (includeNative) {","            visitors.BinaryExpression = function (node) {","                if (isFindIndexCall(getExpressionComparedToInt(node, -1, true))) {","                    context.report(node, 'Prefer _.some over findIndex comparison to -1');","                }","            };","        }","        return visitors;","    }","};"],"l":{"13":1,"26":0,"28":0,"32":0,"35":0,"38":0,"39":0,"42":0,"43":0,"47":0,"48":0,"49":0,"50":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-startswith.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-startswith.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"BinaryExpression","line":20,"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":62}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":27,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":17,"column":77}},"3":{"start":{"line":19,"column":8},"end":{"line":25,"column":10}},"4":{"start":{"line":21,"column":16},"end":{"line":23,"column":17}},"5":{"start":{"line":22,"column":20},"end":{"line":22,"column":100}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":16}},{"start":{"line":21,"column":16},"end":{"line":21,"column":16}}]}},"code":["/**"," * @fileoverview Rule to check if a call to _.indexOf === 0 should be a call to _.startsWith"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to _.indexOf === 0 should be a call to _.startsWith"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/astUtil'),","            isIndexOfCall = _require.isIndexOfCall,","            getExpressionComparedToInt = _require.getExpressionComparedToInt;","","        return {","            BinaryExpression: function BinaryExpression(node) {","                if (isIndexOfCall(getExpressionComparedToInt(node, 0))) {","                    context.report(node, 'Prefer _.startsWith instead of comparing indexOf() to 0');","                }","            }","        };","    }","};"],"l":{"13":1,"15":0,"19":0,"21":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-thru.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-thru.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"isSingleArgumentFunctionCall","line":19,"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":52}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":34},"end":{"line":24,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":31,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":57}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":54}},"4":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"5":{"start":{"line":20,"column":12},"end":{"line":20,"column":129}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":57}},"7":{"start":{"line":24,"column":8},"end":{"line":28,"column":10}},"8":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"9":{"start":{"line":26,"column":16},"end":{"line":26,"column":99}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":24}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":19},"end":{"line":20,"column":23}},{"start":{"line":20,"column":27},"end":{"line":20,"column":57}},{"start":{"line":20,"column":61},"end":{"line":20,"column":88}},{"start":{"line":20,"column":92},"end":{"line":20,"column":128}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":54}},{"start":{"line":25,"column":58},"end":{"line":25,"column":105}}]}},"code":["/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext;","","        var lodashContext = getLodashContext(context);","        function isSingleArgumentFunctionCall(node) {","            return node && node.type === 'CallExpression' && node.arguments.length === 1 && node.arguments[0].type !== 'Literal';","        }","","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isLodashChainStart(node) && isSingleArgumentFunctionCall(node.arguments[0])) {","                context.report(node, 'Prefer using thru instead of function call in chain start.');","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"15":0,"18":0,"19":1,"20":0,"23":0,"24":0,"25":0,"26":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-times.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-times.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":48},"end":{"line":22,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":31,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":16,"column":71}},"3":{"start":{"line":18,"column":8},"end":{"line":19,"column":56}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"5":{"start":{"line":22,"column":8},"end":{"line":29,"column":11}},"6":{"start":{"line":23,"column":12},"end":{"line":24,"column":39}},"7":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"8":{"start":{"line":27,"column":16},"end":{"line":27,"column":90}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":12}},{"start":{"line":26,"column":12},"end":{"line":26,"column":12}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":16},"end":{"line":26,"column":55}},{"start":{"line":26,"column":59},"end":{"line":26,"column":95}}]}},"code":["/**"," * @fileoverview Rule to check if a call to map should be a call to times"," */","'use strict';","","/**"," * @fileoverview Rule to check if a call to map should be a call to times"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/methodDataUtil'),","            isAliasOfMethod = _require2.isAliasOfMethod;","","        var get = require('lodash/get');","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (isAliasOfMethod(version, 'map', method) && get(iteratee, 'params.length') === 0) {","                context.report(node, 'Prefer _.times over _.map without using arguments');","            }","        });","    }","};"],"l":{"13":1,"15":0,"18":0,"21":0,"22":0,"23":0,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-wrapper-method.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prefer-wrapper-method.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":34},"end":{"line":21,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":28,"column":2}},"2":{"start":{"line":15,"column":8},"end":{"line":17,"column":57}},"3":{"start":{"line":19,"column":8},"end":{"line":19,"column":54}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":57}},"5":{"start":{"line":21,"column":8},"end":{"line":25,"column":10}},"6":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"7":{"start":{"line":23,"column":16},"end":{"line":23,"column":155}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":24}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":54}},{"start":{"line":22,"column":58},"end":{"line":22,"column":121}}]}},"code":["/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","'use strict';","","/**"," * @fileoverview Rule to check if there's a method in the chain start that can be in the chain"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            isLodashWrapperMethod = _require.isLodashWrapperMethod,","            getLodashContext = _require.getLodashContext;","","        var lodashContext = getLodashContext(context);","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isLodashChainStart(node) && isLodashWrapperMethod(node.arguments[0], lodashContext.version)) {","                context.report(node, 'Prefer {{name}} with wrapper method over inside the chain start.', { name: node.arguments[0].callee.property.name });","            }","        };","        return visitors;","    }","};"],"l":{"13":1,"15":0,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/preferred-alias.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/preferred-alias.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"create","line":16,"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":37}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":48},"end":{"line":26,"column":80}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":41,"column":2}},"2":{"start":{"line":17,"column":8},"end":{"line":18,"column":71}},"3":{"start":{"line":20,"column":8},"end":{"line":22,"column":50}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":40}},"5":{"start":{"line":26,"column":8},"end":{"line":39,"column":11}},"6":{"start":{"line":27,"column":12},"end":{"line":28,"column":39}},"7":{"start":{"line":30,"column":12},"end":{"line":38,"column":13}},"8":{"start":{"line":31,"column":16},"end":{"line":31,"column":62}},"9":{"start":{"line":32,"column":16},"end":{"line":37,"column":17}},"10":{"start":{"line":33,"column":20},"end":{"line":36,"column":23}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]}},"code":["/**"," * @fileoverview Rule to ensure consistency of aliases of lodash methods"," */","'use strict';","","/**"," * @fileoverview Rule to ensure consistency of aliases of lodash methods"," */","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {},","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashMethodVisitors = _require.getLodashMethodVisitors;","","        var _require2 = require('../util/methodDataUtil'),","            isMainAlias = _require2.isMainAlias,","            getMainAlias = _require2.getMainAlias;","","        var has = require('lodash/has');","","        return getLodashMethodVisitors(context, function (node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (!isMainAlias(version, method)) {","                var mainAlias = getMainAlias(version, method);","                if (mainAlias) {","                    context.report({","                        node: node,","                        message: 'Method \\'' + method + '\\' is an alias, for consistency prefer using \\'' + mainAlias + '\\''","                    });","                }","            }","        });","    }","};"],"l":{"13":1,"17":0,"20":0,"24":0,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prop-shorthand.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/prop-shorthand.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"create","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}}},"2":{"name":"isExplicitParamFunction","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":47}}},"3":{"name":"canUseShorthand","line":35,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":58}}},"4":{"name":"usesShorthand","line":39,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":47}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":51,"column":2}},"2":{"start":{"line":22,"column":8},"end":{"line":24,"column":65}},"3":{"start":{"line":26,"column":8},"end":{"line":29,"column":60}},"4":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"5":{"start":{"line":32,"column":12},"end":{"line":32,"column":124}},"6":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"7":{"start":{"line":36,"column":12},"end":{"line":36,"column":114}},"8":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"9":{"start":{"line":40,"column":12},"end":{"line":40,"column":116}},"10":{"start":{"line":43,"column":8},"end":{"line":49,"column":11}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":19},"end":{"line":36,"column":76}},{"start":{"line":36,"column":80},"end":{"line":36,"column":113}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":27}},{"start":{"line":40,"column":31},"end":{"line":40,"column":58}},{"start":{"line":40,"column":62},"end":{"line":40,"column":115}}]}},"code":["/**"," * @fileoverview Rule to check if the property shorthand can be used"," */","'use strict';","","/**"," * @fileoverview Rule to check if the property shorthand can be used"," */","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","","module.exports = {","    meta: {","        schema: [{","            enum: ['always', 'never']","        }]","    },","","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            isCallToLodashMethod = _require.isCallToLodashMethod,","            getShorthandVisitors = _require.getShorthandVisitors;","","        var _require2 = require('../util/astUtil'),","            isMemberExpOf = _require2.isMemberExpOf,","            getValueReturnedInFirstStatement = _require2.getValueReturnedInFirstStatement,","            getFirstParamName = _require2.getFirstParamName;","","        function isExplicitParamFunction(func) {","            return isMemberExpOf(getValueReturnedInFirstStatement(func), getFirstParamName(func), { allowComputed: false });","        }","","        function canUseShorthand(iteratee, lodashContext) {","            return isCallToLodashMethod(iteratee, 'property', lodashContext) || isExplicitParamFunction(iteratee);","        }","","        function usesShorthand(node, iteratee) {","            return iteratee && iteratee.type === 'Literal' && !node.arguments[node.arguments.indexOf(iteratee) + 1];","        }","","        return getShorthandVisitors(context, {","            canUseShorthand: canUseShorthand,","            usesShorthand: usesShorthand","        }, {","            always: 'Prefer property shorthand syntax',","            never: 'Do not use property shorthand syntax'","        });","    }","};"],"l":{"14":1,"22":0,"26":0,"31":1,"32":0,"35":1,"36":0,"39":1,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/unwrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/rules/unwrap.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"create","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":37}}},"2":{"name":"isCommit","line":24,"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}}},"3":{"name":"getEndOfChain","line":28,"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":49}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":34},"end":{"line":38,"column":50}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":53,"column":2}},"2":{"start":{"line":12,"column":8},"end":{"line":16,"column":53}},"3":{"start":{"line":18,"column":8},"end":{"line":19,"column":44}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":46}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":54}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":44}},"7":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":59}},"9":{"start":{"line":28,"column":8},"end":{"line":35,"column":9}},"10":{"start":{"line":29,"column":12},"end":{"line":29,"column":81}},"11":{"start":{"line":30,"column":12},"end":{"line":30,"column":42}},"12":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"13":{"start":{"line":32,"column":16},"end":{"line":32,"column":42}},"14":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":57}},"16":{"start":{"line":38,"column":8},"end":{"line":50,"column":10}},"17":{"start":{"line":39,"column":12},"end":{"line":49,"column":13}},"18":{"start":{"line":40,"column":16},"end":{"line":40,"column":53}},"19":{"start":{"line":41,"column":16},"end":{"line":43,"column":17}},"20":{"start":{"line":42,"column":20},"end":{"line":42,"column":78}},"21":{"start":{"line":44,"column":19},"end":{"line":49,"column":13}},"22":{"start":{"line":45,"column":16},"end":{"line":45,"column":53}},"23":{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},"24":{"start":{"line":47,"column":20},"end":{"line":47,"column":79}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":24}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":44},"end":{"line":29,"column":66}},{"start":{"line":29,"column":69},"end":{"line":29,"column":80}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":19},"end":{"line":31,"column":57}},{"start":{"line":31,"column":61},"end":{"line":31,"column":88}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":16}},{"start":{"line":41,"column":16},"end":{"line":41,"column":16}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":20},"end":{"line":41,"column":34}},{"start":{"line":41,"column":38},"end":{"line":41,"column":63}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":19},"end":{"line":44,"column":19}},{"start":{"line":44,"column":19},"end":{"line":44,"column":19}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":16}},{"start":{"line":46,"column":16},"end":{"line":46,"column":16}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":35}},{"start":{"line":46,"column":39},"end":{"line":46,"column":69}}]}},"code":["/**"," * @fileoverview Rule to ensure a lodash chain ends"," */","'use strict';","","// ------------------------------------------------------------------------------","// Rule Definition","// ------------------------------------------------------------------------------","","module.exports = {","    create: function create(context) {","        var _require = require('../util/lodashUtil'),","            getLodashContext = _require.getLodashContext,","            isChainable = _require.isChainable,","            isCallToMethod = _require.isCallToMethod,","            isChainBreaker = _require.isChainBreaker;","","        var _require2 = require('../util/astUtil'),","            getCaller = _require2.getCaller;","","        var negate = require('lodash/negate');","        var lodashContext = getLodashContext(context);","        var version = lodashContext.version;","        function isCommit(node) {","            return isCallToMethod(node, version, 'commit');","        }","","        function getEndOfChain(node, isExplicit) {","            var stillInChain = isExplicit ? negate(isChainBreaker) : isChainable;","            var curr = node.parent.parent;","            while (curr === getCaller(curr.parent.parent) && stillInChain(curr, version)) {","                curr = curr.parent.parent;","            }","            return curr;","        }","","        var visitors = lodashContext.getImportVisitors();","        visitors.CallExpression = function (node) {","            if (lodashContext.isImplicitChainStart(node)) {","                var end = getEndOfChain(node, false);","                if (!isCommit(end) && isChainable(end, version)) {","                    context.report(end, 'Missing unwrapping at end of chain');","                }","            } else if (lodashContext.isExplicitChainStart(node)) {","                var _end = getEndOfChain(node, true);","                if (!isCommit(_end) && !isChainBreaker(_end, version)) {","                    context.report(_end, 'Missing unwrapping at end of chain');","                }","            }","        };","        return visitors;","    }","};"],"l":{"10":1,"12":0,"18":0,"21":0,"22":0,"23":0,"24":1,"25":0,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/astUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/astUtil.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":0,"68":1,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":1,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":1,"93":0,"94":1,"95":1,"96":1,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0],"57":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":33}}},"2":{"name":"sliceIterator","line":3,"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":66}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":436},"end":{"line":3,"column":454}}},"4":{"name":"isMemberExpOf","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":41}}},"5":{"name":"hasOnlyOneStatement","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":35}}},"6":{"name":"isObjectOfMethodCall","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}}},"7":{"name":"isLiteral","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":25}}},"8":{"name":"isBinaryExpWithMemberOf","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":60}}},"9":{"name":"(anonymous_9)","line":148,"loc":{"start":{"line":148,"column":41},"end":{"line":148,"column":57}}},"10":{"name":"isNegationOfMemberOf","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":47}}},"11":{"name":"isIdentifierWithName","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":46}}},"12":{"name":"getValueReturnedInFirstStatement","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":48}}},"13":{"name":"isCallFromObject","line":212,"loc":{"start":{"line":212,"column":0},"end":{"line":212,"column":41}}},"14":{"name":"isComputed","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":26}}},"15":{"name":"isEquivalentMemberExp","line":231,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":37}}},"16":{"name":"(anonymous_16)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":59}}},"17":{"name":"isMinus","line":254,"loc":{"start":{"line":254,"column":14},"end":{"line":254,"column":37}}},"18":{"name":"getIsValue","line":271,"loc":{"start":{"line":271,"column":0},"end":{"line":271,"column":27}}},"19":{"name":"getExpressionComparedToInt","line":282,"loc":{"start":{"line":282,"column":0},"end":{"line":282,"column":60}}},"20":{"name":"isIndexOfCall","line":314,"loc":{"start":{"line":314,"column":20},"end":{"line":314,"column":49}}},"21":{"name":"isFindIndexCall","line":323,"loc":{"start":{"line":323,"column":22},"end":{"line":323,"column":53}}},"22":{"name":"collectParameterValues","line":332,"loc":{"start":{"line":332,"column":0},"end":{"line":332,"column":38}}},"23":{"name":"(anonymous_23)","line":337,"loc":{"start":{"line":337,"column":46},"end":{"line":337,"column":62}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":664}},"2":{"start":{"line":3,"column":35},"end":{"line":3,"column":428}},"3":{"start":{"line":3,"column":68},"end":{"line":3,"column":82}},"4":{"start":{"line":3,"column":83},"end":{"line":3,"column":97}},"5":{"start":{"line":3,"column":98},"end":{"line":3,"column":113}},"6":{"start":{"line":3,"column":114},"end":{"line":3,"column":133}},"7":{"start":{"line":3,"column":134},"end":{"line":3,"column":413}},"8":{"start":{"line":3,"column":140},"end":{"line":3,"column":283}},"9":{"start":{"line":3,"column":226},"end":{"line":3,"column":246}},"10":{"start":{"line":3,"column":247},"end":{"line":3,"column":281}},"11":{"start":{"line":3,"column":275},"end":{"line":3,"column":281}},"12":{"start":{"line":3,"column":300},"end":{"line":3,"column":310}},"13":{"start":{"line":3,"column":311},"end":{"line":3,"column":320}},"14":{"start":{"line":3,"column":333},"end":{"line":3,"column":411}},"15":{"start":{"line":3,"column":339},"end":{"line":3,"column":379}},"16":{"start":{"line":3,"column":364},"end":{"line":3,"column":379}},"17":{"start":{"line":3,"column":392},"end":{"line":3,"column":409}},"18":{"start":{"line":3,"column":400},"end":{"line":3,"column":409}},"19":{"start":{"line":3,"column":414},"end":{"line":3,"column":426}},"20":{"start":{"line":3,"column":429},"end":{"line":3,"column":659}},"21":{"start":{"line":3,"column":456},"end":{"line":3,"column":656}},"22":{"start":{"line":3,"column":482},"end":{"line":3,"column":493}},"23":{"start":{"line":3,"column":501},"end":{"line":3,"column":656}},"24":{"start":{"line":3,"column":539},"end":{"line":3,"column":568}},"25":{"start":{"line":3,"column":578},"end":{"line":3,"column":654}},"26":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"27":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"28":{"start":{"line":19,"column":0},"end":{"line":19,"column":63}},"29":{"start":{"line":26,"column":0},"end":{"line":26,"column":95}},"30":{"start":{"line":28,"column":0},"end":{"line":28,"column":137}},"31":{"start":{"line":34,"column":0},"end":{"line":34,"column":151}},"32":{"start":{"line":41,"column":0},"end":{"line":41,"column":172}},"33":{"start":{"line":48,"column":0},"end":{"line":48,"column":114}},"34":{"start":{"line":59,"column":0},"end":{"line":80,"column":1}},"35":{"start":{"line":60,"column":4},"end":{"line":63,"column":43}},"36":{"start":{"line":65,"column":4},"end":{"line":79,"column":5}},"37":{"start":{"line":66,"column":8},"end":{"line":66,"column":24}},"38":{"start":{"line":67,"column":8},"end":{"line":67,"column":30}},"39":{"start":{"line":68,"column":8},"end":{"line":78,"column":9}},"40":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"41":{"start":{"line":70,"column":16},"end":{"line":72,"column":17}},"42":{"start":{"line":71,"column":20},"end":{"line":71,"column":32}},"43":{"start":{"line":73,"column":16},"end":{"line":73,"column":35}},"44":{"start":{"line":74,"column":16},"end":{"line":74,"column":24}},"45":{"start":{"line":76,"column":16},"end":{"line":76,"column":29}},"46":{"start":{"line":87,"column":0},"end":{"line":87,"column":58}},"47":{"start":{"line":94,"column":0},"end":{"line":94,"column":69}},"48":{"start":{"line":101,"column":0},"end":{"line":108,"column":1}},"49":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"50":{"start":{"line":103,"column":8},"end":{"line":103,"column":53}},"51":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"52":{"start":{"line":106,"column":8},"end":{"line":106,"column":41}},"53":{"start":{"line":115,"column":0},"end":{"line":117,"column":1}},"54":{"start":{"line":116,"column":4},"end":{"line":116,"column":107}},"55":{"start":{"line":124,"column":0},"end":{"line":126,"column":1}},"56":{"start":{"line":125,"column":4},"end":{"line":125,"column":35}},"57":{"start":{"line":138,"column":0},"end":{"line":156,"column":1}},"58":{"start":{"line":139,"column":4},"end":{"line":142,"column":42}},"59":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"60":{"start":{"line":145,"column":8},"end":{"line":145,"column":21}},"61":{"start":{"line":148,"column":4},"end":{"line":153,"column":25}},"62":{"start":{"line":149,"column":8},"end":{"line":149,"column":103}},"63":{"start":{"line":155,"column":4},"end":{"line":155,"column":93}},"64":{"start":{"line":163,"column":0},"end":{"line":163,"column":81}},"65":{"start":{"line":172,"column":0},"end":{"line":177,"column":1}},"66":{"start":{"line":173,"column":4},"end":{"line":174,"column":36}},"67":{"start":{"line":176,"column":4},"end":{"line":176,"column":128}},"68":{"start":{"line":185,"column":0},"end":{"line":187,"column":1}},"69":{"start":{"line":186,"column":4},"end":{"line":186,"column":83}},"70":{"start":{"line":194,"column":0},"end":{"line":204,"column":1}},"71":{"start":{"line":195,"column":4},"end":{"line":195,"column":47}},"72":{"start":{"line":196,"column":4},"end":{"line":203,"column":5}},"73":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"74":{"start":{"line":198,"column":12},"end":{"line":198,"column":81}},"75":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"76":{"start":{"line":201,"column":12},"end":{"line":201,"column":29}},"77":{"start":{"line":212,"column":0},"end":{"line":214,"column":1}},"78":{"start":{"line":213,"column":4},"end":{"line":213,"column":110}},"79":{"start":{"line":221,"column":0},"end":{"line":223,"column":1}},"80":{"start":{"line":222,"column":4},"end":{"line":222,"column":71}},"81":{"start":{"line":231,"column":0},"end":{"line":245,"column":1}},"82":{"start":{"line":232,"column":4},"end":{"line":244,"column":7}},"83":{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},"84":{"start":{"line":234,"column":12},"end":{"line":234,"column":24}},"85":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"86":{"start":{"line":237,"column":12},"end":{"line":237,"column":25}},"87":{"start":{"line":239,"column":8},"end":{"line":243,"column":9}},"88":{"start":{"line":240,"column":12},"end":{"line":240,"column":52}},"89":{"start":{"line":241,"column":12},"end":{"line":241,"column":55}},"90":{"start":{"line":242,"column":12},"end":{"line":242,"column":44}},"91":{"start":{"line":252,"column":0},"end":{"line":252,"column":72}},"92":{"start":{"line":254,"column":0},"end":{"line":256,"column":2}},"93":{"start":{"line":255,"column":4},"end":{"line":255,"column":68}},"94":{"start":{"line":263,"column":0},"end":{"line":268,"column":2}},"95":{"start":{"line":269,"column":0},"end":{"line":269,"column":53}},"96":{"start":{"line":271,"column":0},"end":{"line":273,"column":1}},"97":{"start":{"line":272,"column":4},"end":{"line":272,"column":118}},"98":{"start":{"line":282,"column":0},"end":{"line":307,"column":1}},"99":{"start":{"line":283,"column":4},"end":{"line":283,"column":36}},"100":{"start":{"line":284,"column":4},"end":{"line":291,"column":5}},"101":{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},"102":{"start":{"line":286,"column":12},"end":{"line":286,"column":29}},"103":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"104":{"start":{"line":289,"column":12},"end":{"line":289,"column":30}},"105":{"start":{"line":292,"column":4},"end":{"line":306,"column":5}},"106":{"start":{"line":293,"column":8},"end":{"line":295,"column":9}},"107":{"start":{"line":294,"column":12},"end":{"line":294,"column":29}},"108":{"start":{"line":296,"column":8},"end":{"line":298,"column":9}},"109":{"start":{"line":297,"column":12},"end":{"line":297,"column":30}},"110":{"start":{"line":299,"column":8},"end":{"line":299,"column":43}},"111":{"start":{"line":300,"column":8},"end":{"line":302,"column":9}},"112":{"start":{"line":301,"column":12},"end":{"line":301,"column":29}},"113":{"start":{"line":303,"column":8},"end":{"line":305,"column":9}},"114":{"start":{"line":304,"column":12},"end":{"line":304,"column":30}},"115":{"start":{"line":314,"column":0},"end":{"line":316,"column":2}},"116":{"start":{"line":315,"column":4},"end":{"line":315,"column":67}},"117":{"start":{"line":323,"column":0},"end":{"line":325,"column":2}},"118":{"start":{"line":324,"column":4},"end":{"line":324,"column":69}},"119":{"start":{"line":332,"column":0},"end":{"line":345,"column":1}},"120":{"start":{"line":333,"column":4},"end":{"line":344,"column":5}},"121":{"start":{"line":335,"column":12},"end":{"line":335,"column":31}},"122":{"start":{"line":337,"column":12},"end":{"line":339,"column":15}},"123":{"start":{"line":338,"column":16},"end":{"line":338,"column":58}},"124":{"start":{"line":341,"column":12},"end":{"line":341,"column":68}},"125":{"start":{"line":343,"column":12},"end":{"line":343,"column":22}},"126":{"start":{"line":347,"column":0},"end":{"line":373,"column":2}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":247},"end":{"line":3,"column":247}},{"start":{"line":3,"column":247},"end":{"line":3,"column":247}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":251},"end":{"line":3,"column":252}},{"start":{"line":3,"column":256},"end":{"line":3,"column":273}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":339},"end":{"line":3,"column":339}},{"start":{"line":3,"column":339},"end":{"line":3,"column":339}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":343},"end":{"line":3,"column":346}},{"start":{"line":3,"column":350},"end":{"line":3,"column":362}}]},"5":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":392},"end":{"line":3,"column":392}},{"start":{"line":3,"column":392},"end":{"line":3,"column":392}}]},"6":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":456},"end":{"line":3,"column":456}},{"start":{"line":3,"column":456},"end":{"line":3,"column":456}}]},"7":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":501},"end":{"line":3,"column":501}},{"start":{"line":3,"column":501},"end":{"line":3,"column":501}}]},"8":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":68},"end":{"line":60,"column":80}},{"start":{"line":60,"column":83},"end":{"line":60,"column":85}}]},"9":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":15},"end":{"line":60,"column":35}},{"start":{"line":60,"column":39},"end":{"line":60,"column":65}}]},"10":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":51},"end":{"line":62,"column":67}},{"start":{"line":62,"column":70},"end":{"line":62,"column":84}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"12":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":15},"end":{"line":68,"column":19}},{"start":{"line":68,"column":23},"end":{"line":68,"column":28}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"14":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":29}},{"start":{"line":69,"column":33},"end":{"line":69,"column":51}}]},"15":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":16}},{"start":{"line":70,"column":16},"end":{"line":70,"column":16}}]},"16":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":20},"end":{"line":70,"column":52}},{"start":{"line":70,"column":56},"end":{"line":70,"column":87}}]},"17":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"18":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"19":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":11},"end":{"line":116,"column":48}},{"start":{"line":116,"column":52},"end":{"line":116,"column":106}}]},"20":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":69},"end":{"line":139,"column":81}},{"start":{"line":139,"column":84},"end":{"line":139,"column":86}}]},"21":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":16},"end":{"line":139,"column":36}},{"start":{"line":139,"column":40},"end":{"line":139,"column":66}}]},"22":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"23":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":11},"end":{"line":155,"column":26}},{"start":{"line":155,"column":31},"end":{"line":155,"column":44}},{"start":{"line":155,"column":48},"end":{"line":155,"column":67}},{"start":{"line":155,"column":71},"end":{"line":155,"column":91}}]},"24":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":69},"end":{"line":173,"column":81}},{"start":{"line":173,"column":84},"end":{"line":173,"column":86}}]},"25":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":36}},{"start":{"line":173,"column":40},"end":{"line":173,"column":66}}]},"26":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":11},"end":{"line":176,"column":36}},{"start":{"line":176,"column":40},"end":{"line":176,"column":127}}]},"27":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":11},"end":{"line":186,"column":14}},{"start":{"line":186,"column":18},"end":{"line":186,"column":27}},{"start":{"line":186,"column":31},"end":{"line":186,"column":56}},{"start":{"line":186,"column":60},"end":{"line":186,"column":82}}]},"28":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"29":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"30":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":50},"end":{"line":198,"column":68}},{"start":{"line":198,"column":71},"end":{"line":198,"column":80}}]},"31":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"32":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":11},"end":{"line":213,"column":15}},{"start":{"line":213,"column":19},"end":{"line":213,"column":26}},{"start":{"line":213,"column":30},"end":{"line":213,"column":60}},{"start":{"line":213,"column":64},"end":{"line":213,"column":109}}]},"33":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":11},"end":{"line":222,"column":34}},{"start":{"line":222,"column":38},"end":{"line":222,"column":70}}]},"34":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":233,"column":8}},{"start":{"line":233,"column":8},"end":{"line":233,"column":8}}]},"35":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"36":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":12},"end":{"line":236,"column":28}},{"start":{"line":236,"column":32},"end":{"line":236,"column":49}}]},"37":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"38":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":28},"end":{"line":240,"column":37}},{"start":{"line":240,"column":41},"end":{"line":240,"column":51}}]},"39":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":29},"end":{"line":241,"column":39}},{"start":{"line":241,"column":43},"end":{"line":241,"column":54}}]},"40":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":11},"end":{"line":255,"column":42}},{"start":{"line":255,"column":46},"end":{"line":255,"column":67}}]},"41":{"line":272,"type":"cond-expr","locations":[{"start":{"line":272,"column":23},"end":{"line":272,"column":87}},{"start":{"line":272,"column":90},"end":{"line":272,"column":117}}]},"42":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"43":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":8}},{"start":{"line":285,"column":8},"end":{"line":285,"column":8}}]},"44":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8}},{"start":{"line":288,"column":8},"end":{"line":288,"column":8}}]},"45":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"46":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":8}},{"start":{"line":293,"column":8},"end":{"line":293,"column":8}}]},"47":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":12},"end":{"line":293,"column":33}},{"start":{"line":293,"column":37},"end":{"line":293,"column":56}}]},"48":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":8}},{"start":{"line":296,"column":8},"end":{"line":296,"column":8}}]},"49":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":33}},{"start":{"line":296,"column":37},"end":{"line":296,"column":55}}]},"50":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":300,"column":8}},{"start":{"line":300,"column":8},"end":{"line":300,"column":8}}]},"51":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":13},"end":{"line":300,"column":35}},{"start":{"line":300,"column":39},"end":{"line":300,"column":60}},{"start":{"line":300,"column":65},"end":{"line":300,"column":83}}]},"52":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":8},"end":{"line":303,"column":8}},{"start":{"line":303,"column":8},"end":{"line":303,"column":8}}]},"53":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":13},"end":{"line":303,"column":35}},{"start":{"line":303,"column":39},"end":{"line":303,"column":60}},{"start":{"line":303,"column":65},"end":{"line":303,"column":82}}]},"54":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":11},"end":{"line":315,"column":29}},{"start":{"line":315,"column":33},"end":{"line":315,"column":66}}]},"55":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":11},"end":{"line":324,"column":29}},{"start":{"line":324,"column":33},"end":{"line":324,"column":68}}]},"56":{"line":333,"type":"switch","locations":[{"start":{"line":334,"column":8},"end":{"line":335,"column":31}},{"start":{"line":336,"column":8},"end":{"line":339,"column":15}},{"start":{"line":340,"column":8},"end":{"line":341,"column":68}},{"start":{"line":342,"column":8},"end":{"line":343,"column":22}}]},"57":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":16}},{"start":{"line":333,"column":20},"end":{"line":333,"column":29}}]}},"code":["'use strict';","","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();","","var _ = require('lodash');","","/**"," * Gets the object that called the method in a CallExpression"," * @param {Object} node"," * @returns {Object|undefined}"," */","var getCaller = _.property(['callee', 'object']);","","/**"," * Gets the name of a method in a CallExpression"," * @param {Object} node"," * @returns {string|undefined}"," */","var getMethodName = _.property(['callee', 'property', 'name']);","","/**"," * Returns whether the node is a method call"," * @param {Object} node"," * @returns {boolean}"," */","var isMethodCall = _.matches({ type: 'CallExpression', callee: { type: 'MemberExpression' } });","","var isFunctionExpression = _.overSome(_.matchesProperty('type', 'FunctionExpression'), _.matchesProperty('type', 'FunctionDeclaration'));","/**"," * Returns whether the node is a function declaration that has a block"," * @param {Object} node"," * @returns {boolean}"," */","var isFunctionDefinitionWithBlock = _.overSome(isFunctionExpression, _.matches({ type: 'ArrowFunctionExpression', body: { type: 'BlockStatement' } }));","","/**"," * If the node specified is a function, returns the node corresponding with the first statement/expression in that function"," * @param {Object} node"," * @returns {node|undefined}"," */","var getFirstFunctionLine = _.cond([[isFunctionDefinitionWithBlock, _.property(['body', 'body', 0])], [_.matches({ type: 'ArrowFunctionExpression' }), _.property('body')]]);","","/**"," *"," * @param {Object} node"," * @returns {boolean|undefined}"," */","var isPropAccess = _.overSome(_.matches({ computed: false }), _.matchesProperty(['property', 'type'], 'Literal'));","","/**"," * Returns whether the node is a member expression starting with the same object, up to the specified length"," * @param {Object} node"," * @param {string} objectName"," * @param {Object} [options]"," * @param {number} [options.maxLength]"," * @param {boolean} [options.allowComputed]"," * @returns {boolean|undefined}"," */","function isMemberExpOf(node, objectName) {","    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},","        _ref$maxLength = _ref.maxLength,","        maxLength = _ref$maxLength === undefined ? Number.MAX_VALUE : _ref$maxLength,","        allowComputed = _ref.allowComputed;","","    if (objectName) {","        var curr = node;","        var depth = maxLength;","        while (curr && depth) {","            if (allowComputed || isPropAccess(curr)) {","                if (curr.type === 'MemberExpression' && curr.object.name === objectName) {","                    return true;","                }","                curr = curr.object;","                depth--;","            } else {","                return false;","            }","        }","    }","}","","/**"," * Returns the name of the first parameter of a function, if it exists"," * @param {Object} func"," * @returns {string|undefined}"," */","var getFirstParamName = _.property(['params', 0, 'name']);","","/**"," * Returns whether or not the expression is a return statement"," * @param {Object} exp"," * @returns {boolean|undefined}"," */","var isReturnStatement = _.matchesProperty('type', 'ReturnStatement');","","/**"," * Returns whether the node specified has only one statement"," * @param {Object} func"," * @returns {boolean}"," */","function hasOnlyOneStatement(func) {","    if (isFunctionDefinitionWithBlock(func)) {","        return _.get(func, 'body.body.length') === 1;","    }","    if (func.type === 'ArrowFunctionExpression') {","        return !_.get(func, 'body.body');","    }","}","","/**"," * Returns whether the node is an object of a method call"," * @param {Object} node"," * @returns {boolean}"," */","function isObjectOfMethodCall(node) {","    return _.get(node, 'parent.object') === node && _.get(node, 'parent.parent.type') === 'CallExpression';","}","","/**"," * Returns whether the node is a literal"," * @param {Object} node"," * @returns {boolean}"," */","function isLiteral(node) {","    return node.type === 'Literal';","}","","/**"," * Returns whether the expression specified is a binary expression with the specified operator and one of its sides is a member expression of the specified object name"," * @param {string} operator"," * @param {Object} exp"," * @param {string} objectName"," * @param {number} maxLength"," * @param {boolean} allowComputed"," * @param {boolean} onlyLiterals"," * @returns {boolean|undefined}"," */","function isBinaryExpWithMemberOf(operator, exp, objectName) {","    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},","        maxLength = _ref2.maxLength,","        allowComputed = _ref2.allowComputed,","        onlyLiterals = _ref2.onlyLiterals;","","    if (!_.isMatch(exp, { type: 'BinaryExpression', operator: operator })) {","        return false;","    }","","    var _map = [exp.left, exp.right].map(function (side) {","        return isMemberExpOf(side, objectName, { maxLength: maxLength, allowComputed: allowComputed });","    }),","        _map2 = _slicedToArray(_map, 2),","        left = _map2[0],","        right = _map2[1];","","    return left === !right && (!onlyLiterals || isLiteral(exp.left) || isLiteral(exp.right));","}","","/**"," * Returns whether the specified expression is a negation."," * @param {Object} exp"," * @returns {boolean|undefined}"," */","var isNegationExpression = _.matches({ type: 'UnaryExpression', operator: '!' });","","/**"," * Returns whether the expression is a negation of a member of objectName, in the specified depth."," * @param {Object} exp"," * @param {string} objectName"," * @param {number} maxLength"," * @returns {boolean|undefined}"," */","function isNegationOfMemberOf(exp, objectName) {","    var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},","        maxLength = _ref3.maxLength;","","    return isNegationExpression(exp) && isMemberExpOf(exp.argument, objectName, { maxLength: maxLength, allowComputed: false });","}","","/**"," *"," * @param {Object} exp"," * @param {string} paramName"," * @returns {boolean|undefined}"," */","function isIdentifierWithName(exp, paramName) {","    return exp && paramName && exp.type === 'Identifier' && exp.name === paramName;","}","","/**"," * Returns the node of the value returned in the first line, if any"," * @param {Object} func"," * @returns {Object|undefined}"," */","function getValueReturnedInFirstStatement(func) {","    var firstLine = getFirstFunctionLine(func);","    if (func) {","        if (isFunctionDefinitionWithBlock(func)) {","            return isReturnStatement(firstLine) ? firstLine.argument : undefined;","        }","        if (func.type === 'ArrowFunctionExpression') {","            return firstLine;","        }","    }","}","","/**"," * Returns whether the node is a call from the specified object name"," * @param {Object} node"," * @param {string} objName"," * @returns {boolean|undefined}"," */","function isCallFromObject(node, objName) {","    return node && objName && node.type === 'CallExpression' && _.get(node, 'callee.object.name') === objName;","}","","/**"," * Returns whether the node is actually computed (x['ab'] does not count, x['a' + 'b'] does"," * @param {Object} node"," * @returns {boolean|undefined}"," */","function isComputed(node) {","    return _.get(node, 'computed') && node.property.type !== 'Literal';","}","","/**"," * Returns whether the two expressions refer to the same object (e.g. a['b'].c and a.b.c)"," * @param {Object} a"," * @param {Object} b"," * @returns {boolean}"," */","function isEquivalentMemberExp(a, b) {","    return _.isEqualWith(a, b, function (left, right, key) {","        if (_.includes(['loc', 'range', 'computed', 'start', 'end', 'parent'], key)) {","            return true;","        }","        if (isComputed(left) || isComputed(right)) {","            return false;","        }","        if (key === 'property') {","            var leftValue = left.name || left.value;","            var rightValue = right.name || right.value;","            return leftValue === rightValue;","        }","    });","}","","/**"," * Returns whether the expression is a strict equality comparison, ==="," * @param {Object} node"," * @returns {boolean}"," */","var isEqEqEq = _.matches({ type: 'BinaryExpression', operator: '===' });","","var isMinus = function isMinus(node) {","    return node.type === 'UnaryExpression' && node.operator === '-';","};","","/**"," * Enum for type of comparison to int literal"," * @readonly"," * @enum {number}"," */","var comparisonType = {","    exact: 0,","    over: 1,","    under: 2,","    any: 3","};","var comparisonOperators = ['==', '!=', '===', '!=='];","","function getIsValue(value) {","    return value < 0 ? _.overEvery(isMinus, _.matches({ argument: { value: -value } })) : _.matches({ value: value });","}","","/**"," * Returns the expression compared to the value in a binary expression, or undefined if there isn't one"," * @param {Object} node"," * @param {number} value"," * @param {boolean} [checkOver=false]"," * @returns {Object|undefined}"," */","function getExpressionComparedToInt(node, value, checkOver) {","    var isValue = getIsValue(value);","    if (_.includes(comparisonOperators, node.operator)) {","        if (isValue(node.right)) {","            return node.left;","        }","        if (isValue(node.left)) {","            return node.right;","        }","    }","    if (checkOver) {","        if (node.operator === '>' && isValue(node.right)) {","            return node.left;","        }","        if (node.operator === '<' && isValue(node.left)) {","            return node.right;","        }","        var isNext = getIsValue(value + 1);","        if ((node.operator === '>=' || node.operator === '<') && isNext(node.right)) {","            return node.left;","        }","        if ((node.operator === '<=' || node.operator === '>') && isNext(node.left)) {","            return node.right;","        }","    }","}","","/**"," * Returns whether the node is a call to indexOf"," * @param {Object} node"," * @returns {boolean}"," */","var isIndexOfCall = function isIndexOfCall(node) {","    return isMethodCall(node) && getMethodName(node) === 'indexOf';","};","","/**"," * Returns whether the node is a call to findIndex"," * @param {Object} node"," * @returns {boolean}"," */","var isFindIndexCall = function isFindIndexCall(node) {","    return isMethodCall(node) && getMethodName(node) === 'findIndex';","};","","/**"," * Returns an array of identifier names returned in a parameter or variable definition"," * @param node an AST node which is a parameter or variable declaration"," * @returns {string[]} List of names defined in the parameter"," */","function collectParameterValues(node) {","    switch (node && node.type) {","        case 'Identifier':","            return [node.name];","        case 'ObjectPattern':","            return _.flatMap(node.properties, function (prop) {","                return collectParameterValues(prop.value);","            });","        case 'ArrayPattern':","            return _.flatMap(node.elements, collectParameterValues);","        default:","            return [];","    }","}","","module.exports = {","    getCaller: getCaller,","    getMethodName: getMethodName,","    isMethodCall: isMethodCall,","    getFirstFunctionLine: getFirstFunctionLine,","    isMemberExpOf: isMemberExpOf,","    getFirstParamName: getFirstParamName,","    hasOnlyOneStatement: hasOnlyOneStatement,","    isObjectOfMethodCall: isObjectOfMethodCall,","    isEqEqEqToMemberOf: isBinaryExpWithMemberOf.bind(null, '==='),","    isNotEqEqToMemberOf: isBinaryExpWithMemberOf.bind(null, '!=='),","    isNegationOfMemberOf: isNegationOfMemberOf,","    isIdentifierWithName: isIdentifierWithName,","    isNegationExpression: isNegationExpression,","    getValueReturnedInFirstStatement: getValueReturnedInFirstStatement,","    isCallFromObject: isCallFromObject,","    isComputed: isComputed,","    isEquivalentMemberExp: isEquivalentMemberExp,","    isEqEqEq: isEqEqEq,","    comparisonType: comparisonType,","    getExpressionComparedToInt: getExpressionComparedToInt,","    isIndexOfCall: isIndexOfCall,","    isFindIndexCall: isFindIndexCall,","    isFunctionExpression: isFunctionExpression,","    isFunctionDefinitionWithBlock: isFunctionDefinitionWithBlock,","    collectParameterValues: collectParameterValues","};"],"l":{"3":1,"5":1,"12":1,"19":1,"26":1,"28":1,"34":1,"41":1,"48":1,"59":1,"60":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"76":0,"87":1,"94":1,"101":1,"102":0,"103":0,"105":0,"106":0,"115":1,"116":0,"124":1,"125":0,"138":1,"139":0,"144":0,"145":0,"148":0,"149":0,"155":0,"163":1,"172":1,"173":0,"176":0,"185":1,"186":0,"194":1,"195":0,"196":0,"197":0,"198":0,"200":0,"201":0,"212":1,"213":0,"221":1,"222":0,"231":1,"232":0,"233":0,"234":0,"236":0,"237":0,"239":0,"240":0,"241":0,"242":0,"252":1,"254":1,"255":0,"263":1,"269":1,"271":1,"272":0,"282":1,"283":0,"284":0,"285":0,"286":0,"288":0,"289":0,"292":0,"293":0,"294":0,"296":0,"297":0,"299":0,"300":0,"301":0,"303":0,"304":0,"314":1,"315":0,"323":1,"324":0,"332":1,"333":0,"335":0,"337":0,"338":0,"341":0,"343":0,"347":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/LodashContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/LodashContext.js","s":{"1":1,"2":1,"3":1,"4":9,"5":9,"6":9,"7":9,"8":7,"9":9,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[9,9],"2":[7,2],"3":[1,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0,0],"19":[0,0,0],"20":[0,0],"21":[0,0,0,0],"22":[0,0],"23":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":19},"end":{"line":3,"column":31}}},"2":{"name":"defineProperties","line":3,"loc":{"start":{"line":3,"column":33},"end":{"line":3,"column":74}}},"3":{"name":"(anonymous_3)","line":3,"loc":{"start":{"line":3,"column":357},"end":{"line":3,"column":405}}},"4":{"name":"_classCallCheck","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":29}}},"6":{"name":"_class","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}}},"7":{"name":"getImportVisitors","line":45,"loc":{"start":{"line":45,"column":15},"end":{"line":45,"column":44}}},"8":{"name":"ImportDeclaration","line":48,"loc":{"start":{"line":48,"column":35},"end":{"line":48,"column":68}}},"9":{"name":"(anonymous_9)","line":53,"loc":{"start":{"line":53,"column":43},"end":{"line":53,"column":59}}},"10":{"name":"VariableDeclarator","line":71,"loc":{"start":{"line":71,"column":36},"end":{"line":71,"column":71}}},"11":{"name":"(anonymous_11)","line":80,"loc":{"start":{"line":80,"column":50},"end":{"line":80,"column":66}}},"12":{"name":"isImportedLodash","line":102,"loc":{"start":{"line":102,"column":15},"end":{"line":102,"column":47}}},"13":{"name":"getImportedLodashMethod","line":116,"loc":{"start":{"line":116,"column":15},"end":{"line":116,"column":54}}},"14":{"name":"isLodashCall","line":130,"loc":{"start":{"line":130,"column":15},"end":{"line":130,"column":43}}},"15":{"name":"isImplicitChainStart","line":142,"loc":{"start":{"line":142,"column":15},"end":{"line":142,"column":51}}},"16":{"name":"isExplicitChainStart","line":154,"loc":{"start":{"line":154,"column":15},"end":{"line":154,"column":51}}},"17":{"name":"isLodashChainStart","line":166,"loc":{"start":{"line":166,"column":15},"end":{"line":166,"column":49}}},"18":{"name":"get","line":177,"loc":{"start":{"line":177,"column":13},"end":{"line":177,"column":28}}},"19":{"name":"get","line":196,"loc":{"start":{"line":196,"column":13},"end":{"line":196,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":564}},"2":{"start":{"line":3,"column":33},"end":{"line":3,"column":349}},"3":{"start":{"line":3,"column":76},"end":{"line":3,"column":347}},"4":{"start":{"line":3,"column":117},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":144},"end":{"line":3,"column":199}},"6":{"start":{"line":3,"column":200},"end":{"line":3,"column":231}},"7":{"start":{"line":3,"column":232},"end":{"line":3,"column":286}},"8":{"start":{"line":3,"column":259},"end":{"line":3,"column":286}},"9":{"start":{"line":3,"column":287},"end":{"line":3,"column":345}},"10":{"start":{"line":3,"column":350},"end":{"line":3,"column":559}},"11":{"start":{"line":3,"column":407},"end":{"line":3,"column":475}},"12":{"start":{"line":3,"column":423},"end":{"line":3,"column":475}},"13":{"start":{"line":3,"column":476},"end":{"line":3,"column":536}},"14":{"start":{"line":3,"column":493},"end":{"line":3,"column":536}},"15":{"start":{"line":3,"column":537},"end":{"line":3,"column":556}},"16":{"start":{"line":5,"column":0},"end":{"line":5,"column":153}},"17":{"start":{"line":5,"column":50},"end":{"line":5,"column":151}},"18":{"start":{"line":5,"column":92},"end":{"line":5,"column":149}},"19":{"start":{"line":7,"column":0},"end":{"line":8,"column":39}},"20":{"start":{"line":10,"column":0},"end":{"line":14,"column":44}},"21":{"start":{"line":16,"column":0},"end":{"line":19,"column":64}},"22":{"start":{"line":24,"column":0},"end":{"line":210,"column":4}},"23":{"start":{"line":29,"column":4},"end":{"line":35,"column":5}},"24":{"start":{"line":30,"column":8},"end":{"line":30,"column":38}},"25":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"26":{"start":{"line":33,"column":8},"end":{"line":33,"column":43}},"27":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"28":{"start":{"line":43,"column":4},"end":{"line":207,"column":8}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":28}},"30":{"start":{"line":47,"column":12},"end":{"line":91,"column":14}},"31":{"start":{"line":49,"column":20},"end":{"line":50,"column":53}},"32":{"start":{"line":52,"column":20},"end":{"line":69,"column":21}},"33":{"start":{"line":53,"column":24},"end":{"line":63,"column":27}},"34":{"start":{"line":54,"column":28},"end":{"line":62,"column":29}},"35":{"start":{"line":57,"column":36},"end":{"line":57,"column":73}},"36":{"start":{"line":58,"column":36},"end":{"line":58,"column":42}},"37":{"start":{"line":60,"column":36},"end":{"line":60,"column":87}},"38":{"start":{"line":61,"column":36},"end":{"line":61,"column":42}},"39":{"start":{"line":65,"column":24},"end":{"line":65,"column":75}},"40":{"start":{"line":66,"column":24},"end":{"line":68,"column":25}},"41":{"start":{"line":67,"column":28},"end":{"line":67,"column":76}},"42":{"start":{"line":72,"column":20},"end":{"line":73,"column":38}},"43":{"start":{"line":75,"column":20},"end":{"line":75,"column":63}},"44":{"start":{"line":76,"column":20},"end":{"line":89,"column":21}},"45":{"start":{"line":77,"column":24},"end":{"line":83,"column":25}},"46":{"start":{"line":78,"column":28},"end":{"line":78,"column":57}},"47":{"start":{"line":79,"column":31},"end":{"line":83,"column":25}},"48":{"start":{"line":80,"column":28},"end":{"line":82,"column":31}},"49":{"start":{"line":81,"column":32},"end":{"line":81,"column":78}},"50":{"start":{"line":84,"column":27},"end":{"line":89,"column":21}},"51":{"start":{"line":85,"column":24},"end":{"line":85,"column":71}},"52":{"start":{"line":86,"column":24},"end":{"line":88,"column":25}},"53":{"start":{"line":87,"column":28},"end":{"line":87,"column":59}},"54":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"55":{"start":{"line":104,"column":16},"end":{"line":104,"column":47}},"56":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"57":{"start":{"line":118,"column":16},"end":{"line":118,"column":54}},"58":{"start":{"line":131,"column":12},"end":{"line":131,"column":112}},"59":{"start":{"line":143,"column":12},"end":{"line":143,"column":105}},"60":{"start":{"line":155,"column":12},"end":{"line":155,"column":78}},"61":{"start":{"line":167,"column":12},"end":{"line":167,"column":130}},"62":{"start":{"line":178,"column":12},"end":{"line":185,"column":13}},"63":{"start":{"line":179,"column":16},"end":{"line":181,"column":51}},"64":{"start":{"line":183,"column":16},"end":{"line":183,"column":38}},"65":{"start":{"line":184,"column":16},"end":{"line":184,"column":40}},"66":{"start":{"line":186,"column":12},"end":{"line":186,"column":33}},"67":{"start":{"line":197,"column":12},"end":{"line":204,"column":13}},"68":{"start":{"line":198,"column":16},"end":{"line":200,"column":52}},"69":{"start":{"line":202,"column":16},"end":{"line":202,"column":38}},"70":{"start":{"line":203,"column":16},"end":{"line":203,"column":40}},"71":{"start":{"line":205,"column":12},"end":{"line":205,"column":32}},"72":{"start":{"line":209,"column":4},"end":{"line":209,"column":18}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":168},"end":{"line":3,"column":189}},{"start":{"line":3,"column":193},"end":{"line":3,"column":198}}]},"2":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":232},"end":{"line":3,"column":232}},{"start":{"line":3,"column":232},"end":{"line":3,"column":232}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":407},"end":{"line":3,"column":407}},{"start":{"line":3,"column":407},"end":{"line":3,"column":407}}]},"4":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":476},"end":{"line":3,"column":476}},{"start":{"line":3,"column":476},"end":{"line":3,"column":476}}]},"5":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":50}},{"start":{"line":5,"column":50},"end":{"line":5,"column":50}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":20},"end":{"line":52,"column":20}},{"start":{"line":52,"column":20},"end":{"line":52,"column":20}}]},"7":{"line":54,"type":"switch","locations":[{"start":{"line":55,"column":32},"end":{"line":55,"column":64}},{"start":{"line":56,"column":32},"end":{"line":58,"column":42}},{"start":{"line":59,"column":32},"end":{"line":61,"column":42}}]},"8":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":24},"end":{"line":66,"column":24}},{"start":{"line":66,"column":24},"end":{"line":66,"column":24}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":20},"end":{"line":76,"column":20}},{"start":{"line":76,"column":20},"end":{"line":76,"column":20}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":24},"end":{"line":77,"column":24}},{"start":{"line":77,"column":24},"end":{"line":77,"column":24}}]},"11":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":31},"end":{"line":79,"column":31}},{"start":{"line":79,"column":31},"end":{"line":79,"column":31}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":27},"end":{"line":84,"column":27}},{"start":{"line":84,"column":27},"end":{"line":84,"column":27}}]},"13":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":24}},{"start":{"line":86,"column":24},"end":{"line":86,"column":24}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"15":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":20}},{"start":{"line":103,"column":24},"end":{"line":103,"column":50}}]},"16":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":12}},{"start":{"line":117,"column":12},"end":{"line":117,"column":12}}]},"17":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":16},"end":{"line":117,"column":20}},{"start":{"line":117,"column":24},"end":{"line":117,"column":54}},{"start":{"line":117,"column":58},"end":{"line":117,"column":77}}]},"18":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":19},"end":{"line":131,"column":30}},{"start":{"line":131,"column":34},"end":{"line":131,"column":69}},{"start":{"line":131,"column":73},"end":{"line":131,"column":111}}]},"19":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":19},"end":{"line":143,"column":30}},{"start":{"line":143,"column":34},"end":{"line":143,"column":66}},{"start":{"line":143,"column":70},"end":{"line":143,"column":104}}]},"20":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":19},"end":{"line":155,"column":42}},{"start":{"line":155,"column":46},"end":{"line":155,"column":77}}]},"21":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":19},"end":{"line":167,"column":23}},{"start":{"line":167,"column":27},"end":{"line":167,"column":57}},{"start":{"line":167,"column":62},"end":{"line":167,"column":93}},{"start":{"line":167,"column":97},"end":{"line":167,"column":128}}]},"22":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":12}},{"start":{"line":178,"column":12},"end":{"line":178,"column":12}}]},"23":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":12}},{"start":{"line":197,"column":12},"end":{"line":197,"column":12}}]}},"code":["'use strict';","","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","var _require = require('./settingsUtil'),","    getSettings = _require.getSettings;","","var _require2 = require('./astUtil'),","    isMethodCall = _require2.isMethodCall,","    isCallFromObject = _require2.isCallFromObject,","    getCaller = _require2.getCaller,","    getMethodName = _require2.getMethodName;","","var _require3 = require('./importUtil'),","    getNameFromCjsRequire = _require3.getNameFromCjsRequire,","    isFullLodashImport = _require3.isFullLodashImport,","    getMethodImportFromName = _require3.getMethodImportFromName;","","/* Class representing lodash data for a given context */","","","module.exports = function () {","    /**","     * Create a Lodash context wrapper from a file's RuleContext","     * @param {RuleContext} context","     */","    function _class(context) {","        _classCallCheck(this, _class);","","        this.context = context;","        this.general = Object.create(null);","        this.methods = Object.create(null);","    }","","    /**","     * Gets visitors to collect lodash declarations in the context","     * @returns {Object} visitors for every where Lodash can be declared","     */","","","    _createClass(_class, [{","        key: 'getImportVisitors',","        value: function getImportVisitors() {","            var self = this;","            return {","                ImportDeclaration: function ImportDeclaration(_ref) {","                    var source = _ref.source,","                        specifiers = _ref.specifiers;","","                    if (isFullLodashImport(source.value)) {","                        specifiers.forEach(function (spec) {","                            switch (spec.type) {","                                case 'ImportNamespaceSpecifier':","                                case 'ImportDefaultSpecifier':","                                    self.general[spec.local.name] = true;","                                    break;","                                case 'ImportSpecifier':","                                    self.methods[spec.local.name] = spec.imported.name;","                                    break;","                            }","                        });","                    } else {","                        var method = getMethodImportFromName(source.value);","                        if (method) {","                            self.methods[specifiers[0].local.name] = method;","                        }","                    }","                },","                VariableDeclarator: function VariableDeclarator(_ref2) {","                    var init = _ref2.init,","                        id = _ref2.id;","","                    var required = getNameFromCjsRequire(init);","                    if (isFullLodashImport(required)) {","                        if (id.type === 'Identifier') {","                            self.general[id.name] = true;","                        } else if (id.type === 'ObjectPattern') {","                            id.properties.forEach(function (prop) {","                                self.methods[prop.value.name] = prop.key.name;","                            });","                        }","                    } else if (required) {","                        var method = getMethodImportFromName(required);","                        if (method) {","                            self.methods[id.name] = method;","                        }","                    }","                }","            };","        }","","        /**","         * Returns whether the node is an imported Lodash in this context","         * @param node","         * @returns {boolean|undefined}","         */","","    }, {","        key: 'isImportedLodash',","        value: function isImportedLodash(node) {","            if (node && node.type === 'Identifier') {","                return this.general[node.name];","            }","        }","","        /**","         * Returns the name of the Lodash method for this node, if any","         * @param node","         * @returns {string|undefined}","         */","","    }, {","        key: 'getImportedLodashMethod',","        value: function getImportedLodashMethod(node) {","            if (node && node.type === 'CallExpression' && !isMethodCall(node)) {","                return this.methods[node.callee.name];","            }","        }","","        /**","         * Returns whether the node is a call from a Lodash object","         * @param node","         * @returns {boolean|undefined}","         */","","    }, {","        key: 'isLodashCall',","        value: function isLodashCall(node) {","            return this.pragma && isCallFromObject(node, this.pragma) || this.isImportedLodash(getCaller(node));","        }","","        /**","         * Returns whether the node is an implicit chain start, _()...","         * @param node","         * @returns {boolean|undefined}","         */","","    }, {","        key: 'isImplicitChainStart',","        value: function isImplicitChainStart(node) {","            return this.pragma && node.callee.name === this.pragma || this.isImportedLodash(node.callee);","        }","","        /**","         * Returns whether the node is an explicit chain start, _.chain()...","         * @param node","         * @returns {boolean|undefined}","         */","","    }, {","        key: 'isExplicitChainStart',","        value: function isExplicitChainStart(node) {","            return this.isLodashCall(node) && getMethodName(node) === 'chain';","        }","","        /**","         * Returns whether the node is a Lodash chain start, implicit or explicit","         * @param node","         * @returns {*|boolean|boolean|undefined}","         */","","    }, {","        key: 'isLodashChainStart',","        value: function isLodashChainStart(node) {","            return node && node.type === 'CallExpression' && (this.isImplicitChainStart(node) || this.isExplicitChainStart(node));","        }","","        /**","         *","         * @returns {number} the current Lodash version","         */","","    }, {","        key: 'version',","        get: function get() {","            if (!this._version) {","                var _getSettings = getSettings(this.context),","                    pragma = _getSettings.pragma,","                    version = _getSettings.version;","","                this._pragma = pragma;","                this._version = version;","            }","            return this._version;","        }","","        /**","         *","         * @returns {string|undefined} the current Lodash pragma","         */","","    }, {","        key: 'pragma',","        get: function get() {","            if (!this._pragma) {","                var _getSettings2 = getSettings(this.context),","                    pragma = _getSettings2.pragma,","                    version = _getSettings2.version;","","                this._pragma = pragma;","                this._version = version;","            }","            return this._pragma;","        }","    }]);","","    return _class;","}();"],"l":{"3":9,"5":1,"7":1,"10":1,"16":1,"24":1,"29":1,"30":0,"32":0,"33":0,"34":0,"43":1,"46":0,"47":0,"49":0,"52":0,"53":0,"54":0,"57":0,"58":0,"60":0,"61":0,"65":0,"66":0,"67":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"84":0,"85":0,"86":0,"87":0,"103":0,"104":0,"117":0,"118":0,"131":0,"143":0,"155":0,"167":0,"178":0,"179":0,"183":0,"184":0,"186":0,"197":0,"198":0,"202":0,"203":0,"205":0,"209":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/settingsUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/settingsUtil.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getSettings","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":47}}},"2":{"name":"isEcmaFeatureOn","line":22,"loc":{"start":{"line":22,"column":21},"end":{"line":22,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":25,"column":2}},"3":{"start":{"line":11,"column":8},"end":{"line":13,"column":19}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":120}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":60}},{"start":{"line":23,"column":64},"end":{"line":23,"column":119}}]}},"code":["'use strict';","","var _ = require('lodash');","module.exports = {","    /**","     * Returns the lodash object settings, with default values if missing","     * @param context","     * @returns {LodashSettings}","     */","    getSettings: function getSettings(context) {","        return _.chain(context).get(['settings', 'lodash']).clone().defaults({","            version: 4","        }).value();","    },","","","    /**","     * Gets whether the ecmaFeature specified is on for the context","     * @param context","     * @param {string} featureName","     */","    isEcmaFeatureOn: function isEcmaFeatureOn(context, featureName) {","        return _.get(context, ['ecmaFeatures', featureName]) || _.get(context, ['parserOptions', 'ecmaVersion'], 0) > 5;","    }","};","","/**"," @typedef {Object} LodashSettings"," @property {String} pragma - The symbol that signifies Lodash (default is '_')."," @property {Number} version - The major version number (default is 4).","*/"],"l":{"3":1,"4":1,"11":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/lodashUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/lodashUtil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"isChainable","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"2":{"name":"isChainBreaker","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":39}}},"3":{"name":"isCallToMethod","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":47}}},"4":{"name":"isLodashWrapperMethod","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":46}}},"5":{"name":"getIsTypeMethod","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":31}}},"6":{"name":"isNativeCollectionMethodCall","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}}},"7":{"name":"getLodashMethodCallExpVisitor","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":64}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":11},"end":{"line":76,"column":27}}},"9":{"name":"isLodashCallToMethod","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":59}}},"10":{"name":"isCallToLodashMethod","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":59}}},"11":{"name":"getLodashMethodVisitors","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":64}}},"12":{"name":"getShorthandVisitors","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":57}}},"13":{"name":"always","line":125,"loc":{"start":{"line":125,"column":16},"end":{"line":125,"column":54}}},"14":{"name":"never","line":133,"loc":{"start":{"line":133,"column":15},"end":{"line":133,"column":53}}},"15":{"name":"getLodashContext","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"6":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":76}},"8":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":89}},"10":{"start":{"line":36,"column":0},"end":{"line":38,"column":1}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":88}},"12":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":80}},"14":{"start":{"line":55,"column":0},"end":{"line":58,"column":1}},"15":{"start":{"line":56,"column":4},"end":{"line":56,"column":132}},"16":{"start":{"line":57,"column":4},"end":{"line":57,"column":70}},"17":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":164}},"19":{"start":{"line":75,"column":0},"end":{"line":101,"column":1}},"20":{"start":{"line":76,"column":4},"end":{"line":100,"column":6}},"21":{"start":{"line":77,"column":8},"end":{"line":77,"column":44}},"22":{"start":{"line":78,"column":8},"end":{"line":78,"column":35}},"23":{"start":{"line":79,"column":8},"end":{"line":99,"column":9}},"24":{"start":{"line":80,"column":12},"end":{"line":80,"column":32}},"25":{"start":{"line":81,"column":12},"end":{"line":81,"column":38}},"26":{"start":{"line":82,"column":12},"end":{"line":88,"column":13}},"27":{"start":{"line":83,"column":16},"end":{"line":83,"column":57}},"28":{"start":{"line":84,"column":16},"end":{"line":84,"column":81}},"29":{"start":{"line":85,"column":16},"end":{"line":85,"column":155}},"30":{"start":{"line":86,"column":16},"end":{"line":86,"column":32}},"31":{"start":{"line":87,"column":16},"end":{"line":87,"column":42}},"32":{"start":{"line":89,"column":15},"end":{"line":99,"column":9}},"33":{"start":{"line":90,"column":12},"end":{"line":90,"column":54}},"34":{"start":{"line":91,"column":12},"end":{"line":91,"column":78}},"35":{"start":{"line":92,"column":12},"end":{"line":92,"column":147}},"36":{"start":{"line":93,"column":15},"end":{"line":99,"column":9}},"37":{"start":{"line":94,"column":12},"end":{"line":94,"column":71}},"38":{"start":{"line":95,"column":12},"end":{"line":98,"column":13}},"39":{"start":{"line":96,"column":16},"end":{"line":96,"column":83}},"40":{"start":{"line":97,"column":16},"end":{"line":97,"column":152}},"41":{"start":{"line":103,"column":0},"end":{"line":105,"column":1}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":99}},"43":{"start":{"line":107,"column":0},"end":{"line":112,"column":1}},"44":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"45":{"start":{"line":109,"column":8},"end":{"line":109,"column":21}},"46":{"start":{"line":111,"column":4},"end":{"line":111,"column":171}},"47":{"start":{"line":114,"column":0},"end":{"line":119,"column":1}},"48":{"start":{"line":115,"column":4},"end":{"line":115,"column":51}},"49":{"start":{"line":116,"column":4},"end":{"line":116,"column":53}},"50":{"start":{"line":117,"column":4},"end":{"line":117,"column":97}},"51":{"start":{"line":118,"column":4},"end":{"line":118,"column":20}},"52":{"start":{"line":121,"column":0},"end":{"line":142,"column":1}},"53":{"start":{"line":122,"column":4},"end":{"line":122,"column":51}},"54":{"start":{"line":123,"column":4},"end":{"line":123,"column":53}},"55":{"start":{"line":124,"column":4},"end":{"line":140,"column":39}},"56":{"start":{"line":126,"column":12},"end":{"line":127,"column":39}},"57":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"58":{"start":{"line":130,"column":16},"end":{"line":130,"column":58}},"59":{"start":{"line":134,"column":12},"end":{"line":134,"column":38}},"60":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"61":{"start":{"line":137,"column":16},"end":{"line":137,"column":81}},"62":{"start":{"line":141,"column":4},"end":{"line":141,"column":20}},"63":{"start":{"line":149,"column":0},"end":{"line":151,"column":1}},"64":{"start":{"line":150,"column":4},"end":{"line":150,"column":38}},"65":{"start":{"line":153,"column":0},"end":{"line":165,"column":2}}},"branchMap":{"1":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":37},"end":{"line":57,"column":62}},{"start":{"line":57,"column":65},"end":{"line":57,"column":69}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"3":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":19},"end":{"line":82,"column":55}},{"start":{"line":82,"column":59},"end":{"line":82,"column":85}},{"start":{"line":82,"column":89},"end":{"line":82,"column":119}}]},"4":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":15},"end":{"line":89,"column":15}},{"start":{"line":89,"column":15},"end":{"line":89,"column":15}}]},"5":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":15}},{"start":{"line":93,"column":15},"end":{"line":93,"column":15}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":12}},{"start":{"line":95,"column":12},"end":{"line":95,"column":12}}]},"7":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":11},"end":{"line":104,"column":43}},{"start":{"line":104,"column":47},"end":{"line":104,"column":98}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"9":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":13}},{"start":{"line":108,"column":17},"end":{"line":108,"column":47}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":60}},{"start":{"line":111,"column":64},"end":{"line":111,"column":170}}]},"11":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"12":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":71}},{"start":{"line":129,"column":75},"end":{"line":129,"column":122}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":12}},{"start":{"line":136,"column":12},"end":{"line":136,"column":12}}]},"14":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":31},"end":{"line":137,"column":39}},{"start":{"line":137,"column":43},"end":{"line":137,"column":63}}]},"15":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":24}},{"start":{"line":140,"column":28},"end":{"line":140,"column":36}}]}},"code":["'use strict';","","var _ = require('lodash');","var methodDataUtil = require('./methodDataUtil');","var astUtil = require('./astUtil');","var settingsUtil = require('./settingsUtil');","var LodashContext = require('./LodashContext');","","/**"," * Returns whether or not a node is a chainable method call in the specified version"," * @param {Object} node"," * @param {number} version"," * @returns {boolean}"," */","function isChainable(node, version) {","    return methodDataUtil.isChainable(version, astUtil.getMethodName(node));","}","","/**"," * Returns whehter the node is a chain breaker method in the specified version"," * @param {Object} node"," * @param {number} version"," * @returns {boolean}"," */","function isChainBreaker(node, version) {","    return methodDataUtil.isAliasOfMethod(version, 'value', astUtil.getMethodName(node));","}","","/**"," * Returns whether the node is a call to the specified method or one of its aliases in the version"," * @param {Object} node"," * @param {number} version"," * @param {string} method"," * @returns {boolean}"," */","function isCallToMethod(node, version, method) {","    return methodDataUtil.isAliasOfMethod(version, method, astUtil.getMethodName(node));","}","","/**"," * Returns whether or not the node is a call to a lodash wrapper method"," * @param {Object} node"," * @param {number} version"," * @returns {boolean}"," */","function isLodashWrapperMethod(node, version) {","    return methodDataUtil.isWrapperMethod(version, astUtil.getMethodName(node));","}","","/**"," * Gets the 'isX' method for a specified type, e.g. isObject"," * @param {string} name"," * @returns {string|null}"," */","function getIsTypeMethod(name) {","    var types = ['number', 'boolean', 'function', 'Function', 'string', 'object', 'undefined', 'Date', 'Array', 'Error', 'Element'];","    return _.includes(types, name) ? 'is' + _.capitalize(name) : null;","}","","/**"," * Returns whether or not the node is a call to a native collection method"," * @param {Object} node"," * @returns {boolean}"," */","function isNativeCollectionMethodCall(node) {","    return _.includes(['every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'includes', 'map', 'reduce', 'reduceRight', 'some'], astUtil.getMethodName(node));","}","","/**"," * Gets the context's Lodash settings and a function and returns a visitor that calls the function for every Lodash or chain call"," * @param {LodashContext} lodashContext"," * @param {LodashReporter} reporter"," * @returns {NodeTypeVisitor}"," */","function getLodashMethodCallExpVisitor(lodashContext, reporter) {","    return function (node) {","        var version = lodashContext.version;","        var iterateeIndex = void 0;","        if (lodashContext.isLodashChainStart(node)) {","            var prevNode = node;","            node = node.parent.parent;","            while (astUtil.getCaller(node) === prevNode && astUtil.isMethodCall(node) && !isChainBreaker(node, version)) {","                var method = astUtil.getMethodName(node);","                iterateeIndex = methodDataUtil.getIterateeIndex(version, method);","                reporter(node, node.arguments[iterateeIndex - 1], { callType: 'chained', method: method, version: version, lodashContext: lodashContext });","                prevNode = node;","                node = node.parent.parent;","            }","        } else if (lodashContext.isLodashCall(node)) {","            var _method = astUtil.getMethodName(node);","            iterateeIndex = methodDataUtil.getIterateeIndex(version, _method);","            reporter(node, node.arguments[iterateeIndex], { callType: 'method', method: _method, version: version, lodashContext: lodashContext });","        } else if (version !== 3) {","            var _method2 = lodashContext.getImportedLodashMethod(node);","            if (_method2) {","                iterateeIndex = methodDataUtil.getIterateeIndex(version, _method2);","                reporter(node, node.arguments[iterateeIndex], { method: _method2, callType: 'single', version: version, lodashContext: lodashContext });","            }","        }","    };","}","","function isLodashCallToMethod(node, method, lodashContext) {","    return lodashContext.isLodashCall(node) && isCallToMethod(node, lodashContext.version, method);","}","","function isCallToLodashMethod(node, method, lodashContext) {","    if (!node || node.type !== 'CallExpression') {","        return false;","    }","    return isLodashCallToMethod(node, method, lodashContext) || methodDataUtil.isAliasOfMethod(lodashContext.version, method, lodashContext.getImportedLodashMethod(node));","}","","function getLodashMethodVisitors(context, lodashCallExpVisitor) {","    var lodashContext = new LodashContext(context);","    var visitors = lodashContext.getImportVisitors();","    visitors.CallExpression = getLodashMethodCallExpVisitor(lodashContext, lodashCallExpVisitor);","    return visitors;","}","","function getShorthandVisitors(context, checks, messages) {","    var lodashContext = new LodashContext(context);","    var visitors = lodashContext.getImportVisitors();","    visitors.CallExpression = getLodashMethodCallExpVisitor(lodashContext, {","        always: function always(node, iteratee, _ref) {","            var method = _ref.method,","                version = _ref.version;","","            if (methodDataUtil.methodSupportsShorthand(version, method) && checks.canUseShorthand(iteratee, lodashContext)) {","                context.report(iteratee, messages.always);","            }","        },","        never: function never(node, iteratee, _ref2) {","            var method = _ref2.method;","","            if (checks.usesShorthand(node, iteratee, method)) {","                context.report(iteratee || node.callee.property, messages.never);","            }","        }","    }[context.options[0] || 'always']);","    return visitors;","}","","/**"," *"," * @param context"," * @returns {LodashContext} a LodashContext for a given context"," */","function getLodashContext(context) {","    return new LodashContext(context);","}","","module.exports = {","    isChainable: isChainable,","    isChainBreaker: isChainBreaker,","    isCallToMethod: isCallToMethod,","    isLodashWrapperMethod: isLodashWrapperMethod,","    getIsTypeMethod: getIsTypeMethod,","    isNativeCollectionMethodCall: isNativeCollectionMethodCall,","    getLodashMethodCallExpVisitor: getLodashMethodCallExpVisitor,","    isCallToLodashMethod: isCallToLodashMethod,","    getShorthandVisitors: getShorthandVisitors,","    getLodashMethodVisitors: getLodashMethodVisitors,","    getLodashContext: getLodashContext","};","","/**"," @callback LodashReporter"," @param {Object} node"," @param {Object} iteratee"," @param {Object?} options"," */","","/**"," @callback NodeTypeVisitor"," @param {Object} node"," */","","/**"," * @typedef {Object} ShorthandChecks"," * @property {function} canUseShorthand"," * @property {function} usesShorthand"," */","","/**"," * @typedef {object} ShorthandMessages"," * @property {string} always"," * @property {string} never"," */"],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"15":1,"16":0,"25":1,"26":0,"36":1,"37":0,"46":1,"47":0,"55":1,"56":0,"57":0,"65":1,"66":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"103":1,"104":0,"107":1,"108":0,"109":0,"111":0,"114":1,"115":0,"116":0,"117":0,"118":0,"121":1,"122":0,"123":0,"124":0,"126":0,"129":0,"130":0,"134":0,"136":0,"137":0,"141":0,"149":1,"150":0,"153":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataUtil.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":1,"46":0,"47":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"_toConsumableArray","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":49}}},"3":{"name":"expandAlias","line":17,"loc":{"start":{"line":17,"column":18},"end":{"line":17,"column":56}}},"4":{"name":"expandAliases","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":41}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":30},"end":{"line":29,"column":48}}},"6":{"name":"isMainAlias","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":38}}},"7":{"name":"isChainable","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":38}}},"8":{"name":"isCollectionMethod","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":45}}},"9":{"name":"methodSupportsShorthand","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":50}}},"10":{"name":"isWrapperMethod","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":42}}},"11":{"name":"isAliasOfMethod","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":51}}},"12":{"name":"getMainAlias","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":39}}},"13":{"name":"(anonymous_13)","line":104,"loc":{"start":{"line":104,"column":51},"end":{"line":104,"column":73}}},"14":{"name":"getIterateeIndex","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":43}}},"15":{"name":"getFunctionMaxArity","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":44}}},"16":{"name":"getSideEffectIterationMethods","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":195}},"2":{"start":{"line":3,"column":35},"end":{"line":3,"column":193}},"3":{"start":{"line":3,"column":61},"end":{"line":3,"column":145}},"4":{"start":{"line":3,"column":126},"end":{"line":3,"column":143}},"5":{"start":{"line":3,"column":146},"end":{"line":3,"column":158}},"6":{"start":{"line":3,"column":168},"end":{"line":3,"column":191}},"7":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"8":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"9":{"start":{"line":8,"column":4},"end":{"line":8,"column":55}},"10":{"start":{"line":17,"column":0},"end":{"line":20,"column":2}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":79}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":62}},"13":{"start":{"line":28,"column":0},"end":{"line":32,"column":1}},"14":{"start":{"line":29,"column":4},"end":{"line":31,"column":7}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":44}},"16":{"start":{"line":40,"column":0},"end":{"line":42,"column":1}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":51}},"18":{"start":{"line":50,"column":0},"end":{"line":53,"column":1}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":76}},"21":{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},"22":{"start":{"line":62,"column":4},"end":{"line":62,"column":125}},"23":{"start":{"line":71,"column":0},"end":{"line":74,"column":1}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":50}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":67}},"26":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":69}},"28":{"start":{"line":92,"column":0},"end":{"line":94,"column":1}},"29":{"start":{"line":93,"column":4},"end":{"line":93,"column":105}},"30":{"start":{"line":102,"column":0},"end":{"line":107,"column":1}},"31":{"start":{"line":103,"column":4},"end":{"line":103,"column":38}},"32":{"start":{"line":104,"column":4},"end":{"line":106,"column":7}},"33":{"start":{"line":105,"column":8},"end":{"line":105,"column":54}},"34":{"start":{"line":115,"column":0},"end":{"line":125,"column":1}},"35":{"start":{"line":116,"column":4},"end":{"line":116,"column":50}},"36":{"start":{"line":117,"column":4},"end":{"line":117,"column":55}},"37":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"38":{"start":{"line":119,"column":8},"end":{"line":119,"column":40}},"39":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"40":{"start":{"line":122,"column":8},"end":{"line":122,"column":17}},"41":{"start":{"line":124,"column":4},"end":{"line":124,"column":14}},"42":{"start":{"line":133,"column":0},"end":{"line":135,"column":1}},"43":{"start":{"line":134,"column":4},"end":{"line":134,"column":67}},"44":{"start":{"line":137,"column":0},"end":{"line":137,"column":109}},"45":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"46":{"start":{"line":145,"column":4},"end":{"line":145,"column":62}},"47":{"start":{"line":148,"column":0},"end":{"line":159,"column":2}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":35},"end":{"line":3,"column":35}},{"start":{"line":3,"column":35},"end":{"line":3,"column":35}}]},"2":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":11},"end":{"line":62,"column":51}},{"start":{"line":62,"column":55},"end":{"line":62,"column":124}}]},"3":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":11},"end":{"line":93,"column":29}},{"start":{"line":93,"column":33},"end":{"line":93,"column":104}}]},"4":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":26},"end":{"line":104,"column":32}},{"start":{"line":104,"column":35},"end":{"line":106,"column":6}}]},"5":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"6":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"7":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":18}},{"start":{"line":121,"column":22},"end":{"line":121,"column":41}}]}},"code":["'use strict';","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","var _ = require('lodash');","","var getMethodData = _.memoize(function (version) {","    return require('./methodDataByVersion/' + version);","});","","/**"," * Gets a major version number and method name and returns all its aliases including itself."," * @param {Number} version"," * @param {string} method"," * @returns {string[]}"," */","var expandAlias = function expandAlias(version, method) {","    var methodAliases = _.get(getMethodData(version), [method, 'aliases'], []);","    return [method].concat(_toConsumableArray(methodAliases));","};","","/**"," * Gets a major version number and a list of methods and returns a list of methods and all their aliases"," * @param version"," * @param methods"," * @returns {string[]}"," */","function expandAliases(version, methods) {","    return _.flatMap(methods, function (method) {","        return expandAlias(version, method);","    });","}","","/**"," * Returns whether the method is the main alias"," * @param version"," * @param method"," * @returns {Boolean}"," */","function isMainAlias(version, method) {","    return Boolean(getMethodData(version)[method]);","}","","/**"," * Gets a list of all chainable methods and their aliases for a given version"," * @param {Number} version"," * @param {string} method"," * @returns {boolean}"," */","function isChainable(version, method) {","    var data = getMethodData(version);","    return _.get(data, [getMainAlias(version, method), 'chainable'], false);","}","","/**"," * Gets whether the method is a collection method"," * @param {Number} version"," * @param {string} method"," * @returns {Boolean}"," */","function isCollectionMethod(version, method) {","    return methodSupportsShorthand(version, method) || _.includes(expandAliases(version, ['reduce', 'reduceRight']), method);","}","","/**"," * Returns whether the node's method call supports using shorthands in the specified version"," * @param {Number} version"," * @param {string} method"," * @returns {boolean}"," */","function methodSupportsShorthand(version, method) {","    var mainAlias = getMainAlias(version, method);","    return _.get(getMethodData(version), [mainAlias, 'shorthand']);","}","","/**"," * Gets whether the method is a wrapper method"," * @param {Number} version"," * @param {string} method"," * @returns {boolean}"," */","function isWrapperMethod(version, method) {","    return _.get(getMethodData(version), [method, 'wrapper'], false);","}","/**"," * Gets whether the suspect is an alias of the method in a given version"," * @param {Number} version"," * @param {string} method"," * @param {string} suspect"," * @returns {boolean}"," */","function isAliasOfMethod(version, method, suspect) {","    return method === suspect || _.includes(_.get(getMethodData(version), [method, 'aliases']), suspect);","}","","/**"," * Returns the main alias for the method in the specified version."," * @param {number} version"," * @param {string} method"," * @returns {string}"," */","function getMainAlias(version, method) {","    var data = getMethodData(version);","    return data[method] ? method : _.findKey(data, function (methodData) {","        return _.includes(methodData.aliases, method);","    });","}","","/**"," * Gets the index of the iteratee of a method when it isn't chained, or -1 if it doesn't have one."," * @param {number} version"," * @param {string} method"," * @returns {number}"," */","function getIterateeIndex(version, method) {","    var mainAlias = getMainAlias(version, method);","    var methodData = getMethodData(version)[mainAlias];","    if (_.has(methodData, 'iterateeIndex')) {","        return methodData.iterateeIndex;","    }","    if (methodData && methodData.iteratee) {","        return 1;","    }","    return -1;","}","","/**"," * Gets the maximum number of arguments to be given to the function in the specified version"," * @param {number} version"," * @param {string} name"," * @returns {number}"," */","function getFunctionMaxArity(version, name) {","    return _.get(getMethodData(version), [name, 'args'], Infinity);","}","","var sideEffectIterationMethods = ['forEach', 'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight'];","","/**"," * Gets a list of side effect iteration methods by version"," * @param {number} version"," * @returns {string[]}"," */","function getSideEffectIterationMethods(version) {","    return expandAliases(version, sideEffectIterationMethods);","}","","module.exports = {","    isAliasOfMethod: isAliasOfMethod,","    isChainable: isChainable,","    methodSupportsShorthand: methodSupportsShorthand,","    isWrapperMethod: isWrapperMethod,","    isCollectionMethod: isCollectionMethod,","    isMainAlias: isMainAlias,","    getMainAlias: getMainAlias,","    getIterateeIndex: getIterateeIndex,","    getFunctionMaxArity: getFunctionMaxArity,","    getSideEffectIterationMethods: getSideEffectIterationMethods","};","","/**"," * A JSON object containing method info for a specific lodash major version"," @typedef {Object} VersionInfo"," @property {Aliases} aliases"," @property {[string]} wrapper"," @property {Object.<string, [string]>} wrapperAliases"," @property {[string]} property"," @property {[string]} chainable"," */"],"l":{"3":1,"5":1,"7":1,"8":0,"17":1,"18":0,"19":0,"28":1,"29":0,"30":0,"40":1,"41":0,"50":1,"51":0,"52":0,"61":1,"62":0,"71":1,"72":0,"73":0,"82":1,"83":0,"92":1,"93":0,"102":1,"103":0,"104":0,"105":0,"115":1,"116":0,"117":0,"118":0,"119":0,"121":0,"122":0,"124":0,"133":1,"134":0,"137":1,"144":1,"145":0,"148":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":471,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","    3: {","        aliases: {","            forEach: ['each'],","            assign: ['extend'],","            first: ['head'],","            zipObject: ['object'],","            rest: ['tail'],","            uniq: ['unique'],","            reduce: ['foldl', 'inject'],","            reduceRight: ['foldr'],","            some: ['any'],","            map: ['collect'],","            includes: ['contains', 'include'],","            flowRight: ['backflow', 'compose'],","            isEqual: ['eq'],","            every: ['all'],","            find: ['detect'],","            forEachRight: ['eachRight'],","            filter: ['select'],","            functions: ['methods'],","            callback: ['iteratee']","        },","        wrapper: ['concat', 'join', 'pop', 'push', 'reverse', 'shift', 'slice', 'sort', 'splice', 'unshift', 'replace', 'split'],","        wrapperAliases: {","            value: ['run', 'toJSON', 'valueOf']","        },","        shorthand: ['dropRightWhile', 'dropWhile', 'findIndex', 'findLastIndex', 'remove', 'sortedIndex', 'sortedLastIndex', 'map', 'takeRightWhile', 'takeWhile', 'uniq', 'countBy', 'every', 'filter', 'find', 'result', 'groupBy', 'indexBy', 'partition', 'reject', 'some', 'sortBy', 'sortByOrder', 'max', 'min', 'sum', 'findKey', 'findLastKey', 'mapValues'],","        chainable: ['after', 'ary', 'assign', 'at', 'before', 'bind', 'bindAll', 'bindKey', 'callback', 'chain', 'chunk', 'commit', 'compact', 'concat', 'constant', 'countBy', 'create', 'curry', 'debounce', 'defaults', 'defaultsDeep', 'defer', 'delay', 'difference', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'fill', 'filter', 'flatten', 'flattenDeep', 'flow', 'flowRight', 'forEach', 'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'functions', 'groupBy', 'indexBy', 'initial', 'intersection', 'invert', 'invoke', 'keys', 'keysIn', 'map', 'mapKeys', 'mapValues', 'matches', 'matchesProperty', 'memoize', 'merge', 'method', 'methodOf', 'mixin', 'modArgs', 'negate', 'omit', 'once', 'pairs', 'partial', 'partialRight', 'partition', 'pick', 'plant', 'pluck', 'property', 'propertyOf', 'pull', 'pullAt', 'push', 'range', 'rearg', 'reject', 'remove', 'rest', 'restParam', 'reverse', 'set', 'shuffle', 'slice', 'sort', 'sortBy', 'sortByAll', 'sortByOrder', 'splice', 'spread', 'take', 'takeRight', 'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'toArray', 'toPlainObject', 'transform', 'union', 'uniq', 'unshift', 'unzip', 'unzipWith', 'values', 'valuesIn', 'where', 'without', 'wrap', 'xor', 'zip', 'zipObject', 'zipWith'],","        iteratee: {","            any: ['dropRightWhile', 'dropWhile', 'findIndex', 'findLastIndex', 'remove', 'sortedIndex', 'sortedLastIndex', 'takeRightWhile', 'takeWhile', 'uniq', 'unzipWith', 'zipWith', 'tap', 'thru', 'countBy', 'every', 'filter', 'find', 'findLast', 'forEach', 'forEachRight', 'groupBy', 'indexBy', 'map', 'partition', 'reduce', 'reduceRight', 'reject', 'some', 'sortBy', 'max', 'min', 'sum', 'findKey', 'findLastKey', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'mapKeys', 'mapValues', 'transform', 'times'],","            differentIndex: {","                sortedIndex: 2,","                sortedLastIndex: 2","            }","        },","        args: {","            chunk: 2,","            compact: 1,","            drop: 2,","            dropRight: 2,","            dropRightWhile: 3,","            dropWhile: 3,","            fill: 4,","            findIndex: 3,","            findLastIndex: 3,","            first: 1,","            flatten: 2,","            flattenDeep: 1,","            fromIndex: 3,","            initial: 1,","            last: 1,","            lastIndexOf: 3,","            remove: 3,","            rest: 1,","            slice: 3,","            sortedIndex: 4,","            sortedLastIndex: 4,","            take: 2,","            takeRight: 2,","            takeRightWhile: 3,","            takeWhile: 3,","            uniq: 4,","            unzip: 1,","            unzipWith: 3,","            zipObject: 2,","            tap: 3,","            thru: 3,","            countBy: 3,","            every: 3,","            filter: 3,","            find: 3,","            findLast: 3,","            findWhere: 2,","            forEach: 3,","            forEachRight: 3,","            groupBy: 3,","            includes: 3,","            indexBy: 3,","            map: 3,","            partition: 3,","            pluck: 2,","            reduce: 4,","            reduceRight: 4,","            reject: 3,","            sample: 2,","            shuffle: 1,","            size: 1,","            some: 3,","            sortBy: 3,","            where: 2,","            after: 2,","            ary: 2,","            before: 2,","            curry: 2,","            curryRight: 2,","            debounce: 3,","            memoize: 2,","            negate: 1,","            once: 1,","            restParam: 2,","            spread: 1,","            throttle: 3,","            wrap: 2,","            clone: 4,","            cloneDeep: 3,","            gt: 2,","            gte: 2,","            isArguments: 1,","            isArray: 1,","            isBoolean: 1,","            isDate: 1,","            isElement: 1,","            isEmpty: 1,","            isEqual: 4,","            isError: 1,","            isFinite: 1,","            isFunction: 1,","            isMatch: 4,","            isNaN: 1,","            isNative: 1,","            isNull: 1,","            isNumber: 1,","            isObject: 1,","            isPlainObject: 1,","            isRegExp: 1,","            isTypedArray: 1,","            isUndefined: 1,","            lt: 2,","            lte: 2,","            toArray: 1,","            toPlainObject: 1,","            add: 2,","            ceil: 2,","            floor: 2,","            max: 3,","            min: 3,","            round: 2,","            sum: 3,","            inRange: 3,","            random: 3,","            create: 2,","            findKey: 3,","            findLastKey: 3,","            forIn: 3,","            forInRight: 3,","            forOwn: 3,","            forOwnRight: 3,","            functions: 1,","            get: 3,","            has: 2,","            invert: 2,","            keys: 1,","            keysIn: 1,","            mapKeys: 3,","            mapValues: 3,","            pairs: 1,","            result: 3,","            set: 3,","            transform: 4,","            values: 1,","            valuesIn: 1,","            camelCase: 1,","            capitalize: 1,","            deburr: 1,","            endsWith: 3,","            escape: 1,","            escapeRegExp: 1,","            kebabCase: 1,","            pad: 3,","            padLeft: 3,","            padRight: 3,","            parseInt: 2,","            repeat: 2,","            snakeCase: 2,","            startCase: 2,","            startsWith: 3,","            template: 2,","            trim: 2,","            trimLeft: 2,","            trimRight: 2,","            trunc: 3,","            unescape: 1,","            words: 2,","            callback: 2,","            constant: 1,","            identity: 1,","            matches: 1,","            matchesProperty: 2,","            mixin: 3,","            noConflict: 0,","            noop: 0,","            property: 1,","            propertyOf: 1,","            range: 3,","            runInContext: 1,","            times: 3,","            uniqueId: 1","        }","    },","    4: {","        aliases: {","            assignIn: ['extend'],","            assignInWith: ['extendWith'],","            forEach: ['each'],","            forEachRight: ['eachRight'],","            head: ['first']","        },","        wrapper: ['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'],","        wrapperAliases: {","            value: ['toJSON', 'valueOf']","        },","        shorthand: ['differenceBy', 'dropRightWhile', 'dropWhile', 'every', 'filter', 'find', 'findIndex', 'findKey', 'findLastIndex', 'findLastKey', 'flatMapDeep', 'flatMapDepth', 'groupBy', 'intersectionBy', 'invertBy', 'map', 'mapValues', 'maxBy', 'minBy', 'overSome', 'overEvery', 'partition', 'reject', 'remove', 'some', 'sortedIndexBy', 'sortedLastIndexBy', 'sumBy', 'takeRightWhile', 'takeWhile', 'unionBy', 'uniqBy', 'xorBy'],","        chainable: ['after', 'ary', 'assign', 'assignIn', 'assignInWith', 'assignWith', 'at', 'before', 'bind', 'bindAll', 'bindKey', 'castArray', 'chain', 'chunk', 'commit', 'compact', 'concat', 'conforms', 'constant', 'countBy', 'create', 'curry', 'debounce', 'defaults', 'defaultsDeep', 'defer', 'delay', 'difference', 'differenceBy', 'differenceWith', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'fill', 'filter', 'flatMap', 'flatMapDeep', 'flatMapDepth', 'flatten', 'flattenDeep', 'flattenDepth', 'flip', 'flow', 'flowRight', 'fromPairs', 'functions', 'functionsIn', 'groupBy', 'initial', 'intersection', 'intersectionBy', 'intersectionWith', 'invert', 'invertBy', 'invokeMap', 'iteratee', 'keyBy', 'keys', 'keysIn', 'map', 'mapKeys', 'mapValues', 'matches', 'matchesProperty', 'memoize', 'merge', 'mergeWith', 'method', 'methodOf', 'mixin', 'negate', 'nthArg', 'omit', 'omitBy', 'once', 'orderBy', 'over', 'overArgs', 'overEvery', 'overSome', 'partial', 'partialRight', 'partition', 'pick', 'pickBy', 'plant', 'property', 'propertyOf', 'pull', 'pullAll', 'pullAllBy', 'pullAllWith', 'pullAt', 'push', 'range', 'rangeRight', 'rearg', 'reject', 'remove', 'rest', 'reverse', 'sampleSize', 'set', 'setWith', 'shuffle', 'slice', 'sort', 'sortBy', 'splice', 'spread', 'tail', 'take', 'takeRight', 'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'toArray', 'toPairs', 'toPairsIn', 'toPath', 'toPlainObject', 'transform', 'unary', 'union', 'unionBy', 'unionWith', 'uniq', 'uniqBy', 'uniqWith', 'unset', 'unshift', 'unzip', 'unzipWith', 'update', 'updateWith', 'values', 'valuesIn', 'without', 'wrap', 'xor', 'xorBy', 'xorWith', 'zip', 'zipObject', 'zipObjectDeep', 'zipWith'],","        iteratee: {","            any: ['cloneDeepWith', 'cloneWith', 'countBy', 'dropRightWhile', 'dropWhile', 'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex', 'findLastKey', 'flatMap', 'flatMapDeep', 'flatMapDepth', 'forEach', 'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'groupBy', 'indexBy', 'invertBy', 'keyBy', 'map', 'mapKeys', 'mapValues', 'maxBy', 'meanBy', 'minBy', 'omitBy', 'partition', 'pickBy', 'reduce', 'reduceRight', 'reject', 'remove', 'some', 'sortedUniqBy', 'sumBy', 'takeRightWhile', 'takeWhile', 'tap', 'thru', 'times', 'transform', 'uniqBy', 'unzipWith', 'xorBy'],","            differentIndex: {","                pullAllBy: 2,","                sortedIndex: 2,","                sortedIndexBy: 2,","                sortedLastIndex: 2,","                sortedLastIndexBy: 2","            }","        },","        args: {","            add: 2,","            after: 2,","            ary: 2,","            before: 2,","            camelCase: 1,","            capitalize: 1,","            castArray: 1,","            ceil: 2,","            chain: 1,","            chunk: 2,","            clamp: 3,","            clone: 1,","            cloneDeep: 1,","            cloneDeepWith: 2,","            cloneWith: 2,","            compact: 1,","            cond: 1,","            conforms: 1,","            constant: 1,","            countBy: 2,","            create: 2,","            curry: 2,","            curryRight: 2,","            debounce: 3,","            deburr: 1,","            divide: 2,","            drop: 2,","            dropRight: 2,","            dropRightWhile: 3,","            dropWhile: 3,","            endsWith: 3,","            eq: 2,","            escape: 1,","            escapeRegExp: 1,","            every: 2,","            fill: 4,","            filter: 2,","            find: 3,","            findIndex: 3,","            findKey: 2,","            findLast: 3,","            findLastIndex: 3,","            findLastKey: 2,","            flatMap: 2,","            flatMapDeep: 2,","            flatMapDepth: 3,","            flatten: 1,","            flattenDeep: 1,","            flattenDepth: 2,","            flip: 1,","            floor: 2,","            forEach: 2,","            forEachRight: 2,","            forIn: 2,","            forInRight: 2,","            forOwn: 2,","            forOwnRight: 2,","            fromPairs: 1,","            functions: 1,","            functionsIn: 1,","            get: 3,","            groupBy: 2,","            gt: 2,","            gte: 2,","            has: 2,","            hasIn: 2,","            head: 1,","            identity: 1,","            inRange: 3,","            includes: 3,","            indexOf: 3,","            initial: 1,","            invert: 1,","            invertBy: 2,","            isArguments: 1,","            isArray: 1,","            isArrayBuffer: 1,","            isArrayLike: 1,","            isArrayLikeObject: 1,","            isBoolean: 1,","            isBuffer: 1,","            isDate: 1,","            isElement: 1,","            isEmpty: 1,","            isEqual: 2,","            isEqualWith: 3,","            isError: 1,","            isFinite: 1,","            isFunction: 1,","            isInteger: 1,","            isLength: 1,","            isMatch: 2,","            isMatchWith: 3,","            isNaN: 1,","            isNative: 1,","            isNil: 1,","            isNull: 1,","            isNumber: 1,","            isObject: 1,","            isObjectLike: 1,","            isPlainObject: 1,","            isRegExp: 1,","            isSafeInteger: 1,","            isSet: 1,","            isString: 1,","            isSymbol: 1,","            isTypedArray: 1,","            isUndefined: 1,","            isWeakMap: 1,","            isWeakSet: 1,","            join: 2,","            kebabCase: 1,","            keyBy: 2,","            keys: 1,","            keysIn: 1,","            last: 1,","            lastIndexOf: 3,","            lowerCase: 1,","            lowerFirst: 1,","            lt: 2,","            lte: 2,","            map: 2,","            mapKeys: 2,","            mapValues: 2,","            matches: 1,","            matchesProperty: 2,","            max: 1,","            maxBy: 2,","            mean: 1,","            meanBy: 2,","            memoize: 2,","            min: 1,","            minBy: 2,","            mixin: 3,","            multiply: 2,","            negate: 1,","            noConflict: 0,","            noop: 0,","            now: 0,","            nth: 2,","            nthArg: 1,","            once: 1,","            orderBy: 3,","            pad: 3,","            padEnd: 3,","            padStart: 3,","            parseInt: 2,","            partition: 2,","            property: 1,","            propertyOf: 1,","            pullAll: 2,","            pullAllBy: 3,","            pullAllWith: 3,","            random: 3,","            range: 3,","            rangeRight: 3,","            reduce: 3,","            reduceRight: 3,","            reject: 2,","            remove: 2,","            repeat: 2,","            rest: 2,","            result: 3,","            reverse: 1,","            round: 2,","            runInContext: 1,","            sample: 1,","            sampleSize: 2,","            set: 3,","            setWith: 4,","            shuffle: 1,","            size: 1,","            slice: 3,","            snakeCase: 1,","            some: 2,","            sortedIndex: 2,","            sortedIndexBy: 3,","            sortedIndexOf: 2,","            sortedLastIndex: 2,","            sortedLastIndexBy: 3,","            sortedLastIndexOf: 2,","            sortedUniq: 1,","            sortedUniqBy: 2,","            split: 3,","            spread: 2,","            startCase: 1,","            startsWith: 3,","            stubArray: 0,","            stubFalse: 0,","            stubObject: 0,","            stubString: 0,","            stubTrue: 0,","            subtract: 2,","            sum: 1,","            sumBy: 2,","            tail: 1,","            take: 2,","            takeRight: 2,","            takeRightWhile: 2,","            takeWhile: 2,","            tap: 2,","            template: 2,","            throttle: 3,","            thru: 2,","            times: 2,","            toArray: 1,","            toInteger: 1,","            toLength: 1,","            toLower: 1,","            toNumber: 1,","            toPairs: 1,","            toPairsIn: 1,","            toPath: 1,","            toPlainObject: 1,","            toSafeInteger: 1,","            toString: 1,","            toUpper: 1,","            transform: 3,","            trim: 2,","            trimEnd: 2,","            trimStart: 2,","            truncate: 3,","            unary: 1,","            unescape: 1,","            uniq: 1,","            uniqBy: 2,","            uniqWith: 2,","            uniqueId: 1,","            unset: 2,","            unzip: 1,","            unzipWith: 2,","            update: 3,","            updateWith: 4,","            upperCase: 1,","            upperFirst: 1,","            values: 1,","            valuesIn: 1,","            words: 2,","            wrap: 2,","            zipObject: 2,","            zipObjectDeep: 2","        }","    }","};"],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/ruleUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/ruleUtil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"combineVisitorObjects","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":80},"end":{"line":12,"column":113}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":40}},"7":{"start":{"line":12,"column":4},"end":{"line":14,"column":9}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":52}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":48}},"10":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":16},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":30}}]}},"code":["'use strict';","","var assignWith = require('lodash/assignWith');","var mapValues = require('lodash/mapValues');","var over = require('lodash/over');","","function combineVisitorObjects() {","    for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {","        objects[_key] = arguments[_key];","    }","","    var accumForAllVisitors = assignWith.apply(undefined, [{}].concat(objects, [function (objValue, sourceValue) {","        return (objValue || []).concat(sourceValue);","    }]));","    return mapValues(accumForAllVisitors, over);","}","","module.exports = {","    combineVisitorObjects: combineVisitorObjects","};"],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"12":0,"13":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/3.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/3.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":1616,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","  add: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  after: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  ary: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  assign: {","    aliases: [\"extend\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  at: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  before: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  bind: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  bindAll: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  bindKey: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  callback: {","    aliases: [\"iteratee\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  camelCase: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  capitalize: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  ceil: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  chain: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  chunk: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  clone: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 4","  },","  cloneDeep: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  commit: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  compact: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  concat: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  constant: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  countBy: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  create: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  curry: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  curryRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  debounce: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  deburr: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  defaults: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  defaultsDeep: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  defer: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  delay: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  difference: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  drop: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  dropRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  dropRightWhile: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  dropWhile: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  endsWith: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  escape: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  escapeRegExp: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  every: {","    aliases: [\"all\"],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  fill: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 4","  },","  filter: {","    aliases: [\"select\"],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  find: {","    aliases: [\"detect\"],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findIndex: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findKey: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findLast: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findLastIndex: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findLastKey: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  findWhere: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  first: {","    aliases: [\"head\"],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  flatten: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  flattenDeep: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  floor: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  flow: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  flowRight: {","    aliases: [\"backflow\", \"compose\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  forEach: {","    aliases: [\"each\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  forEachRight: {","    aliases: [\"eachRight\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  forIn: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  forInRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  forOwn: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  forOwnRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  fromIndex: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  functions: {","    aliases: [\"methods\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  get: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  groupBy: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  gt: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  gte: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  has: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  identity: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  inRange: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  includes: {","    aliases: [\"contains\", \"include\"],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  indexBy: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  initial: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  intersection: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  invert: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  invoke: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  isArguments: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isArray: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isBoolean: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isDate: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isElement: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isEmpty: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isEqual: {","    aliases: [\"eq\"],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 4","  },","  isError: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isFinite: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isFunction: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isMatch: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 4","  },","  isNaN: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isNative: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isNull: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isNumber: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isObject: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isPlainObject: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isRegExp: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isTypedArray: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  isUndefined: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  join: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: false,","    iteratee: false","  },","  kebabCase: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  keys: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  keysIn: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  last: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  lastIndexOf: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  lt: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  lte: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  map: {","    aliases: [\"collect\"],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  mapKeys: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  mapValues: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  matches: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  matchesProperty: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  max: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  memoize: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  merge: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  method: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  methodOf: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  min: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  mixin: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  modArgs: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  negate: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  noConflict: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 0","  },","  noop: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 0","  },","  omit: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  once: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  pad: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  padLeft: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  padRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  pairs: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  parseInt: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  partial: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  partialRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  partition: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  pick: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  plant: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  pluck: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  pop: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: false,","    iteratee: false","  },","  property: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  propertyOf: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  pull: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  pullAt: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  push: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  random: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  range: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  rearg: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  reduce: {","    aliases: [\"foldl\", \"inject\"],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: true,","    args: 4","  },","  reduceRight: {","    aliases: [\"foldr\"],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: true,","    args: 4","  },","  reject: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  remove: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  repeat: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  replace: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: false,","    iteratee: false","  },","  rest: {","    aliases: [\"tail\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  restParam: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  result: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: false,","    args: 3","  },","  reverse: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  round: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  runInContext: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  sample: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  set: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  shift: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: false,","    iteratee: false","  },","  shuffle: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  size: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  slice: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  snakeCase: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  some: {","    aliases: [\"any\"],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  sort: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  sortBy: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  sortByAll: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  sortByOrder: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: false","  },","  sortedIndex: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    iterateeIndex: 2,","    args: 4","  },","  sortedLastIndex: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    iterateeIndex: 2,","    args: 4","  },","  splice: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  split: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: false,","    iteratee: false","  },","  spread: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  startCase: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  startsWith: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  sum: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: false,","    iteratee: true,","    args: 3","  },","  take: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  takeRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  takeRightWhile: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  takeWhile: {","    aliases: [],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 3","  },","  tap: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  template: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  throttle: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 3","  },","  thru: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  times: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  toArray: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  toPlainObject: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  transform: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 4","  },","  trim: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  trimLeft: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  trimRight: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  trunc: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 3","  },","  unescape: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  union: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  uniq: {","    aliases: [\"unique\"],","    wrapper: false,","    shorthand: true,","    chainable: true,","    iteratee: true,","    args: 4","  },","  uniqueId: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 1","  },","  unshift: {","    aliases: [],","    wrapper: true,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  unzip: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  unzipWith: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true,","    args: 3","  },","  values: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  valuesIn: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 1","  },","  where: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  without: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  words: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: false,","    iteratee: false,","    args: 2","  },","  wrap: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  xor: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  zip: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false","  },","  zipObject: {","    aliases: [\"object\"],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: false,","    args: 2","  },","  zipWith: {","    aliases: [],","    wrapper: false,","    shorthand: false,","    chainable: true,","    iteratee: true","  }","};"],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/4.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/4.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":2418,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","    add: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    after: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    ary: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    assign: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    assignIn: {","        aliases: [\"extend\"],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    assignInWith: {","        aliases: [\"extendWith\"],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    assignWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    at: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    attempt: {","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false","    },","    before: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    bind: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    bindAll: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    bindKey: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    camelCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    capitalize: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    castArray: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    ceil: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    chain: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    chunk: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    clamp: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    clone: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    cloneDeep: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    cloneDeepWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    cloneWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    commit: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    compact: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    concat: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    cond: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    conforms: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    conformsTo: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    constant: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    countBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    create: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    curry: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    curryRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    debounce: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    deburr: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    defaultTo: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    defaults: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    defaultsDeep: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    defer: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    delay: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    difference: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    differenceBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false","    },","    differenceWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    divide: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    drop: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    dropRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    dropRightWhile: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 3","    },","    dropWhile: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 3","    },","    endsWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    eq: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    escape: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    escapeRegExp: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    every: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    fill: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 4","    },","    filter: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    find: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 3","    },","    findIndex: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 3","    },","    findKey: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    findLast: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 3","    },","    findLastIndex: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 3","    },","    findLastKey: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    flatMap: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    flatMapDeep: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    flatMapDepth: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 3","    },","    flatten: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    flattenDeep: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    flattenDepth: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    flip: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    floor: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    flow: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    flowRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    forEach: {","        aliases: [\"each\"],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    forEachRight: {","        aliases: [\"eachRight\"],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    forIn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    forInRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    forOwn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    forOwnRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    fromPairs: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    functions: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    functionsIn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    get: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    groupBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    gt: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    gte: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    has: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    hasIn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    head: {","        aliases: [\"first\"],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    identity: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    inRange: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    includes: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    indexBy: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true","    },","    indexOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    initial: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    intersection: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    intersectionBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false","    },","    intersectionWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    invert: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    invertBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    invoke: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false","    },","    invokeMap: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    isArguments: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isArray: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isArrayBuffer: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isArrayLike: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isArrayLikeObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isBoolean: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isBuffer: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isDate: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isElement: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isEmpty: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isEqual: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    isEqualWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    isError: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isFinite: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isFunction: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isInteger: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isLength: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isMap: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isMatch: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    isMatchWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    isNaN: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isNative: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isNil: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isNull: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isNumber: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isObjectLike: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isPlainObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isRegExp: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isSafeInteger: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isSet: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isString: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isSymbol: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isTypedArray: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isUndefined: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isWeakMap: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    isWeakSet: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    iteratee: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    join: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    kebabCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    keyBy: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 2","    },","    keys: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    keysIn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    last: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    lastIndexOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    lowerCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    lowerFirst: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    lt: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    lte: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    map: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    mapKeys: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 2","    },","    mapValues: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    matches: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    matchesProperty: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    max: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    maxBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    mean: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    meanBy: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    memoize: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    merge: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    mergeWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    method: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    methodOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    min: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    minBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    mixin: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    multiply: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    negate: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    next: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 0","    },","    noConflict: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    noop: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    now: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    nth: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    nthArg: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    omit: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    omitBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true","    },","    once: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    orderBy: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    over: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    overArgs: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    overEvery: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false","    },","    overSome: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false","    },","    pad: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    padEnd: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    padStart: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    parseInt: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    partial: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    partialRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    partition: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    pick: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    pickBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true","    },","    plant: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    pop: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false","    },","    property: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    propertyOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    pull: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    pullAll: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    pullAllBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false,","        iterateeIndex: 2,","        args: 3","    },","    pullAllWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    pullAt: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    push: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    random: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    range: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    rangeRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    rearg: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    reduce: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 3","    },","    reduceRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 3","    },","    reject: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    remove: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    repeat: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    replace: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false","    },","    rest: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    result: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    reverse: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    round: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    runInContext: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    sample: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    sampleSize: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    set: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    setWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 4","    },","    shift: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false","    },","    shuffle: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    size: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    slice: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    snakeCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    some: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    sort: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    sortBy: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    sortedIndex: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        iterateeIndex: 2,","        args: 2","    },","    sortedIndexBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: false,","        iterateeIndex: 2,","        args: 3","    },","    sortedIndexOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    sortedLastIndex: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        iterateeIndex: 2,","        args: 2","    },","    sortedLastIndexBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: false,","        iterateeIndex: 2,","        args: 3","    },","    sortedLastIndexOf: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    sortedUniq: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    sortedUniqBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    splice: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    split: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    spread: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    startCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    startsWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    stubArray: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    stubFalse: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    stubObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    stubString: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    stubTrue: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    subtract: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    sum: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    sumBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: false,","        iteratee: true,","        args: 2","    },","    tail: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    take: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    takeRight: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    takeRightWhile: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    takeWhile: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    tap: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 2","    },","    template: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    throttle: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    thru: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 2","    },","    times: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: true,","        args: 2","    },","    toArray: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    toFinite: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toInteger: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toLength: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toLower: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toNumber: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toPairs: {","        aliases: ['entries'],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    toPairsIn: {","        aliases: ['entriesIn'],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    toPath: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    toPlainObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    toSafeInteger: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toString: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    toUpper: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    transform: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 3","    },","    trim: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    trimEnd: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    trimStart: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    truncate: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 3","    },","    unary: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    unescape: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    union: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    unionBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: false","    },","    unionWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    uniq: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    uniqBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true,","        args: 2","    },","    uniqWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    uniqueId: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    unset: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    unshift: {","        aliases: [],","        wrapper: true,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    unzip: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    unzipWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: true,","        args: 2","    },","    update: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 3","    },","    updateWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 4","    },","    upperCase: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    upperFirst: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 1","    },","    value: {","        aliases: ['toJSON', 'valueOf'],","        wrapper: true,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 0","    },","    values: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    valuesIn: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 1","    },","    without: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    words: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: false,","        iteratee: false,","        args: 2","    },","    wrap: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    xor: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    xorBy: {","        aliases: [],","        wrapper: false,","        shorthand: true,","        chainable: true,","        iteratee: true","    },","    xorWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    zip: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    },","    zipObject: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    zipObjectDeep: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false,","        args: 2","    },","    zipWith: {","        aliases: [],","        wrapper: false,","        shorthand: false,","        chainable: true,","        iteratee: false","    }","};"],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/convert.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-lodash/node_modules/eslint-plugin-lodash/lib/util/methodDataByVersion/convert.js","s":{"1":1,"2":4,"3":2,"4":0,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[2,2],"2":[0,0],"3":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_toConsumableArray","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":39},"end":{"line":11,"column":57}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":40},"end":{"line":13,"column":55}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":195}},"2":{"start":{"line":4,"column":35},"end":{"line":4,"column":193}},"3":{"start":{"line":4,"column":61},"end":{"line":4,"column":145}},"4":{"start":{"line":4,"column":126},"end":{"line":4,"column":143}},"5":{"start":{"line":4,"column":146},"end":{"line":4,"column":158}},"6":{"start":{"line":4,"column":168},"end":{"line":4,"column":191}},"7":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"8":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"9":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":341}},"12":{"start":{"line":11,"column":0},"end":{"line":28,"column":3}},"13":{"start":{"line":12,"column":4},"end":{"line":20,"column":6}},"14":{"start":{"line":14,"column":12},"end":{"line":14,"column":34}},"15":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":74}},"17":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":46}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":15}},"20":{"start":{"line":29,"column":0},"end":{"line":29,"column":53}},"21":{"start":{"line":30,"column":0},"end":{"line":30,"column":121}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":35},"end":{"line":4,"column":35}},{"start":{"line":4,"column":35},"end":{"line":4,"column":35}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]}},"code":["'use strict';","// aliases wrapper wrapperAliases shorthand chainable iteratee iterateeIndex args","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","var _ = require('lodash');","var data = require('./4');","var fs = require('fs');","var path = require('path');","var methodNames = _([].concat(_toConsumableArray(_.values(data.aliases)), _toConsumableArray(data.wrapper), _toConsumableArray(data.shorthand), _toConsumableArray(data.chainable), _toConsumableArray(data.iteratee.any), _toConsumableArray(_.keys(data.iteratee.differentIndex)), _toConsumableArray(_.keys(data.args)))).uniq().sortBy().value();","var methodRecords = _.map(methodNames, function (method) {","    var res = {","        aliases: _(data.aliases).pickBy(function (val) {","            return val === method;","        }).keys().value(),","        wrapper: _.includes(data.wrapper, method),","        shorthand: _.includes(data.shorthand, method),","        chainable: _.includes(data.chainable, method),","        iteratee: _.includes(data.iteratee.any, method)","    };","    if (_.has(data.iteratee.differentIndex, method)) {","        _.set(res, 'iterateeIndex', data.iteratee.differentIndex[method]);","    }","    if (_.has(data.args, method)) {","        _.set(res, 'args', data.args[method]);","    }","    return res;","});","var result = _.zipObject(methodNames, methodRecords);","fs.writeFileSync(path.resolve(__dirname, '4.js'), '\\'use strict\\'\\nmodule.exports = ' + JSON.stringify(result, null, 2));"],"l":{"4":4,"6":2,"7":2,"8":2,"9":2,"10":2,"11":0,"12":0,"14":0,"21":0,"22":0,"24":0,"25":0,"27":0,"29":0,"30":0}}}